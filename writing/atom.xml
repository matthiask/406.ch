<?xml version='1.0' encoding='utf-8'?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom"><title>Matthias Kestenholz</title><link href="https://406.ch/writing/atom.xml" rel="self" /><link href="https://406.ch/" rel="alternate" /><id>https://406.ch/</id><updated>2025-09-10T12:00:00Z</updated><author><name>Matthias Kestenholz</name></author><entry><title>Weeknotes (2025 week 37)</title><link href="https://406.ch/writing/weeknotes-2025-week-37/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-37/</id><published>2025-09-10T12:00:00Z</published><updated>2025-09-10T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-37"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-37"&gt;Weeknotes (2025 week 37)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m having a slow week after the last wisdom tooth extraction. Finally! I&amp;rsquo;m slowly recuperating from that.&lt;/p&gt;
&lt;p&gt;Also, I&amp;rsquo;m trying to split up the blog posts a bit and writing more standalone pieces instead of putting everything into weeknotes. This seems like a good idea to publish more, and should also help me when I try to find a particular piece of writing later.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 8.0.2&lt;/a&gt;: I fixed the ordering calculation in the cloning functionality; the tests are a bit too forgiving for my taste now but I just can&amp;rsquo;t figure out why the gap for inserting cloned items is sometimes larger than it should be. It doesn&amp;rsquo;t matter though, since ordering values do not have any significance, they only have to provide a definite ordering for content items.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.18.2&lt;/a&gt;: Cleaned up the documentation after the 0.18 cleanup (where automatic dependency management has been removed), fixed table styles when using dark mode.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2025 week 35)</title><link href="https://406.ch/writing/weeknotes-2025-week-35/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-35/</id><published>2025-08-29T12:00:00Z</published><updated>2025-08-29T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-35"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-35"&gt;Weeknotes (2025 week 35)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Summer was and is nice. The hot days seem to be over (for now), but in the last
years summer hasn&amp;rsquo;t really left until the end of September, so we&amp;rsquo;ll see. I
personally like the warm weather but I really hoped that our leaders were
smarter. The &lt;a href="https://406.ch/writing/category-climate/"&gt;climate emergency&lt;/a&gt;
could be seen from far away. The pigheadedness is hard to stomach. And of
course it&amp;rsquo;s not the only problem we&amp;rsquo;re facing as humanity at all.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I did some longer-form writing about two of the releases here: &lt;a href="https://406.ch/writing/menu-improvements-in-django-prose-editor/"&gt;Menu improvements in django-prose-editor&lt;/a&gt; and &lt;a href="https://406.ch/writing/django-content-editor-cloning/"&gt;django-content-editor now supports cloning of content&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 6.0&lt;/a&gt;:
  We have released a new version of the toolbar which supports persisting
  debugging data to the database. This is especially useful when using ASGI,
  because we cannot use threadlocal storage for this data then.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.18&lt;/a&gt;:
  Reworked the menu system to support dropdowns, not just button groups. Added
  a custom &lt;code&gt;TextClass&lt;/code&gt; extension which allows adding classes to spans and a
  &lt;code&gt;NodeClass&lt;/code&gt; extension which allows adding classes to nodes. Tiptap supports
  adding arbitrary styles, I&amp;rsquo;d rather limit this a bit more and only offer
  predefined CSS classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 8.0&lt;/a&gt;:
  Added support for cloning content. Made the region tabs stick to the top of
  the browser window.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.18&lt;/a&gt;: Improved the
  folder deletion interface slightly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-mptt/"&gt;django-mptt 0.18&lt;/a&gt;: I still seem to be maintaining the project even though I officially marked the project as unmaintained &lt;a href="https://github.com/django-mptt/django-mptt/commit/6f6c1c485f3adc1d579f8d22e0279ce1d52334f6"&gt;more than 4 years ago&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>django-content-editor now supports cloning of content</title><link href="https://406.ch/writing/django-content-editor-cloning/" rel="alternate" /><id>https://406.ch/writing/django-content-editor-cloning/</id><published>2025-08-27T12:00:00Z</published><updated>2025-08-27T12:00:00Z</updated><summary type="html">&lt;h1 id="django-content-editor-now-supports-cloning-of-content"&gt;&lt;a class="toclink" href="#django-content-editor-now-supports-cloning-of-content"&gt;django-content-editor now supports cloning of content&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="what-is-the-content-editor"&gt;&lt;a class="toclink" href="#what-is-the-content-editor"&gt;What is the content editor?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Djangoâ€™s builtin admin application provides a really good and usable
administration interface for creating and updating content.
&lt;code&gt;django-content-editor&lt;/code&gt; extends Django&amp;rsquo;s inlines mechanism with an interface
and tools for managing and rendering heterogenous collections of content as are
often necessary for content management systems.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://feinheit.ch"&gt;We&lt;/a&gt; are using &lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor&lt;/a&gt; in basically all projects, as a part of &lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3&lt;/a&gt;. The content editor is used not only for building page content, but also for blog entries, for &lt;a href="https://github.com/feincms/feincms3-forms"&gt;building multi-step intelligent form wizards&lt;/a&gt;, for &lt;a href="https://feinheit.ch/projekte/finance-mission-world/"&gt;learning units&lt;/a&gt; and even to digitize teaching materials for schools, including static and interactive content.&lt;/p&gt;
&lt;p&gt;The great thing about it is that it enables us to edit complex content inside Django&amp;rsquo;s administration interface without trying to replace it with a completely separate interface, as some other more well-known Django-based CMS want to do.&lt;/p&gt;
&lt;h2 id="cloning-content"&gt;&lt;a class="toclink" href="#cloning-content"&gt;Cloning content&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The complexity of managed content has grown a bit, especially since we introduced support for &lt;a href="https://406.ch/writing/django-content-editor-now-supports-nested-sections/"&gt;nesting sections&lt;/a&gt;. Teaching materials are often available in several learning levels, with only minor differences between them. Unfortunately, the differences aren&amp;rsquo;t purely additive: It&amp;rsquo;s not the case that higher levels just have more materials available. Otherwise, we&amp;rsquo;d probably have used a level on content items to hide content which shouldn&amp;rsquo;t be shown to students. Content is sometimes totally different. Because of this we&amp;rsquo;re using content editor&amp;rsquo;s &lt;strong&gt;regions&lt;/strong&gt; for the learning level, one region per level.&lt;/p&gt;
&lt;p&gt;Even then, the basic structure is often the same and building that manually for all levels is annoying at best. That&amp;rsquo;s why I finally got the occasion to add support for cloning content between regions to the editor.&lt;/p&gt;
&lt;p&gt;Of course, cloning should also take the other features into account and allow selecting sections as a whole instead of having to select individual items. Here&amp;rsquo;s a screenshot of the current interface:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot showing the content cloning interface" src="/assets/20250827-content-editor-cloning.png" /&gt;&lt;/p&gt;
&lt;h2 id="closing-thoughts"&gt;&lt;a class="toclink" href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m still really happy with the content editor; I wish the Django admin would look a little bit nicer because then people would probably be more encouraged to actually learn how powerful it is. The first impression is unfortunately that it looks old and a bit too technical, but in my experience working with many many customers it&amp;rsquo;s not really the case. Most people are immediately able to work with it and find the interface well structured and appreciate the no bullshit attitude, because working with it really is efficient.&lt;/p&gt;</summary></entry><entry><title>Menu improvements in django-prose-editor</title><link href="https://406.ch/writing/menu-improvements-in-django-prose-editor/" rel="alternate" /><id>https://406.ch/writing/menu-improvements-in-django-prose-editor/</id><published>2025-08-23T12:00:00Z</published><updated>2025-08-23T12:00:00Z</updated><summary type="html">&lt;h1 id="menu-improvements-in-django-prose-editor"&gt;&lt;a class="toclink" href="#menu-improvements-in-django-prose-editor"&gt;Menu improvements in django-prose-editor&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have repeatedly mentioned the &lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor&lt;/a&gt; project in my &lt;a href="https://406.ch/writing/category-weeknotes/"&gt;weeknotes&lt;/a&gt; but I haven&amp;rsquo;t written a proper post about it since &lt;a href="https://406.ch/writing/rebuilding-django-prose-editor-from-the-ground-up/"&gt;rebuilding it on top of Tiptap at the end of 2024&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Much has happened in the meantime. A lot of work went into the menu system (as alluded to in the title of this post), but by no means does that cover all the work. As always, the &lt;a href="https://django-prose-editor.readthedocs.io/en/latest/changelog.html"&gt;CHANGELOG&lt;/a&gt; is the authoritative source.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0.11&lt;/strong&gt; introduced HTML sanitization which only allows HTML tags and attributes which can be added through the editor interface. Previously, we used &lt;a href="https://nh3.readthedocs.io/"&gt;nh3&lt;/a&gt; to clean up HTML and protect against XSS, but now we can be much more strict and use a restrictive allowlist.&lt;/p&gt;
&lt;p&gt;We also switched to using &lt;a href="https://406.ch/writing/django-javascript-modules-and-importmaps/"&gt;ES modules and importmaps&lt;/a&gt; in the browser.&lt;/p&gt;
&lt;p&gt;Last but not least 0.11 also introduced end-to-end testing using &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main feature in &lt;strong&gt;0.12&lt;/strong&gt; was the switch to Tiptap 3.0 which fixed problems with shared extension storage when using several prose editors on the same page.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;0.13&lt;/strong&gt; we switched from &lt;a href="https://esbuild.github.io/"&gt;esbuild&lt;/a&gt; to &lt;a href="https://lib.rsbuild.dev/"&gt;rslib&lt;/a&gt;. Esbuild&amp;rsquo;s configuration is nicer to look at, but rslib is built on the very powerful &lt;a href="https://rspack.dev/"&gt;rspack&lt;/a&gt; which I&amp;rsquo;m using everywhere.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;0.14&lt;/strong&gt;, &lt;strong&gt;0.15&lt;/strong&gt; and &lt;strong&gt;0.16&lt;/strong&gt; the &lt;code&gt;Menu&lt;/code&gt; extension was made more reusable and the way extension can register their own menu items was reworked.&lt;/p&gt;
&lt;p&gt;The upcoming &lt;strong&gt;0.17&lt;/strong&gt; release (alpha releases are available and I&amp;rsquo;m using them in production right now!) is a larger release again and introduces a completely reworked menu system. The menu now not only supports button groups and dialogs but also dropdowns directly in the toolbar. This allows for example showing a dropdown for block types:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot showing prose editor dropdowns" src="/assets/20250823-prose-editor-dropdowns.png" /&gt;&lt;/p&gt;
&lt;p&gt;The styles are the same as those used in the editor interface.&lt;/p&gt;
&lt;p&gt;The same interface can not only be used for HTML elements, but also for HTML
classes. Tiptap has a
&lt;a href="https://tiptap.dev/docs/editor/extensions/functionality/text-style-kit"&gt;TextStyle&lt;/a&gt;
extension which allows using inline styles; I&amp;rsquo;d rather have a more restricted
way of styling spans, and the prose editor &lt;code&gt;TextClass&lt;/code&gt; extension does just
that: It allows applying a list of predefined CSS classes to &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; elements. Of course the dropdown also shows the resulting presentation if you provide the necessary CSS to the admin interface.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2025 week 27)</title><link href="https://406.ch/writing/weeknotes-2025-week-27/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-27/</id><published>2025-07-05T12:00:00Z</published><updated>2025-07-05T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-27"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-27"&gt;Weeknotes (2025 week 27)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have again missed a few weeks, so the releases section will be longer than usual since it covers six weeks.&lt;/p&gt;
&lt;h2 id="django-prose-editor"&gt;&lt;a class="toclink" href="#django-prose-editor"&gt;django-prose-editor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have totally restructured the documentation to make it clearer. The &lt;a href="https://django-prose-editor.readthedocs.io/en/latest/configuration.html"&gt;configuration chapter&lt;/a&gt; is shorter and more focussed, and the &lt;a href="https://django-prose-editor.readthedocs.io/en/latest/custom_extensions.html"&gt;custom extensions chapter&lt;/a&gt; actually shows all required parts now.&lt;/p&gt;
&lt;p&gt;The most visible change is probably the refactored menu system. Extensions now
have an &lt;code&gt;addMenuItems&lt;/code&gt; method where they can add their own buttons to the menu
bar. I wanted to do this for a long time but have only just this week found a
way to achieve this which I actually like.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve reported a bug to Tiptap where a &lt;code&gt;.can()&lt;/code&gt; chain always succeeded even though the actual operation could fail (&lt;a href="https://github.com/ueberdosis/tiptap/issues/6306"&gt;#6306&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Finally, I have also switched from &lt;a href="https://esbuild.github.io/"&gt;esbuild&lt;/a&gt; to
&lt;a href="https://rslib.rs/"&gt;rslib&lt;/a&gt;; I&amp;rsquo;m a heavy user of rspack anyway and am more at
home with its configuration.&lt;/p&gt;
&lt;h2 id="django-content-editor"&gt;&lt;a class="toclink" href="#django-content-editor"&gt;django-content-editor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The 7.4 release mostly contains minor changes, one new feature is the
&lt;code&gt;content_editor.admin.RefinedModelAdmin&lt;/code&gt; class. It includes tweaks to Django&amp;rsquo;s
standard behavior such as supporting a &lt;code&gt;Ctrl-S&lt;/code&gt; shortcut for the &amp;ldquo;Save and
continue editing&amp;rdquo; functionality and an additional warning when people want to
delete inlines and instead delete the whole object. This seems to happen often
even though people are shown the full list of objects which will be deleted.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.15&lt;/a&gt;: See above&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.4.1&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.5.1&lt;/a&gt;: Now supports customizing the prose editor configuration (when using &lt;code&gt;format: "prose"&lt;/code&gt;) and also includes validation support for foreign key references in the JSON data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.6&lt;/a&gt;: The sanitizer started crashing when used with &lt;code&gt;lxml&amp;gt;=6&lt;/code&gt; when being fed strings with control characters inside.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django_recent_objects/"&gt;django-recent-objects 0.1.1&lt;/a&gt;: Changed the code to use &lt;code&gt;UNION ALL&lt;/code&gt; instead of &lt;code&gt;UNION&lt;/code&gt; when determining which objects to fetch from all tables.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.4.1&lt;/a&gt;: Added experimental support for rendering sections. Sections can be nested, so they are more powerful than subregions. Also, added warnings when registering plugin proxies for rendering &lt;em&gt;and&lt;/em&gt; fetching, since that will mostly likely lead to duplicated objects in the rendered output.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.20&lt;/a&gt;: Added &lt;code&gt;tree_info&lt;/code&gt; and &lt;code&gt;recursetree&lt;/code&gt; template tags. Optimized the performance by avoiding the rank table if easily possible. Added stronger recommendations to pre-filter the table using &lt;code&gt;.tree_filter()&lt;/code&gt; or &lt;code&gt;.tree_exclude()&lt;/code&gt; when working with small subsets of large datasets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-ckeditor/"&gt;django-ckeditor 6.7.3&lt;/a&gt;: Added a trove identifeir for recent Django versions. It still works fine, but it&amp;rsquo;s deprecated and shouldn&amp;rsquo;t be used since it still uses the unmaintained CKEditor 4 line (since we do not ship the commercial LTS version).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.6.1&lt;/a&gt;: Golfed the generated CSS and JavaScript bundle down to below 4000 bytes again, including the YouTube/Vimeo/etc. wrapper which only loads external content when users consent.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Preserving referential integrity with JSON fields and Django</title><link href="https://406.ch/writing/preserving-referential-integrity-with-json-fields-and-django/" rel="alternate" /><id>https://406.ch/writing/preserving-referential-integrity-with-json-fields-and-django/</id><published>2025-06-04T12:00:00Z</published><updated>2025-06-04T12:00:00Z</updated><summary type="html">&lt;h1 id="preserving-referential-integrity-with-json-fields-and-django"&gt;&lt;a class="toclink" href="#preserving-referential-integrity-with-json-fields-and-django"&gt;Preserving referential integrity with JSON fields and Django&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="motivation"&gt;&lt;a class="toclink" href="#motivation"&gt;Motivation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The great thing about using &lt;a href="https://feincms3.readthedocs.io/"&gt;feincms3&lt;/a&gt; and
&lt;a href="https://django-content-editor.readthedocs.io/"&gt;django-content-editor&lt;/a&gt; is that
CMS plugins are Django models &amp;ndash; if using them you immediately have access to
the power of Django&amp;rsquo;s ORM and Django&amp;rsquo;s administration interface.&lt;/p&gt;
&lt;p&gt;However, using one model per content type can be limiting on larger sites.
Because of this &lt;a href="https://feinheit.ch/"&gt;we&lt;/a&gt; like using JSON plugins with
schemas for more fringe use cases or for places where we have richer data but
do not want to write a separate Django app for it. This works well as long as
you only work with text, numbers etc. but gets a bit ugly once you start
referencing Django models because you never know if those objects are still
around when actually using the data stored in those JSON fields.&lt;/p&gt;
&lt;p&gt;Django has a nice
&lt;a href="https://docs.djangoproject.com/en/5.2/ref/models/fields/#django.db.models.ForeignKey.on_delete"&gt;&lt;code&gt;on_delete=models.PROTECT&lt;/code&gt;&lt;/a&gt;
feature, but that of course only works when using real models. So, let&amp;rsquo;s bridge
this gap and allow using foreign key protection with data stored in JSON
fields!&lt;/p&gt;
&lt;h2 id="models"&gt;&lt;a class="toclink" href="#models"&gt;Models&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, you have to start using the
&lt;a href="https://github.com/matthiask/django-json-schema-editor"&gt;django-json-schema-editor&lt;/a&gt;
and specifically its &lt;code&gt;JSONField&lt;/code&gt; instead of the standard Django &lt;code&gt;JSONField&lt;/code&gt;. The most important difference between those two is that the schema editor&amp;rsquo;s field wants a JSON schema. So, for the sake of an example, let&amp;rsquo;s assume that we have a model with images and a model with galleries. Note that we&amp;rsquo;re omitting many of the fields actually making the interface nice such as titles etc.&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django.db&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django_json_schema_editor.fields&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSONField&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;gallery_schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;object&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;properties&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;images&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;minItems&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;items&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;foreign_key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;options&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="c1"&gt;# raw_id_fields URL:&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/admin/myapp/image/?_popup=1&amp;amp;_to_field=id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Gallery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSONField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gallery_schema&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, if we were to do it by hand, we&amp;rsquo;d define a &lt;code&gt;through&lt;/code&gt; model for a
&lt;code&gt;ManyToManyField&lt;/code&gt; linking galleries to images, and adding a
&lt;code&gt;on_delete=models.PROTECT&lt;/code&gt; foreign key to this through model&amp;rsquo;s &lt;code&gt;image&lt;/code&gt; foreign
key and we would be updating this many to many table when the &lt;code&gt;Gallery&lt;/code&gt; object
changes. Since that&amp;rsquo;s somewhat &lt;a href="https://github.com/matthiask/django-json-schema-editor/blob/4bc1ab0cf44eda4c0e824f96f2bd08cd94832c1c/django_json_schema_editor/fields.py#L9-L47"&gt;boring but also tricky code&lt;/a&gt; I have already written it (including unit tests of course) and all that&amp;rsquo;s left to do is define the linking:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Gallery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register_data_reference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c1"&gt;# The model we&amp;#39;re referencing:&lt;/span&gt;
    &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# The name of the ManyToManyField:&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;images&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# The getter which returns a list of stringified primary key values or nothing:&lt;/span&gt;
    &lt;span class="n"&gt;getter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;images&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, attempting to delete an image which is still used in a gallery somewhere will raise &lt;a href="https://docs.djangoproject.com/en/5.2/ref/exceptions/#django.db.models.ProtectedError"&gt;ProtectedError&lt;/a&gt; exceptions. That&amp;rsquo;s what we wanted to achieve.&lt;/p&gt;
&lt;h2 id="using-a-gallery-instance"&gt;&lt;a class="toclink" href="#using-a-gallery-instance"&gt;Using a gallery instance&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When you have a gallery instance you can now use the &lt;code&gt;images&lt;/code&gt; field to fetch
all images and use the order from the JSON data:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;gallery_context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gallery&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;gallery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gallery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;images&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pk&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;gallery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;images&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="jsonpluginbase-and-jsonplugininline"&gt;&lt;a class="toclink" href="#jsonpluginbase-and-jsonplugininline"&gt;JSONPluginBase and JSONPluginInline&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I would generally do the instantiation of models slightly differently and use
&lt;code&gt;django-json-schema-editor&lt;/code&gt;&amp;rsquo;s &lt;code&gt;JSONPluginBase&lt;/code&gt; and &lt;code&gt;JSONPluginInline&lt;/code&gt; which
offer additional niceties such as streamlined JSON models with only one backing database table (using &lt;a href="https://docs.djangoproject.com/en/5.2/topics/db/models/#proxy-models"&gt;proxy
models&lt;/a&gt;) and supporting not just showing the primary key of referenced model instances but also their &lt;code&gt;__str__&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;The example above would have to be changed to look more like this:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django_json_schema_editor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSONPluginBase&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;JSONPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JSONPluginBase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;JSONPlugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register_data_reference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Gallery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSONPlugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gallery&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gallery_schema&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, that&amp;rsquo;s not documented yet so for now you unfortunately have to read
the &lt;a href="https://github.com/matthiask/django-json-schema-editor"&gt;code and the test
suite&lt;/a&gt;, sorry for that.
It&amp;rsquo;s used heavily in production though so if you start using it it won&amp;rsquo;t
suddenly start breaking in the future.&lt;/p&gt;</summary></entry><entry><title>How I'm bundling frontend assets using Django and rspack these days</title><link href="https://406.ch/writing/how-i-m-bundling-frontend-assets-using-django-and-rspack-these-days/" rel="alternate" /><id>https://406.ch/writing/how-i-m-bundling-frontend-assets-using-django-and-rspack-these-days/</id><published>2025-05-26T12:00:00Z</published><updated>2025-05-26T12:00:00Z</updated><summary type="html">&lt;h1 id="how-im-bundling-frontend-assets-using-django-and-rspack-these-days"&gt;&lt;a class="toclink" href="#how-im-bundling-frontend-assets-using-django-and-rspack-these-days"&gt;How I&amp;rsquo;m bundling frontend assets using Django and rspack these days&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I last wrote about configuring Django with bundlers in 2018: &lt;a href="https://406.ch/writing/our-approach-to-configuring-django-webpack-and-manifeststaticfilesstorage/"&gt;Our approach to configuring Django, Webpack and ManifestStaticFilesStorage&lt;/a&gt;. An update has been a long time coming. I wanted to write this down for a while already, but each time I started explaining how configuring rspack is actually nice I look at the files we&amp;rsquo;re using and switch to writing about something else. This time I managed to get through &amp;ndash; it&amp;rsquo;s not that bad, I promise.&lt;/p&gt;
&lt;p&gt;This is quite a long post. A project where all of this can be seen in action is &lt;a href="https://github.com/matthiask/traduire/"&gt;Traduire&lt;/a&gt;, a platform for translating gettext catalogs. I announced it on the &lt;a href="https://forum.djangoproject.com/t/traduire-a-platform-for-editing-gettext-translations-on-the-web/32687"&gt;Django forum&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="our-requirements"&gt;&lt;a class="toclink" href="#our-requirements"&gt;Our requirements&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The requirements were still basically the same:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hot module reloading during development&lt;/li&gt;
&lt;li&gt;A process which produces hashed filenames depending on their content so that
  we can use far-future expiry headers to cache assets in browsers&lt;/li&gt;
&lt;li&gt;While running Node.js in development is fine we do not want Node.js on the
  server (in the general case)&lt;/li&gt;
&lt;li&gt;We still want transpiling and bundling for now&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have old projects using SASS. These days we&amp;rsquo;re only using PostCSS
(especially &lt;a href="https://github.com/postcss/autoprefixer"&gt;autoprefixer&lt;/a&gt; and maybe
&lt;a href="https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-nesting"&gt;postcss-nesting&lt;/a&gt;.
Rewriting everything is out of the question, so we needed a tool which handled
all that as well.&lt;/p&gt;
&lt;p&gt;People in the frontend space seem to like tools like Vite or Next.js a lot. I
have also looked at Parcel, esbuild, rsbuild and others. Either they didn&amp;rsquo;t
support our old projects, were too limited in scope (e.g. no HMR), too
opinionated or I hit bugs or had questions about their maintenance. I&amp;rsquo;m sure
all of them are great for some people, and I don&amp;rsquo;t intend to talk badly about
any of them!&lt;/p&gt;
&lt;p&gt;In the end, the flexibility, speed and trustworthiness of
&lt;a href="https://rspack.dev/"&gt;rspack&lt;/a&gt; won me over even though I have a love-hate
relationship with the Webpack/rspack configuration. We already had a reusable
library of configuration snippets for webpack though and moving that library
over to rspack was straightforward.&lt;/p&gt;
&lt;p&gt;That being said, configuring rspack from scratch is no joke, that&amp;rsquo;s why tools
such as &lt;a href="https://rsbuild.dev/"&gt;rsbuild&lt;/a&gt; exist. If you already know Webpack well
or really need the flexibility, going low level can be good.&lt;/p&gt;
&lt;h2 id="high-level-project-structure"&gt;&lt;a class="toclink" href="#high-level-project-structure"&gt;High-level project structure&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The high-level overview is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Frontend assets live in their own folder, &lt;code&gt;frontend/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;re using &lt;a href="https://www.fabfile.org/"&gt;fabric&lt;/a&gt; and
  &lt;a href="https://rspack.dev/"&gt;rspack&lt;/a&gt;, their configuration resides in the root folder
  of the project as does Django&amp;rsquo;s &lt;code&gt;manage.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The frontend is transpiled and bundled directly into &lt;code&gt;static/&lt;/code&gt; for production and into &lt;code&gt;tmp/&lt;/code&gt; during development.&lt;/li&gt;
&lt;li&gt;We use the HTML plugin of rspack to emit snippets containing &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags. The HTML snippet can be included as-is, without any postprocessing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frontend/&lt;/code&gt; or &lt;code&gt;frontend/static&lt;/code&gt; is optionally added to &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; so that some of the files from the frontend can easily be referenced in &lt;code&gt;{% static %}&lt;/code&gt; tags.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During development:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We use the dev server of rspack/node to handle &lt;code&gt;127.0.0.1:8000&lt;/code&gt;. This server handles requests for frontend assets and the websocket for hot module reloading and proxies everything else to the Django backend running on a different random port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During deployment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The assets are compiled to &lt;code&gt;static/&lt;/code&gt; and either rsynced to the server or added to the container separately from the standard &lt;code&gt;./manage.py collectstatic --noinput&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In production:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Separate cache busting filenames from &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; and rspack allow us to set far-future expiry headers on all static assets.&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m serving static assets from the same origin as the website itself. (rspack can be configured for different requirements!)&lt;/li&gt;
&lt;li&gt;I don&amp;rsquo;t worry anymore about duplicating assets which are both referenced from frontend code and backend code. This doesn&amp;rsquo;t affect many assets after all.&lt;/li&gt;
&lt;li&gt;The HTML snippet is loaded once only.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="example-configuration"&gt;&lt;a class="toclink" href="#example-configuration"&gt;Example configuration&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s an example configuration which works well for us. What follows is the
rspack configuration itself, building on our snippet library
&lt;code&gt;rspack.library.js&lt;/code&gt;. We mostly do not change anything in here except for the
list of PostCSS plugins:&lt;/p&gt;
&lt;p&gt;rspack.config.js:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;devServer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;assetRule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;postcssRule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;swcWithPreactRule&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./rspack.library.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;production&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;devServer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;devServer&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;backendPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backend&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;assetRule&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;postcssRule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;postcss-nesting&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;autoprefixer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;swcWithPreactRule&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The default entry point is &lt;code&gt;main&lt;/code&gt; and loads &lt;code&gt;frontend/main.js&lt;/code&gt;. The rest of the
JavaScript and styles are loaded from there.&lt;/p&gt;
&lt;p&gt;The HTML snippet loader works by adding &lt;code&gt;WEBPACK_ASSETS = BASE_DIR / "static"&lt;/code&gt; to the Django settings and adding the following tags to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of the website, most often in &lt;code&gt;base.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;webpack_assets&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;webpack_assets&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;main&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The corresponding template tag in &lt;code&gt;webpack_assets.py&lt;/code&gt; follows:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;functools&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django.conf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django.utils.html&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;mark_safe&lt;/span&gt;

&lt;span class="n"&gt;register&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;webpack_assets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tmp&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;static&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.html&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;mark_safe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;webpack_assets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webpack_assets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;simple_tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webpack_assets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Last but not least, the fabfile contains the following task definition:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;jobs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.venv/bin/python manage.py runserver &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;HOST=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; PORT=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; yarn run rspack serve --mode=development --env backend=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c1"&gt;# Run these two jobs at the same time:&lt;/span&gt;
    &lt;span class="n"&gt;_concurrently&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The fh-fablib repository contains the &lt;a href="https://github.com/feinheit/fh-fablib/blob/8109a76b63b37d3433356fabb4469263f8b18d66/fh_fablib/__init__.py#L194-L214"&gt;&lt;code&gt;_concurrently&lt;/code&gt;&lt;/a&gt; implementation we&amp;rsquo;re using at this time.&lt;/p&gt;
&lt;h2 id="the-library-which-enables-the-nice-configuration-above"&gt;&lt;a class="toclink" href="#the-library-which-enables-the-nice-configuration-above"&gt;The library which enables the nice configuration above&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Of course, the whole library of snippets has to be somewhere. The fabfile automatically updates the library when we release a new version, and the library is the same in all the dozens of projects we&amp;rsquo;re working on. Here&amp;rsquo;s the current version of &lt;code&gt;rspack.library.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;node:path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;html-webpack-plugin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rspack&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;@rspack/core&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;node:assert/strict&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;semver&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;semver&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;semver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;satisfies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rspack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rspackVersion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;=1.1.3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rspack outdated&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;truthy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PRODUCTION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;swcWithPreactRule&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sr"&gt;/\.(j|t)sx?$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;builtin:swc-loader&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;jsc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;syntax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ecmascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;jsx&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nx"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;automatic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nx"&gt;importSource&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;preact&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;externalHelpers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;javascript/auto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;swcWithReactRule&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sr"&gt;/\.(j|t)sx?$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;builtin:swc-loader&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;jsc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;syntax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ecmascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;jsx&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nx"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;automatic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="c1"&gt;// importSource: &amp;quot;preact&amp;quot;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;externalHelpers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;javascript/auto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;htmlPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;.html`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[name].html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;inject&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;templateContent&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;htmlWebpackPlugin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;htmlWebpackPlugin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headTags&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;htmlSingleChunkPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;htmlPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;chunks&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;postcssLoaders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rspack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CssExtractRspackPlugin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;css-loader&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;postcss-loader&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;postcssOptions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;cssExtractPlugin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rspack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CssExtractRspackPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PRODUCTION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[name].[contenthash].css&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[name].css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;chunkFilename&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PRODUCTION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[name].[contenthash].css&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[name].css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;truthy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;frontend&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./main.js&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;clean&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PRODUCTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PRODUCTION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;static&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tmp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;publicPath&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/static/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PRODUCTION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[name].[contenthash].js&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[name].js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// Same as the default but prefixed with &amp;quot;_/[name].&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;assetModuleFilename&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_/[name].[hash][ext][query][fragment]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;truthy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cssExtractPlugin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;htmlSingleChunkPlugin&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;browserslist:defaults&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;devServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;proxySettings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;hot&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;allowedHosts&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;all&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;overlay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;warnings&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;runtimeErrors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;devMiddleware&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Access-Control-Allow-Origin&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;writeToDisk&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html$&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;proxySettings&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`http://127.0.0.1:&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;proxySettings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backendPort&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;assetRule&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sr"&gt;/\.(png|webp|woff2?|svg|eot|ttf|otf|gif|jpe?g|mp3|wav)$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;asset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;dataUrlCondition&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;maxSize&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;512&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/* bytes */&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;postcssRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cfg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sr"&gt;/\.css$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;javascript/auto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;postcssLoaders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cfg&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;sassRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;cssLoaders&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;cssLoaders&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;cssLoaders&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;postcssLoaders&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;autoprefixer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sr"&gt;/\.scss$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;cssLoaders&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sass-loader&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nx"&gt;sassOptions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;includePaths&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;node_modules&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))],&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;javascript/auto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;swcWithPreactRule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;swcWithReactRule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;resolvePreactAsReact&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;preact/compat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;react-dom/test-utils&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;preact/test-utils&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;react-dom&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;preact/compat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// Must be below test-utils&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;react/jsx-runtime&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;preact/jsx-runtime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;htmlPlugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;htmlSingleChunkPlugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;postcssLoaders&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;cssExtractPlugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="closing-thoughts"&gt;&lt;a class="toclink" href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Several utilities from this library aren&amp;rsquo;t used in the example above, for
example the &lt;code&gt;sassRule&lt;/code&gt; or the HTML plugin utilities which are useful when you
require several entry points on your website, e.g. an entry point for the
public facing website and an entry point for a dashboard used by members of the
staff.&lt;/p&gt;
&lt;p&gt;Most of the code in here is freely available in our
&lt;a href="https://github.com/feinheit/fh-fablib"&gt;fh-fablib&lt;/a&gt; repo under an open source
license. Anything in this blog post can also be used under the
&lt;a href="https://creativecommons.org/public-domain/cc0/"&gt;CC0&lt;/a&gt; license, so feel free to
steal everything. If you do, I&amp;rsquo;d be happy to hear your thoughts about this
post, and please share your experiences and suggestions for improvement &amp;ndash; if
you have any!&lt;/p&gt;</summary></entry><entry><title>Django, JavaScript modules and importmaps</title><link href="https://406.ch/writing/django-javascript-modules-and-importmaps/" rel="alternate" /><id>https://406.ch/writing/django-javascript-modules-and-importmaps/</id><published>2025-05-22T12:00:00Z</published><updated>2025-05-22T12:00:00Z</updated><summary type="html">&lt;h1 id="how-im-using-django-javascript-modules-and-importmaps-together"&gt;&lt;a class="toclink" href="#how-im-using-django-javascript-modules-and-importmaps-together"&gt;How I&amp;rsquo;m using Django, JavaScript modules and importmaps together&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have been spending a lot of time in the last few months working on
&lt;a href="https://github.com/matthiask/django-prose-editor/"&gt;django-prose-editor&lt;/a&gt;. First
I&amp;rsquo;ve rebuilt the editor on top of
&lt;a href="https://406.ch/writing/rebuilding-django-prose-editor-from-the-ground-up/"&gt;Tiptap&lt;/a&gt;
because I wanted a framework for extending the underlying
&lt;a href="https://prosemirror.net/"&gt;ProseMirror&lt;/a&gt; and didn&amp;rsquo;t want to reinvent this
particular wheel. While doing that work I noticed that using JavaScript modules
in the browser would be really nice, but Django&amp;rsquo;s &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;
doesn&amp;rsquo;t yet support rewriting &lt;code&gt;import&lt;/code&gt; statement in modules out-of-the-box
without opting into the experimental support accessible through subclassing the
storage. A better way to use JavaScript modules with the cache busting offered
by &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; would be
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap"&gt;importmaps&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="motivation"&gt;&lt;a class="toclink" href="#motivation"&gt;Motivation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Developing Django applications that include JavaScript has always been challenging when it comes to properly distributing, loading, and versioning those assets. The traditional approach using Django&amp;rsquo;s &lt;code&gt;forms.Media&lt;/code&gt; works well for simple use cases, but falls short when dealing with modern JavaScript modules.&lt;/p&gt;
&lt;p&gt;The ability to ship reusable JavaScript utilities in third-party Django apps has been a pain point for years. Often developers resort to workarounds like bundling all JS into a single file, using jQuery-style global variables, or requiring complex build processes for consumers of their apps.&lt;/p&gt;
&lt;p&gt;Importmaps offer a cleaner solution that works with native browser modules, supports cache busting, and doesn&amp;rsquo;t require complex bundling for simple use cases.&lt;/p&gt;
&lt;h2 id="the-history"&gt;&lt;a class="toclink" href="#the-history"&gt;The history&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The conversation around better JavaScript handling in Django has been ongoing for years. Thibaud Colas&amp;rsquo; &lt;a href="https://github.com/django/deps/pull/84"&gt;DEP draft&lt;/a&gt; come to mind as does the &lt;a href="https://forum.djangoproject.com/t/rejuvenating-vs-deprecating-form-media/21285"&gt;discussion about whether to improve or deprecate &lt;code&gt;forms.Media&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A few packages exist which are offering solutions in this space:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codingjoe/django-esm"&gt;django-esm&lt;/a&gt; provides a solution for using ES modules with Django without bundling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthiask/django-js-asset/"&gt;django-js-asset&lt;/a&gt; provides helpers for delivering JavaScript modules, importmaps, JSON blobs etc. to the browser through Django&amp;rsquo;s &lt;code&gt;forms.Media&lt;/code&gt;. The blog post &lt;a href="https://406.ch/writing/object-based-assets-for-django-s-forms-media/"&gt;Object-based assets for Django&amp;rsquo;s forms.Media&lt;/a&gt; explores this in more detail.&lt;/li&gt;
&lt;li&gt;The article on &lt;a href="https://406.ch/writing/django-admin-apps-and-content-security-policy-compliance/"&gt;Content Security Policy compliance&lt;/a&gt; explores better approaches to use JavaScript in the Django admin while avoiding inline JavaScript.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;django-js-asset came before Django &lt;a href="https://github.com/django/django/commit/4c76ffc2d6c77"&gt;added official support for object-based media CSS and JS paths&lt;/a&gt; but has since been changed to take advantage of that official support. It has enabled the removal of ugly hacks. In the meantime, Django has even added &lt;a href="https://github.com/django/django/pull/18782"&gt;official support for object-based &lt;code&gt;Script&lt;/code&gt; tags&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="my-dep-draft"&gt;&lt;a class="toclink" href="#my-dep-draft"&gt;My DEP draft&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Building on these efforts, I&amp;rsquo;ve been thinking about &lt;a href="https://github.com/django/deps/pull/101"&gt;submitting my own DEP draft for importmap support&lt;/a&gt;. It hasn&amp;rsquo;t yet come far though, and I&amp;rsquo;m still more occupied with verifying and using my existing solution, especially learning if it has limitations which would make the implemented approach unworkable for official inclusion.&lt;/p&gt;
&lt;h2 id="the-current-effort"&gt;&lt;a class="toclink" href="#the-current-effort"&gt;The current effort&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As alluded to above, I already have a working solution for using importmaps (in
django-js-asset) and I&amp;rsquo;m actively using it in django-prose-editor. Here&amp;rsquo;s how
it works:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;importmap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;imports&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;django-prose-editor/editor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;static_lazy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;django_prose_editor/editor.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A minimal editor implementation using this:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// Tiptap extensions&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;Document&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Paragraph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;HardBreak&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Bold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Italic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// Prose editor utilities&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;createTextareaEditor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;initializeEditors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;django-prose-editor/editor&amp;quot;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;extensions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;Document&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Paragraph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;HardBreak&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Bold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Italic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;initializeEditors&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;createTextareaEditor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The importmap looks as follows when using Django&amp;rsquo;s &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;
which produces filenames containing the hash of the file&amp;rsquo;s contents for cache
busting (edited for readability):&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;importmap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;imports&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;django-prose-editor/editor&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/static/django_prose_editor/editor.6e8dd4c12e2e.js&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This means that when your code has &lt;code&gt;import { ... } from "django-prose-editor/editor"&lt;/code&gt;, the browser automatically loads the file from &lt;code&gt;/static/django_prose_editor/editor.6e8dd4c12e2e.js&lt;/code&gt;. The hashed filename provides cache busting while the import statement remains clean and consistent.&lt;/p&gt;
&lt;h2 id="problems-with-the-current-implementation"&gt;&lt;a class="toclink" href="#problems-with-the-current-implementation"&gt;Problems with the current implementation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While this approach works, there are several issues to address:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I don&amp;rsquo;t really like global variables but there doesn&amp;rsquo;t seem to be a way around it. Browsers want to use a single importmap only (even though the algorithm for merging importmaps exists in the spec!) and the importmap has to be included above all ES modules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The fact that browsers only want a single importmap also means that when you use django-js-asset&amp;rsquo;s importmap support you &lt;strong&gt;cannot&lt;/strong&gt; use a different package offering its own solution for importmaps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The importmap may be added twice to the HTML when using a widget that works in both the admin and frontend contexts. Currently, if you want to avoid this problem or ugliness you have to determine in your Django form field if the code is requesting an admin widget or another widget, either by inspecting the callstack (very ugly) or by checking if the &lt;code&gt;widget&lt;/code&gt; argument to the form field constructor is set to an admin-specific widget (also somewhat ugly, since widgets can be classes, instances, or not provided at all).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It would be nice if we the installation of django-prose-editor didn&amp;rsquo;t have more steps than what we have when installing any other Django widget integration. I&amp;rsquo;d like a more elegant solution, but haven&amp;rsquo;t found one yet that doesn&amp;rsquo;t introduce too much magic.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="comparison-to-django-esm"&gt;&lt;a class="toclink" href="#comparison-to-django-esm"&gt;Comparison to django-esm&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/codingjoe/django-esm"&gt;django-esm&lt;/a&gt; takes a different approach. It assumes you&amp;rsquo;re using JavaScript modules everywhere and solves the problem of exposing the correct paths to those modules to the browser. It supports both private modules from your repository and modules installed in &lt;code&gt;node_modules&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, it doesn&amp;rsquo;t fully address the scenario where a third-party &lt;strong&gt;Django&lt;/strong&gt; app (a Python package) ships JavaScript modules that need to be integrated into your application.&lt;/p&gt;
&lt;p&gt;I still use a bundler for most of my JavaScript from &lt;code&gt;node_modules&lt;/code&gt;, so I don&amp;rsquo;t need this specific functionality yet. That will probably change in the future.&lt;/p&gt;
&lt;h2 id="using-bundlers"&gt;&lt;a class="toclink" href="#using-bundlers"&gt;Using bundlers&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;re still using a bundler, &lt;a href="https://rspack.dev/"&gt;as I do&lt;/a&gt;, you want to
ensure that the &lt;code&gt;import&lt;/code&gt; isn&amp;rsquo;t actually evaluated by the bundler but left
as-is. The &lt;a href="https://rspack.dev/"&gt;rspack&lt;/a&gt; configuration I&amp;rsquo;m using at the moment
is also documented in the django-prose-editor README but I&amp;rsquo;m duplicating it
here for convenience:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;experiments&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;outputModule&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nx"&gt;externals&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;django-prose-editor/editor&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;module django-prose-editor/editor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Or the following, I&amp;#39;m never sure.&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;django-prose-editor/editor&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;import django-prose-editor/editor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This configuration marks the dependency as &amp;ldquo;external&amp;rdquo; (so it won&amp;rsquo;t be bundled) and specifies that it should be loaded as a module using a static &lt;code&gt;import&lt;/code&gt; statement.&lt;/p&gt;
&lt;p&gt;For browser compatibility, you can also include &lt;a href="https://github.com/guybedford/es-module-shims"&gt;es-module-shims&lt;/a&gt; to support browsers that don&amp;rsquo;t yet handle importmaps natively (around 5% at the time of writing according to &lt;a href="https://caniuse.com/import-maps"&gt;caniuse.com&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id="using-django-compressor-or-similar-packages"&gt;&lt;a class="toclink" href="#using-django-compressor-or-similar-packages"&gt;Using django-compressor or similar packages&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Tools like django-compressor aren&amp;rsquo;t well-suited for modern JavaScript modules as they typically produce old-style JavaScript files rather than ES modules. They&amp;rsquo;re designed for a different era of web development and don&amp;rsquo;t integrate well with the importmap approach.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The problem is that django-compressor at this time emits non-module script
files. Using import statements in these files isn&amp;rsquo;t possible, instead you
have to use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import"&gt;dynamic imports&lt;/a&gt;.&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Instead of&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Document&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;django-prose-editor/editor&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;// you need&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;django-prose-editor/editor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Document&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Both work fine. The bundle emitted by django-compressor will not contain
the prose editor module itself though; including this module inside the
bundle is not possible.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="conclusion"&gt;&lt;a class="toclink" href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Using importmaps with Django provides a clean solution for managing JavaScript
modules in Django applications, especially for third-party apps that need to
ship their own JavaScript. While there are still some rough edges to smooth
out, this approach works well and offers a path forward that aligns with modern
web standards.&lt;/p&gt;
&lt;p&gt;Have you tried using importmaps with Django? I&amp;rsquo;d be interested to hear about
your experiences and approaches.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2025 week 21)</title><link href="https://406.ch/writing/weeknotes-2025-week-21/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-21/</id><published>2025-05-21T12:00:00Z</published><updated>2025-05-21T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-21"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-21"&gt;Weeknotes (2025 week 21)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have missed two co-writing sessions and didn&amp;rsquo;t manage to post much outside of that, but let&amp;rsquo;s get things back on track.&lt;/p&gt;
&lt;h2 id="django-prose-editor-012"&gt;&lt;a class="toclink" href="#django-prose-editor-012"&gt;django-prose-editor 0.12&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://406.ch/writing/weeknotes-2025-week-15/#progress-on-the-prose-editor"&gt;last weeknotes
entry&lt;/a&gt;
contains more details about the work of really connecting Tiptap extensions
with server-side sanitization. 0.12 includes many improvements and bugfixes
which have been made during real-world use of the prose editor in
customer-facing products.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not completely happy about the way we&amp;rsquo;re specifying the editor
configuration and haven&amp;rsquo;t been able to settle on either &lt;code&gt;extensions&lt;/code&gt; or
&lt;code&gt;config&lt;/code&gt; as a keyword argument. The field supports both ways, at least for
now. It&amp;rsquo;s probably fine.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-auto-admin-fieldsets/"&gt;django-auto-admin-fieldsets 0.2&lt;/a&gt;: I wrote a blog post here: &lt;a href="https://406.ch/writing/customizing-django-admin-fieldsets-without-fearing-forgotten-fields/"&gt;Customizing Django admin fieldsets without fearing forgotten fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 5.2&lt;/a&gt;: This release contains the second half of improvements from &lt;a href="https://djangonaut.space/"&gt;Djangonaut Space&lt;/a&gt; session four where I helped out as a Navigator. The toolbar properly supports code highlighting in dark mode, sanitizes request variables better, allows customizing redirects, supports projects using &lt;a href="https://github.com/carltongibson/django-template-partials/"&gt;django-template-partials&lt;/a&gt; and more!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 25.5.1&lt;/a&gt;: The first FeinCMS release of 2025. We&amp;rsquo;re still maintaining the project and fixing bugs!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.12&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.4.1&lt;/a&gt;: Fixes much too small checkboxes when used inside tables.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Customizing Django admin fieldsets without fearing forgotten fields</title><link href="https://406.ch/writing/customizing-django-admin-fieldsets-without-fearing-forgotten-fields/" rel="alternate" /><id>https://406.ch/writing/customizing-django-admin-fieldsets-without-fearing-forgotten-fields/</id><published>2025-04-14T12:00:00Z</published><updated>2025-04-14T12:00:00Z</updated><summary type="html">&lt;h1 id="customizing-django-admin-fieldsets-without-fearing-forgotten-fields"&gt;&lt;a class="toclink" href="#customizing-django-admin-fieldsets-without-fearing-forgotten-fields"&gt;Customizing Django admin fieldsets without fearing forgotten fields&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;When defining &lt;a href="https://docs.djangoproject.com/en/5.2/ref/contrib/admin/#django.contrib.admin.ModelAdmin.fieldsets"&gt;fieldsets on Django modeladmin classes&lt;/a&gt; I always worry that I forget updating the fieldsets later when adding or removing new model fields, and not without reason: It has already happened to me several times. Forgetting to remove fields is mostly fine because system checks will complain about it, forgetting to add fields may be real bad. A recent example was a crashing website because a required field was missing from the admin and therefore was left empty when creating new instances!&lt;/p&gt;
&lt;p&gt;I have now published another Django package which solves this by adding support for specifying the special &lt;code&gt;"__remaining__"&lt;/code&gt; field in a fieldsets definition. The &lt;code&gt;"__remaining__"&lt;/code&gt; placeholder is automatically replaced by all model fields which haven&amp;rsquo;t been explicitly added already or added to &lt;code&gt;exclude&lt;/code&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a short example for a modeladmin definition using django-auto-admin-fieldsets:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django.contrib&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django_auto_admin_fieldsets.admin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AutoFieldsetsModelAdmin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;app&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;

&lt;span class="nd"&gt;@admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MyModel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;MyModelAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AutoFieldsetsModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Define fieldsets as usual with a placeholder&lt;/span&gt;
    &lt;span class="n"&gt;fieldsets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Basic Information&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;slug&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]}),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;__remaining__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]}),&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I have used Claude Code a lot for the code and the package, and as always, I had to fix bugs and oversights. I hope it didn&amp;rsquo;t regurgitate the code of an existing package &amp;ndash; I searched for an existing solution first but didn&amp;rsquo;t find any.&lt;/p&gt;
&lt;p&gt;The package is available on &lt;a href="https://pypi.org/project/django-auto-admin-fieldsets/"&gt;PyPI&lt;/a&gt; and is developed on &lt;a href="https://github.com/matthiask/django-auto-admin-fieldsets"&gt;GitHub&lt;/a&gt;, at least for the time being.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Autocreated fields such as surrogate primary keys or fields which aren&amp;rsquo;t editable are also excluded automatically of course.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary></entry><entry><title>Weeknotes (2025 week 15)</title><link href="https://406.ch/writing/weeknotes-2025-week-15/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-15/</id><published>2025-04-09T12:00:00Z</published><updated>2025-04-09T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-15"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-15"&gt;Weeknotes (2025 week 15)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="djangonaut-space"&gt;&lt;a class="toclink" href="#djangonaut-space"&gt;Djangonaut Space&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have already reached the final week of the &lt;a href="https://djangonaut.space/"&gt;Djangonaut
Space&lt;/a&gt; session 4. I had a great time as a navigator
and am looking forward to participate more, but for now I&amp;rsquo;m also glad that I do
not have the additional responsibility at least for the close future.&lt;/p&gt;
&lt;p&gt;We have done great work on the
&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar&lt;/a&gt; in our
group, more is to come.&lt;/p&gt;
&lt;h2 id="progress-on-the-prose-editor"&gt;&lt;a class="toclink" href="#progress-on-the-prose-editor"&gt;Progress on the prose editor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have done much work on
&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor&lt;/a&gt; in the
last few weeks and after a large list of alphas and betas I&amp;rsquo;m nearing a state
which I want to release into the wild.&lt;/p&gt;
&lt;p&gt;The integration has been completely rethought (again) and now uses JavaScript
modules and importmaps. The ground work to support all of that in Django has
been laid in &lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The nice thing about using JavaScript modules and importmaps is that we now
have an easy way to combine the power of modern JavaScript customization with
easy cache busting using Django&amp;rsquo;s &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;. A longer post
on this is brewing and I hope to have it ready soon-ish.&lt;/p&gt;
&lt;p&gt;As a sneak peek, here&amp;rsquo;s the way it works:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django_prose_editor.fields&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ProseEditorField&lt;/span&gt;

&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProseEditorField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Bold&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Italic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;BulletList&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Link&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;# sanitize=True is the default when using extensions&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The nice thing about it is that the sanitization allowlist for
&lt;a href="https://github.com/messense/nh3"&gt;nh3&lt;/a&gt; only includes tags and attributes which
are enabled via the &lt;code&gt;extensions&lt;/code&gt; dict. So, you don&amp;rsquo;t have to do anything else
to be safe from XSS etc.&lt;/p&gt;
&lt;p&gt;Check out the pre-releases on
&lt;a href="https://pypi.org/project/django-prose-editor/#history"&gt;PyPI&lt;/a&gt; or have a look at
the &lt;a href="https://django-prose-editor.readthedocs.io/"&gt;documentation&lt;/a&gt; to learn more
about this project!&lt;/p&gt;
&lt;h2 id="using-claude-code"&gt;&lt;a class="toclink" href="#using-claude-code"&gt;Using Claude Code&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been using Claude Code (without editor integrations, thank you very
much) more and more. It&amp;rsquo;s a good coding companion when it comes to throwing
around ideas, drafting docs and writing unit tests including integration tests.&lt;/p&gt;
&lt;p&gt;Sometimes I&amp;rsquo;m really surprised at how good it is. Other times&amp;hellip; less so. The
tool often finds a way to get tests passing, but when the editor integration
tests directly manipulate &lt;code&gt;innerHTML&lt;/code&gt; and then Claude proclaims that
interacting with the editor is now shown to work I have to chuckle a bit. And
when I insist on doing what I mean and not just finding broken workarounds it
doesn&amp;rsquo;t really change anything. After spinning more we&amp;rsquo;re always back where we
started.&lt;/p&gt;
&lt;p&gt;I am somewhat glad that this is where we&amp;rsquo;re at now. I&amp;rsquo;m not 100% sure if it&amp;rsquo;s
progress. At least it&amp;rsquo;s surprisingly funny at times.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I haven&amp;rsquo;t written a regular weeknotes entry since the end of January, so
naturally the list here is longer than usual.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-forms/"&gt;feincms3-forms 0.5.1&lt;/a&gt;: I
  inadvertently bumped the Django dependency without actually wanting that;
  this patch release reverts that (while adding official support for new Django
  and Python versions).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-mptt/"&gt;django-mptt 0.17&lt;/a&gt;: Mariusz has done
  all the hard work for supporting newer versions of Django. I just had to
  press the release button. That being said, four years after marking the
  package as unmaintained I&amp;rsquo;m still maintaining it. At least I don&amp;rsquo;t get
  complaints anymore&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor
  0.4&lt;/a&gt;: Added a dependency
  on the pre-release of django-prose-editor and added a test suite including
  integration tests so that we actually now when stuff breaks the next time!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 5.1&lt;/a&gt;:
  See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-data/"&gt;feincms3-data&lt;/a&gt;: Added fixes to dump
  distinct objects. Spent more time than useful on the Django change which
  added a final newline to JSON-serialized data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset 3.1.2&lt;/a&gt;:
  Importmaps support, added a &lt;code&gt;static_lazy&lt;/code&gt; helper which is useful to define
  module-scoped static URLs. The later wouldn&amp;rsquo;t work with the
  &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; because the manifest doesn&amp;rsquo;t yet exist when
  &lt;code&gt;collectstatic&lt;/code&gt; runs, so the actual evaluation of static URLs has to be
  postponed. The lazy version solves this nicely.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.21.1&lt;/a&gt; and &lt;a href="https://pypi.org/project/feincms3-language-sites/"&gt;feincms3-language-sites 0.4.1&lt;/a&gt;: See the relevant &lt;a href="https://406.ch/writing/til-tools-exist-which-do-not-lowercase-domain-names-when-requesting-websites-over-http-s/"&gt;TIL&lt;/a&gt; blogpost.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Ungoogling my life</title><link href="https://406.ch/writing/ungoogling-my-life/" rel="alternate" /><id>https://406.ch/writing/ungoogling-my-life/</id><published>2025-03-12T12:00:00Z</published><updated>2025-03-12T12:00:00Z</updated><summary type="html">&lt;h1 id="ungoogling-my-life"&gt;&lt;a class="toclink" href="#ungoogling-my-life"&gt;Ungoogling my life&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I was dismayed (but unfortunately not really surprised) to see all the big tech
CEOs kiss the ring during the inauguration a few weeks back. I decided then
that I didn&amp;rsquo;t want to subscribe to any products of these companies with my
personal money anymore. In my case, this meant only Google. I do have an iPhone
(the first iPhone since the 3GS or something) but I&amp;rsquo;m not paying any
subscriptions there either.&lt;/p&gt;
&lt;p&gt;I have been a paying Google subscriber for years and years, starting in their
&amp;ldquo;Don&amp;rsquo;t be evil&amp;rdquo; area and sticking with them as the product and the companies
ethics got worse and worse.&lt;/p&gt;
&lt;h2 id="gmail"&gt;&lt;a class="toclink" href="#gmail"&gt;GMail&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have switched my private mail to &lt;a href="https://www.fastmail.com/"&gt;Fastmail&lt;/a&gt; a few
years ago, so I haven&amp;rsquo;t been really using GMail anymore.&lt;/p&gt;
&lt;p&gt;GMail is still a really good email service. In the last few weeks the AI
features have become hard to overlook and/or ignore though, and I&amp;rsquo;m not really
happy about that. Fastmail shows more restraint in this area.&lt;/p&gt;
&lt;h2 id="google-calendar"&gt;&lt;a class="toclink" href="#google-calendar"&gt;Google Calendar&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have shared family calendars using Google Calendar. Now I do not have a
private calendar anymore, and am using the Work calendar for everything. That&amp;rsquo;s
a small setback. Fastmail also has a calendar functionality but sharing
read/write calendars doesn&amp;rsquo;t seem to be easily possible except if others are in
the same account group.&lt;/p&gt;
&lt;h2 id="google-drive-and-google-photos"&gt;&lt;a class="toclink" href="#google-drive-and-google-photos"&gt;Google Drive and Google Photos&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I don&amp;rsquo;t miss the Drive all that much. The things I&amp;rsquo;m working on are versioned
with &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;, and since I&amp;rsquo;m switching from desktop to
notebook all the time anyway everything is already backuped and synced
everywhere. For everything else I have started renting a &lt;a href="https://www.hetzner.com/de/storage/storage-box/"&gt;Storage Box at
Hetzner&lt;/a&gt;. I&amp;rsquo;m paying a few
euros per month for 1 TiB of storage which is accessible by several protocols.&lt;/p&gt;
&lt;h2 id="docs-spreadsheets"&gt;&lt;a class="toclink" href="#docs-spreadsheets"&gt;Docs / Spreadsheets&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.libreoffice.org/"&gt;LibreOffice&lt;/a&gt; exists and fits my needs. Whenever
possible I use pen and paper or flat text files anyway.&lt;/p&gt;
&lt;h2 id="maps"&gt;&lt;a class="toclink" href="#maps"&gt;Maps&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been a happy &lt;a href="https://osmand.net/"&gt;OsmAnd&lt;/a&gt; subscriber anyway. I&amp;rsquo;m still
paying for it but have been using &lt;a href="https://organicmaps.app/"&gt;Organic Maps&lt;/a&gt; more
often now because the app feels faster and nicer.&lt;/p&gt;
&lt;h2 id="youtube-and-youtube-music"&gt;&lt;a class="toclink" href="#youtube-and-youtube-music"&gt;YouTube and YouTube Music&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m very happy with &lt;a href="https://bandcamp.com/"&gt;Bandcamp&lt;/a&gt; and have been buying
music there for years now. I don&amp;rsquo;t think the app is great though.&lt;/p&gt;
&lt;p&gt;I have tried several apps, and have now settled on
&lt;a href="https://apps.apple.com/us/app/foobar2000/id1072807669"&gt;foobar2000&lt;/a&gt;. It works
well and includes an FTP server which I can use to push the library from the
computer to the phone using a &lt;a href="https://lftp.yar.ru/"&gt;lftp&lt;/a&gt; script.&lt;/p&gt;
&lt;p&gt;I looked into setting up by own streaming server but haven&amp;rsquo;t gotten anywhere
with that project yet, and I&amp;rsquo;m not sure if I really want to pursue that.&lt;/p&gt;
&lt;p&gt;On the computer I&amp;rsquo;m back to using
&lt;a href="https://wiki.gnome.org/Apps/Rhythmbox"&gt;Rhythmbox&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Not having a YouTube subscription is great, because all the ads are so annoying
that I&amp;rsquo;m spending less time on YouTube than I did in years. And if I really
want to watch something &lt;a href="https://github.com/yt-dlp/yt-dlp"&gt;yt-dlp&lt;/a&gt; exists and
does what it says on the tin.&lt;/p&gt;
&lt;h2 id="other-things"&gt;&lt;a class="toclink" href="#other-things"&gt;Other things&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been playing &lt;a href="https://ingress.com/"&gt;Ingress&lt;/a&gt; for over 10 years. It
didn&amp;rsquo;t immediately register that I also deleted that account with my Google
account. I&amp;rsquo;m still a bit sad when thinking about all the badges I lost, but it
has been definitely worth it.&lt;/p&gt;
&lt;p&gt;Google Keep has worked well for me for small To Dos, reminders and notes. I
haven&amp;rsquo;t found an acceptable replacement yet; Apple Notes works somewhat, but
cannot be accessed on the web if you&amp;rsquo;re using their advanced data protection
feature. Maybe I need a To Do app, but this space is so crowded that I don&amp;rsquo;t
even want to start searching for something with fits my needs.&lt;/p&gt;
&lt;p&gt;At work we&amp;rsquo;re still using Google Workspace. It would probably be in our
interest to change that though.&lt;/p&gt;</summary></entry><entry><title>TIL: Tools exist which do not lowercase domain names when requesting websites over HTTP(S)</title><link href="https://406.ch/writing/til-tools-exist-which-do-not-lowercase-domain-names-when-requesting-websites-over-http-s/" rel="alternate" /><id>https://406.ch/writing/til-tools-exist-which-do-not-lowercase-domain-names-when-requesting-websites-over-http-s/</id><published>2025-02-13T12:00:00Z</published><updated>2025-02-13T12:00:00Z</updated><summary type="html">&lt;h1 id="til-tools-exist-which-do-not-lowercase-domain-names-when-requesting-websites-over-https"&gt;&lt;a class="toclink" href="#til-tools-exist-which-do-not-lowercase-domain-names-when-requesting-websites-over-https"&gt;TIL: Tools exist which do not lowercase domain names when requesting websites over HTTP(S)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;About a week ago I received error mails for a surprising behavior (to me!)
where some tool requested an URL from one of our websites using
&lt;a href="https://github.com/feincms/feincms3-language-sites/"&gt;feincms3-language-sites&lt;/a&gt;
(a Django library for multilingual websites) with a domain name containing
uppercase characters.&lt;/p&gt;
&lt;p&gt;I knew that the domain part of all sorts of URLs is case sensitive, but what
surprised me was that our server actually got a request with such a domain
name, I hadn&amp;rsquo;t really seen that before.&lt;/p&gt;
&lt;p&gt;After researching a bit I learned that for example &lt;a href="https://curl.se/"&gt;curl&lt;/a&gt;
intentionally preserves the casing of domain names, but browsers generally do
lowercase domains because it&amp;rsquo;s more consistent. It&amp;rsquo;s interesting that the
initial error was caused by a client with a proper Safari/macOS user agent, but
further research showed that the request was probably sent by something called
&lt;code&gt;go-social-activity-parser&lt;/code&gt;, whatever that is.&lt;/p&gt;
&lt;p&gt;I fixed the bug in
&lt;a href="https://github.com/feincms/feincms3-language-sites/"&gt;feincms3-language-sites&lt;/a&gt;
and also in &lt;a href="https://github.com/feincms/feincms3-sites/"&gt;feincms3-sites&lt;/a&gt; by
switching to case-insensitive matching of domain names. I have not yet added
punycode or IDNA equivalence to the code because I haven&amp;rsquo;t needed it yet and
because I&amp;rsquo;m not 100% sure how to do it without breaking anything. Even though I
often work on websites in languages with lots of accents and umlauts we don&amp;rsquo;t
use such domain names too often, so it hasn&amp;rsquo;t been a problem yet. I&amp;rsquo;ll cross
that bridge when I get there.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2025 week 05)</title><link href="https://406.ch/writing/weeknotes-2025-week-05/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-05/</id><published>2025-01-29T12:00:00Z</published><updated>2025-01-29T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-05"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-05"&gt;Weeknotes (2025 week 05)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="djangonaut-space"&gt;&lt;a class="toclink" href="#djangonaut-space"&gt;Djangonaut Space&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In December I wrote a few paragraphs about &lt;a href="https://406.ch/writing/weeknotes-2024-week-49/"&gt;my decision to not run for the
Django Steering Council&lt;/a&gt;,
mentioning that I want to contribute in different ways.&lt;/p&gt;
&lt;p&gt;I have offered to contribute to Djangonaut Space to do some mentoring. I&amp;rsquo;m
already a bit stressed, but that&amp;rsquo;s normal and to be expected. I&amp;rsquo;ll probably
have more to share about that in the close future!&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/feincms/feincms3-cookiecontrol/commits/main/"&gt;feincms-cookiecontrol 1.6&lt;/a&gt;: Removed the hardcoded dependency upon &lt;a href="https://feincms3.readthedocs.io/"&gt;feincms3&lt;/a&gt; and some additional code golfing. The cookie banner JavaScript is now back to &amp;lt;4KiB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-curtains/"&gt;django-curtains 0.7&lt;/a&gt;: Updated the CI job list and modernized the package somewhat, no code changes necessary. It&amp;rsquo;s good to release updated versions though just to show that it&amp;rsquo;s still actively maintained.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.10.3&lt;/a&gt;: Small CSS fixes and mainly updated TipTap/ProseMirror.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.22&lt;/a&gt;: The updated version no longer autodeletes processed images; this wasn&amp;rsquo;t really a problem before but I was a little bit fearful that images are still referenced elsewhere and this change let&amp;rsquo;s me sleep better.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms-oembed/"&gt;feincms-oembed 2.0&lt;/a&gt;: Oembed support for FeinCMS 1 without actually depending upon the FeinCMS package itself. Still works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.2&lt;/a&gt;: The &lt;code&gt;Region&lt;/code&gt; type is now hashable; this may be useful, or not.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.3.1&lt;/a&gt;: I undeprecated the &lt;code&gt;TemplateMixin&lt;/code&gt; because even though &lt;code&gt;PageTypeMixin&lt;/code&gt; is nicer, sometimes all you need is a template selector.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Django admin tip: Adding links to related objects in change forms</title><link href="https://406.ch/writing/django-admin-tip-adding-links-to-related-objects-in-change-forms/" rel="alternate" /><id>https://406.ch/writing/django-admin-tip-adding-links-to-related-objects-in-change-forms/</id><published>2025-01-17T12:00:00Z</published><updated>2025-01-17T12:00:00Z</updated><summary type="html">&lt;h1 id="django-admin-tip-adding-links-to-related-objects-in-change-forms"&gt;&lt;a class="toclink" href="#django-admin-tip-adding-links-to-related-objects-in-change-forms"&gt;Django admin tip: Adding links to related objects in change forms&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Any issue which came up on the Django Forum and Discord is how to add links to
other objects to the Django administration interface. It&amp;rsquo;s something I&amp;rsquo;m doing
often and I want to share the pattern I&amp;rsquo;m using.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s definitely not rocket science and there are probably better ways to do it,
but this one works well for me.&lt;/p&gt;
&lt;h2 id="method-1-override-the-change-form-template"&gt;&lt;a class="toclink" href="#method-1-override-the-change-form-template"&gt;Method 1: Override the change form template&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In one project users can be the editor of exactly one organization. The link
between organizations and users is achieved using a &lt;code&gt;Editor&lt;/code&gt; model with a
&lt;code&gt;ForeignKey(Organization)&lt;/code&gt; and a &lt;code&gt;OneToOneField(User)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I wanted to add a link to the organization page at the bottom of the user form.
An easy way to achieve this is to add a template at
&lt;code&gt;templates/admin/auth/user/change_form.html&lt;/code&gt; (or something similar if you&amp;rsquo;re
using a custom user model):&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;admin/change_form.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;after_related_objects&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="nv"&gt;.super&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;original.editor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;fieldset&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;module aligned&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Organization&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;form-row&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;admin:organizations_organization_change&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;original.editor.organization.pk&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;original.editor.organization&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;fieldset&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="nv"&gt;after_related_objects&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;original&lt;/code&gt; context variable contains the object being edited. The &lt;code&gt;editor&lt;/code&gt;
attribute is the reverse accessor for the &lt;code&gt;OneToOneField&lt;/code&gt; mentioned above.&lt;/p&gt;
&lt;h2 id="method-2-add-a-method-to-the-model-admin-class-returning-a-html-blob"&gt;&lt;a class="toclink" href="#method-2-add-a-method-to-the-model-admin-class-returning-a-html-blob"&gt;Method 2: Add a method to the model admin class returning a HTML blob&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A terrible but also nice way is to add a method to the &lt;code&gt;ModelAdmin&lt;/code&gt; class which
returns the HTML containing the links you want, and adding the name of the
method to &lt;code&gt;readonly_fields&lt;/code&gt;. This is even mentioned in &lt;a href="https://docs.djangoproject.com/en/stable/ref/contrib/admin/#django.contrib.admin.ModelAdmin.readonly_fields"&gt;the official
&lt;code&gt;readonly_fields&lt;/code&gt;
documentation&lt;/a&gt;
but I discovered this by accident a few years back.&lt;/p&gt;
&lt;p&gt;The method name doesn&amp;rsquo;t have to be added anywhere else, not to &lt;code&gt;fields&lt;/code&gt; nor do
you have to define &lt;code&gt;fieldsets&lt;/code&gt; for this to work. Just adding it to
&lt;code&gt;readonly_fields&lt;/code&gt; appends it to the end of the form, before any eventual
inlines you&amp;rsquo;re using.&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django.template.loader&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;app&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;

&lt;span class="nd"&gt;@admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;ClassAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;list_display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;language_code&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;readonly_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;admin_show_custom_districts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="nd"&gt;@admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;districts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;admin_show_custom_districts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;admin/admin_show_custom_districts.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;custom_districts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;customdistrict_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()},&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Weeknotes (2025 week 03)</title><link href="https://406.ch/writing/weeknotes-2025-week-03/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-03/</id><published>2025-01-15T12:00:00Z</published><updated>2025-01-15T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-03"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-03"&gt;Weeknotes (2025 week 03)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="claude-ai-helped-me-for-the-first-time"&gt;&lt;a class="toclink" href="#claude-ai-helped-me-for-the-first-time"&gt;Claude AI helped me for the first time&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/matthiask/django-imagefield"&gt;django-imagefield&lt;/a&gt; prefers
processing thumbnails, cropped images etc. directly when saving the model and
not later on demand; it&amp;rsquo;s faster and also you&amp;rsquo;ll know it immediately when an
image couldn&amp;rsquo;t be processed for some reason instead of only later when people
actually try browsing your site.&lt;/p&gt;
&lt;p&gt;A consequence is that if you change formats you have to remember that you have
to reprocess the images. The Django app comes with a management command
&lt;code&gt;./manage.py process_imagefields&lt;/code&gt; to help with this. I have added parallel
processing based on &lt;code&gt;concurrent.futures&lt;/code&gt; to it some time ago so that the
command completes faster when it is being run on a system with several cores.&lt;/p&gt;
&lt;p&gt;A work colleague is using macOS (many are, in fact), and he always got
multiprocessing Python crashes. This is a well known issue and I remember
reading about it a few years ago. I checked the docs and saw that the
&lt;a href="https://docs.python.org/3/library/concurrent.futures.html"&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt;
page doesn&amp;rsquo;t mention macOS, but
&lt;a href="https://docs.python.org/3/library/multiprocessing.html"&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt;
does. So, I hoped that a simple rewrite of the management command using
&lt;code&gt;multiprocessing&lt;/code&gt; might fix it.&lt;/p&gt;
&lt;p&gt;Because I was in a rush and really didn&amp;rsquo;t want to do it I turned to an AI
assistant for doing this boring work. To my surprise it immediately produced a
version which I could easily fix by hand to produce a working version. Of
course, the initial response was totally broken, removed code it wasn&amp;rsquo;t
supposed to, and even the syntax was invalid. I didn&amp;rsquo;t expect more though, but
what was surprising was that it actually felt like I had to do less work at
this time.&lt;/p&gt;
&lt;p&gt;The assistant also helped adding a &lt;code&gt;--no-parallel&lt;/code&gt; flag to the management
command. The output was even more broken than the output of the change
mentioned above, but again, I could easily fix it to achieve what I wanted.&lt;/p&gt;
&lt;p&gt;The fact that I know the code and &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt; well certainly
helped, the assistant would really have helped without that knowledge.&lt;/p&gt;
&lt;p&gt;In the end, switching to &lt;code&gt;multiprocessing&lt;/code&gt; didn&amp;rsquo;t help, but adding the
&lt;code&gt;--no-parallel&lt;/code&gt; flag allowed them to run the processing themselves by not
spawning any additional threads or processes.&lt;/p&gt;
&lt;p&gt;The energy use and the stealing of copyrighted material done by the AI
companies is still really bad. It does feel somewhat OK to use an AI assistant
in an area where I&amp;rsquo;m proficient as well and where I probably also supplied
training material (without being asked if I wanted this) though. It&amp;rsquo;s making me
slightly faster, and doesn&amp;rsquo;t allow me to do things I really couldn&amp;rsquo;t otherwise.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 24.12.3&lt;/a&gt;: I have added a TinyMCE
  7 integration to FeinCMS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.21.1&lt;/a&gt;: See
  above.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 51)</title><link href="https://406.ch/writing/weeknotes-2024-week-51/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-51/</id><published>2024-12-20T12:00:00Z</published><updated>2024-12-20T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-51"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-51"&gt;Weeknotes (2024 week 51)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="building-forms-using-django"&gt;&lt;a class="toclink" href="#building-forms-using-django"&gt;Building forms using Django&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I last wrote about this topic &lt;a href="https://406.ch/writing/building-forms-with-the-django-admin/"&gt;in April&lt;/a&gt;. It has &lt;a href="https://mastodon.social/@webology/113669270531953652"&gt;resurfaced on Mastodon this week&lt;/a&gt;. I&amp;rsquo;m thinking about writing a &lt;a href="https://github.com/feincms/feincms3-forms"&gt;feincms3-forms&lt;/a&gt; demo app, but I already have too much on my plate. I think composing a forms builder on top of &lt;a href="https://django-content-editor.readthedocs.io/"&gt;django-content-editor&lt;/a&gt; is the way to go, instead of replacing the admin interface altogether &amp;ndash; sure, you can always do that, but it&amp;rsquo;s so much less composable&amp;hellip;&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.2&lt;/a&gt;: No real changes, added support for Python 3.13 basically without changing anything. It&amp;rsquo;s always nice when this happens.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.21&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.10&lt;/a&gt;: I rebuilt django-prose-editor from the ground up &lt;a href="https://406.ch/writing/rebuilding-django-prose-editor-from-the-ground-up/"&gt;and wrote about that two weeks ago&lt;/a&gt;. The 0.10 release marks the final point of this particular rewrite.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset 3.0&lt;/a&gt;: See the blog post from &lt;a href="https://406.ch/writing/object-based-assets-for-django-s-forms-media/"&gt;this week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Object-based assets for Django's forms.Media</title><link href="https://406.ch/writing/object-based-assets-for-django-s-forms-media/" rel="alternate" /><id>https://406.ch/writing/object-based-assets-for-django-s-forms-media/</id><published>2024-12-18T12:00:00Z</published><updated>2024-12-18T12:00:00Z</updated><summary type="html">&lt;h1 id="object-based-assets-for-djangos-formsmedia"&gt;&lt;a class="toclink" href="#object-based-assets-for-djangos-formsmedia"&gt;Object-based assets for Django&amp;rsquo;s forms.Media&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The pull request for adding &lt;a href="https://github.com/django/django/pull/18782"&gt;object-based script media assets into
Django&lt;/a&gt; is in a good state and I
hope it will be merged soon. I have been using object-based assets long before
&lt;a href="https://github.com/django/django/commit/4c76ffc2d6c77"&gt;Django actually added support for them in
4.1&lt;/a&gt; (&lt;a href="https://github.com/feincms/django-content-editor/commit/82ac91ea7af2409bb3672e11c18871002ddc9753"&gt;since
2016&lt;/a&gt;,
that&amp;rsquo;s before Django 1.10!) by using a gross hack. Luckily I have been able to
clean up the code when Django 4.1 landed.&lt;/p&gt;
&lt;p&gt;I have been asking myself at times why I haven&amp;rsquo;t proposed the change to Django
myself despite having been a user of something like this for such a long time.
After all, I have been happily contributing issue reports, bug fixes and tests
to Django. The process of adding new features sometimes is terribly frustrating
though even when looking (and cheering) from the sidelines. It feels bad that
adding another package to the &lt;a href="https://pypi.org/user/matthiask/"&gt;list of packages I
maintain&lt;/a&gt; so clearly seems to be the better
way to &lt;strong&gt;get things done&lt;/strong&gt; compared to proposing a new feature for Django
itself. I hope &lt;a href="https://406.ch/writing/weeknotes-2024-week-49/"&gt;processes change
somewhat&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But I digress.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ProseEditorWidget&lt;/code&gt; in
&lt;a href="https://github.com/matthiask/django-prose-editor/"&gt;django-prose-editor&lt;/a&gt; wants
to ship CSS, JavaScript and some JSON to the browser for the widget. So, of
course I used object-based media assets for this instead of widget HTML
templates. Media assets are deduplicated and sorted by Django. If different
editor presets use differing lists of assets they are smartly merged by
&lt;code&gt;forms.Media&lt;/code&gt; using a topological sort. You get those niceties for free when
using &lt;code&gt;forms.Media&lt;/code&gt; and everything just works, so what&amp;rsquo;s not to like?&lt;/p&gt;
&lt;p&gt;The only thing which isn&amp;rsquo;t to like is that Django, at the time of writing,
doesn&amp;rsquo;t provide any classes helping with this. You can put strings into
&lt;code&gt;forms.Media&lt;/code&gt; or you can put objects with a &lt;code&gt;__html__()&lt;/code&gt; method in there. The
latter of course is all that&amp;rsquo;s needed to support more advanced use cases &amp;ndash; and
that&amp;rsquo;s exactly what
&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset&lt;/a&gt; now provides, and
what django-prose-editor uses.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset&lt;/a&gt; has long supported
a &lt;code&gt;JS&lt;/code&gt; class with support for additional
attributes, for example:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;js_asset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JS&lt;/span&gt;

&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;JS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;asset.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;asset-script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;data-answer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;42&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since 3.0 the package also comes with a &lt;code&gt;CSS&lt;/code&gt; and &lt;code&gt;JSON&lt;/code&gt; class:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;js_asset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CSS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JSON&lt;/span&gt;

&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;widget-cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;CSS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;widget/style.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;CSS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;p{color:red;}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;JS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;widget/script.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;module&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This produces the following HTML:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;widget-cfg&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cfg&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;42&lt;/span&gt;&lt;span class="p"&gt;}&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/static/widget/style.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;}&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/static/widget/script.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;module&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code which is proposed for Django supports the JavaScript use case but with
a slightly different API:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django.forms&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Script&lt;/span&gt;

&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;Script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;widget/script.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;module&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This looks slightly nicer as long as you don&amp;rsquo;t use e.g. data attributes,
because then you have to do:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django.forms&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Script&lt;/span&gt;

&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;Script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;widget/script.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data-cfg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I always forget that Python supports passing keyword arguments names which
aren&amp;rsquo;t valid Python identifiers (but only when using &lt;code&gt;**kwargs&lt;/code&gt;). I personally
don&amp;rsquo;t care much either way, and when my packages can finally drop compatibility
with Django versions which do not support all these functionalities yet I&amp;rsquo;ll
finally be able to retire
&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset&lt;/a&gt;. That won&amp;rsquo;t happen
any time soon though, if only because I like supporting old versions of Django
because I have so many Django-based websites running somewhere.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2024 week 49)</title><link href="https://406.ch/writing/weeknotes-2024-week-49/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-49/</id><published>2024-12-06T12:00:00Z</published><updated>2024-12-06T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-49"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-49"&gt;Weeknotes (2024 week 49)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="django-steering-council-elections"&gt;&lt;a class="toclink" href="#django-steering-council-elections"&gt;Django Steering Council elections&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been thinking long and hard about running for the Django Steering Council. I think there are a few things I could contribute since I&amp;rsquo;ve been using Django for 16 or more years, and have been working on, maintaining and publishing third-party apps almost all this time. I have also contributed a few small features to Django core itself, and contributed my fair share of tests and bugfixes. The reason why I haven&amp;rsquo;t been more involved was always that I feared the review process with what I perceive to be a too unrestrained perfectionism. Teaching people is good, but I fear that those who teach are self-selected survivors of the process, which come to appreciate the perfectionism a bit too much. It&amp;rsquo;s somewhat the same as with the Swiss naturalization process &amp;ndash; the hurdles are very high, and some of those who weather the process maybe are or grow to be too fond of it.&lt;/p&gt;
&lt;p&gt;An important point is that this has nothing to do with being nice (or not). Everybody has always been great, maybe with the exception of myself back when I didn&amp;rsquo;t understand that the problem wasn&amp;rsquo;t the individuals but the way everyone has agreed things should be done.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not the only one who thinks that we &lt;a href="https://knowyourmeme.com/memes/we-should-improve-society-somewhat"&gt;should improve the process somewhat&lt;/a&gt;. So, I&amp;rsquo;m definitely going to look out for candidates who think this is important.&lt;/p&gt;
&lt;p&gt;There are a few reasons why I&amp;rsquo;m not running myself at this time. A somewhat important reason is that my candidacy wouldn&amp;rsquo;t help diversity at all. This shouldn&amp;rsquo;t discourage anyone else with the same background from running &amp;ndash; we cannot change the world all at once. More importantly, I have more personal reasons for being hesitant to accept new commitments. That being said, I&amp;rsquo;m looking forward to be more involved in the community in other ways. And also, it&amp;rsquo;s not now or never.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.5.4&lt;/a&gt;: No functional changes, only code golfing. It&amp;rsquo;s nice to have a working cookie banner with a solution for embedding third party content only when people consent in less than 4KiB of minified (not compressed!) JavaScript.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-admin-ordering/"&gt;django-admin-ordering 0.20&lt;/a&gt;: Objects can now be reordered using arrow buttons instead of drag drop or manually changing the ordering field&amp;rsquo;s value. This should make the package more accessible. It&amp;rsquo;s always a joy when people contribute such useful improvements.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.10a?&lt;/a&gt;: See &lt;a href="https://406.ch/writing/rebuilding-django-prose-editor-from-the-ground-up/"&gt;the recent blog post&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Rebuilding django-prose-editor from the ground up</title><link href="https://406.ch/writing/rebuilding-django-prose-editor-from-the-ground-up/" rel="alternate" /><id>https://406.ch/writing/rebuilding-django-prose-editor-from-the-ground-up/</id><published>2024-12-04T12:00:00Z</published><updated>2024-12-04T12:00:00Z</updated><summary type="html">&lt;h1 id="rebuilding-django-prose-editor-from-the-ground-up"&gt;&lt;a class="toclink" href="#rebuilding-django-prose-editor-from-the-ground-up"&gt;Rebuilding django-prose-editor from the ground up&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The &lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor&lt;/a&gt; package provides a HTML editor based upon the &lt;a href="https://prosemirror.net/"&gt;ProseMirror toolkit&lt;/a&gt; for the Django administration interface and for the frontend.&lt;/p&gt;
&lt;p&gt;The package has been extracted from a customer project and open sourced so that it could be used in other projects as well. It followed a very restricted view of how rich text editors should work, which I have initially added to the &lt;a href="https://github.com/feincms/feincms/commit/70cd7a1244438d2ba97852256f77daa2c870c345#diff-556c5559a716059d4fb714ad34de6a9845870e8d55bbd2cb9d77c732eb961388"&gt;FeinCMS repository when documenting the design decisions more than 15 years ago&lt;/a&gt; &lt;small&gt;(Note that I didn&amp;rsquo;t edit the paragraph, it&amp;rsquo;s reproduced here as it was back then, with all the errors and heedlessness.)&lt;/small&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All of this convinced me that offering the user a rich text editor with too much capabilites is a really bad idea. The rich text editor in FeinCMS only has bold, italic, bullets, link and headlines activated (and the HTML code button, because that&amp;rsquo;s sort of inevitable &amp;ndash; sometimes the rich text editor messes up and you cannot fix it other than going directly into the HTML code. Plus, if someone really knows what he&amp;rsquo;s doing, I&amp;rsquo;d still like to give him the power to shot his own foot).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My personal views are unchanged. I have to recognize though that forcing this idea upon everyone isn&amp;rsquo;t workable and that this would mean that I&amp;rsquo;d have to find a different editor for most projects just because people really want or need more rope. Going back to an editor which allows everything was out of the question, so I had to look around for a way to allow project-specific extensions for the editor.&lt;/p&gt;
&lt;p&gt;Of course that&amp;rsquo;s problematic, since Django packages and Python virtualenvs do not offer a good way of shipping CSS and JavaScript which should be available for a frontend bundler to process. The existing &lt;a href="https://docs.djangoproject.com/en/5.1/ref/contrib/staticfiles/"&gt;Django staticfiles app&lt;/a&gt; is great, works well, but it&amp;rsquo;s not a bundler &amp;ndash; and it shouldn&amp;rsquo;t be.&lt;/p&gt;
&lt;p&gt;So, I started shopping around for ways to make ProseMirror extensible while keeping extensions clean and well localized. Instead of inventing another plugin ecosystem I settled on &lt;a href="https://tiptap.dev/"&gt;Tiptap&lt;/a&gt; which uses ProseMirror under the hood. The abstractions are pleasantly leaky &amp;ndash; if you know how to work with ProseMirror&amp;rsquo;s API, you can use Tiptap&amp;rsquo;s API without any issues. That was important for me, since I already have a somewhat large selection of plugins which I do not want to reimplement from the ground up.&lt;/p&gt;
&lt;p&gt;I had already looked at Tiptap a few years back, but ultimately stayed with ProseMirror because I liked some behaviors better (such as not including trailing spaces in marks) and because I didn&amp;rsquo;t need the extensibility which at the time only made the resulting bundle much bigger.&lt;/p&gt;
&lt;p&gt;Now, things have improved a lot, and I&amp;rsquo;m really happy with Tiptap and the development version of django-prose-editor. &lt;a href="https://github.com/matthiask/django-prose-editor/?tab=readme-ov-file#customization"&gt;Writing an editor extension in project code is great&lt;/a&gt;, and my editor core stays nice. Also the list of readily available extensions is large, and most of the things just work.&lt;/p&gt;</summary></entry></feed>