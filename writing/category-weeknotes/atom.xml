<?xml version='1.0' encoding='utf-8'?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom"><title>Matthias Kestenholz: Posts about Weeknotes</title><link href="https://406.ch/writing/category-weeknotes/atom.xml" rel="self" /><link href="https://406.ch/writing/category-weeknotes/" rel="alternate" /><id>https://406.ch/writing/category-weeknotes/</id><updated>2025-08-29T12:00:00Z</updated><author><name>Matthias Kestenholz</name></author><entry><title>Weeknotes (2025 week 35)</title><link href="https://406.ch/writing/weeknotes-2025-week-35/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-35/</id><published>2025-08-29T12:00:00Z</published><updated>2025-08-29T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-35"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-35"&gt;Weeknotes (2025 week 35)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Summer was and is nice. The hot days seem to be over (for now), but in the last
years summer hasn&amp;rsquo;t really left until the end of September, so we&amp;rsquo;ll see. I
personally like the warm weather but I really hoped that our leaders were
smarter. The &lt;a href="https://406.ch/writing/category-climate/"&gt;climate emergency&lt;/a&gt;
could be seen from far away. The pigheadedness is hard to stomach. And of
course it&amp;rsquo;s not the only problem we&amp;rsquo;re facing as humanity at all.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I did some longer-form writing about two of the releases here: &lt;a href="https://406.ch/writing/menu-improvements-in-django-prose-editor/"&gt;Menu improvements in django-prose-editor&lt;/a&gt; and &lt;a href="https://406.ch/writing/django-content-editor-cloning/"&gt;django-content-editor now supports cloning of content&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 6.0&lt;/a&gt;:
  We have released a new version of the toolbar which supports persisting
  debugging data to the database. This is especially useful when using ASGI,
  because we cannot use threadlocal storage for this data then.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.18&lt;/a&gt;:
  Reworked the menu system to support dropdowns, not just button groups. Added
  a custom &lt;code&gt;TextClass&lt;/code&gt; extension which allows adding classes to spans and a
  &lt;code&gt;NodeClass&lt;/code&gt; extension which allows adding classes to nodes. Tiptap supports
  adding arbitrary styles, I&amp;rsquo;d rather limit this a bit more and only offer
  predefined CSS classes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 8.0&lt;/a&gt;:
  Added support for cloning content. Made the region tabs stick to the top of
  the browser window.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.18&lt;/a&gt;: Improved the
  folder deletion interface slightly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-mptt/"&gt;django-mptt 0.18&lt;/a&gt;: I still seem to be maintaining the project even though I officially marked the project as unmaintained &lt;a href="https://github.com/django-mptt/django-mptt/commit/6f6c1c485f3adc1d579f8d22e0279ce1d52334f6"&gt;more than 4 years ago&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2025 week 27)</title><link href="https://406.ch/writing/weeknotes-2025-week-27/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-27/</id><published>2025-07-05T12:00:00Z</published><updated>2025-07-05T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-27"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-27"&gt;Weeknotes (2025 week 27)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have again missed a few weeks, so the releases section will be longer than usual since it covers six weeks.&lt;/p&gt;
&lt;h2 id="django-prose-editor"&gt;&lt;a class="toclink" href="#django-prose-editor"&gt;django-prose-editor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have totally restructured the documentation to make it clearer. The &lt;a href="https://django-prose-editor.readthedocs.io/en/latest/configuration.html"&gt;configuration chapter&lt;/a&gt; is shorter and more focussed, and the &lt;a href="https://django-prose-editor.readthedocs.io/en/latest/custom_extensions.html"&gt;custom extensions chapter&lt;/a&gt; actually shows all required parts now.&lt;/p&gt;
&lt;p&gt;The most visible change is probably the refactored menu system. Extensions now
have an &lt;code&gt;addMenuItems&lt;/code&gt; method where they can add their own buttons to the menu
bar. I wanted to do this for a long time but have only just this week found a
way to achieve this which I actually like.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve reported a bug to Tiptap where a &lt;code&gt;.can()&lt;/code&gt; chain always succeeded even though the actual operation could fail (&lt;a href="https://github.com/ueberdosis/tiptap/issues/6306"&gt;#6306&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Finally, I have also switched from &lt;a href="https://esbuild.github.io/"&gt;esbuild&lt;/a&gt; to
&lt;a href="https://rslib.rs/"&gt;rslib&lt;/a&gt;; I&amp;rsquo;m a heavy user of rspack anyway and am more at
home with its configuration.&lt;/p&gt;
&lt;h2 id="django-content-editor"&gt;&lt;a class="toclink" href="#django-content-editor"&gt;django-content-editor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The 7.4 release mostly contains minor changes, one new feature is the
&lt;code&gt;content_editor.admin.RefinedModelAdmin&lt;/code&gt; class. It includes tweaks to Django&amp;rsquo;s
standard behavior such as supporting a &lt;code&gt;Ctrl-S&lt;/code&gt; shortcut for the &amp;ldquo;Save and
continue editing&amp;rdquo; functionality and an additional warning when people want to
delete inlines and instead delete the whole object. This seems to happen often
even though people are shown the full list of objects which will be deleted.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.15&lt;/a&gt;: See above&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.4.1&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.5.1&lt;/a&gt;: Now supports customizing the prose editor configuration (when using &lt;code&gt;format: "prose"&lt;/code&gt;) and also includes validation support for foreign key references in the JSON data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.6&lt;/a&gt;: The sanitizer started crashing when used with &lt;code&gt;lxml&amp;gt;=6&lt;/code&gt; when being fed strings with control characters inside.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django_recent_objects/"&gt;django-recent-objects 0.1.1&lt;/a&gt;: Changed the code to use &lt;code&gt;UNION ALL&lt;/code&gt; instead of &lt;code&gt;UNION&lt;/code&gt; when determining which objects to fetch from all tables.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.4.1&lt;/a&gt;: Added experimental support for rendering sections. Sections can be nested, so they are more powerful than subregions. Also, added warnings when registering plugin proxies for rendering &lt;em&gt;and&lt;/em&gt; fetching, since that will mostly likely lead to duplicated objects in the rendered output.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.20&lt;/a&gt;: Added &lt;code&gt;tree_info&lt;/code&gt; and &lt;code&gt;recursetree&lt;/code&gt; template tags. Optimized the performance by avoiding the rank table if easily possible. Added stronger recommendations to pre-filter the table using &lt;code&gt;.tree_filter()&lt;/code&gt; or &lt;code&gt;.tree_exclude()&lt;/code&gt; when working with small subsets of large datasets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-ckeditor/"&gt;django-ckeditor 6.7.3&lt;/a&gt;: Added a trove identifeir for recent Django versions. It still works fine, but it&amp;rsquo;s deprecated and shouldn&amp;rsquo;t be used since it still uses the unmaintained CKEditor 4 line (since we do not ship the commercial LTS version).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.6.1&lt;/a&gt;: Golfed the generated CSS and JavaScript bundle down to below 4000 bytes again, including the YouTube/Vimeo/etc. wrapper which only loads external content when users consent.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2025 week 21)</title><link href="https://406.ch/writing/weeknotes-2025-week-21/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-21/</id><published>2025-05-21T12:00:00Z</published><updated>2025-05-21T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-21"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-21"&gt;Weeknotes (2025 week 21)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have missed two co-writing sessions and didn&amp;rsquo;t manage to post much outside of that, but let&amp;rsquo;s get things back on track.&lt;/p&gt;
&lt;h2 id="django-prose-editor-012"&gt;&lt;a class="toclink" href="#django-prose-editor-012"&gt;django-prose-editor 0.12&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://406.ch/writing/weeknotes-2025-week-15/#progress-on-the-prose-editor"&gt;last weeknotes
entry&lt;/a&gt;
contains more details about the work of really connecting Tiptap extensions
with server-side sanitization. 0.12 includes many improvements and bugfixes
which have been made during real-world use of the prose editor in
customer-facing products.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not completely happy about the way we&amp;rsquo;re specifying the editor
configuration and haven&amp;rsquo;t been able to settle on either &lt;code&gt;extensions&lt;/code&gt; or
&lt;code&gt;config&lt;/code&gt; as a keyword argument. The field supports both ways, at least for
now. It&amp;rsquo;s probably fine.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-auto-admin-fieldsets/"&gt;django-auto-admin-fieldsets 0.2&lt;/a&gt;: I wrote a blog post here: &lt;a href="https://406.ch/writing/customizing-django-admin-fieldsets-without-fearing-forgotten-fields/"&gt;Customizing Django admin fieldsets without fearing forgotten fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 5.2&lt;/a&gt;: This release contains the second half of improvements from &lt;a href="https://djangonaut.space/"&gt;Djangonaut Space&lt;/a&gt; session four where I helped out as a Navigator. The toolbar properly supports code highlighting in dark mode, sanitizes request variables better, allows customizing redirects, supports projects using &lt;a href="https://github.com/carltongibson/django-template-partials/"&gt;django-template-partials&lt;/a&gt; and more!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 25.5.1&lt;/a&gt;: The first FeinCMS release of 2025. We&amp;rsquo;re still maintaining the project and fixing bugs!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.12&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.4.1&lt;/a&gt;: Fixes much too small checkboxes when used inside tables.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2025 week 15)</title><link href="https://406.ch/writing/weeknotes-2025-week-15/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-15/</id><published>2025-04-09T12:00:00Z</published><updated>2025-04-09T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-15"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-15"&gt;Weeknotes (2025 week 15)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="djangonaut-space"&gt;&lt;a class="toclink" href="#djangonaut-space"&gt;Djangonaut Space&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have already reached the final week of the &lt;a href="https://djangonaut.space/"&gt;Djangonaut
Space&lt;/a&gt; session 4. I had a great time as a navigator
and am looking forward to participate more, but for now I&amp;rsquo;m also glad that I do
not have the additional responsibility at least for the close future.&lt;/p&gt;
&lt;p&gt;We have done great work on the
&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar&lt;/a&gt; in our
group, more is to come.&lt;/p&gt;
&lt;h2 id="progress-on-the-prose-editor"&gt;&lt;a class="toclink" href="#progress-on-the-prose-editor"&gt;Progress on the prose editor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have done much work on
&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor&lt;/a&gt; in the
last few weeks and after a large list of alphas and betas I&amp;rsquo;m nearing a state
which I want to release into the wild.&lt;/p&gt;
&lt;p&gt;The integration has been completely rethought (again) and now uses JavaScript
modules and importmaps. The ground work to support all of that in Django has
been laid in &lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The nice thing about using JavaScript modules and importmaps is that we now
have an easy way to combine the power of modern JavaScript customization with
easy cache busting using Django&amp;rsquo;s &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;. A longer post
on this is brewing and I hope to have it ready soon-ish.&lt;/p&gt;
&lt;p&gt;As a sneak peek, here&amp;rsquo;s the way it works:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django_prose_editor.fields&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ProseEditorField&lt;/span&gt;

&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProseEditorField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Bold&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Italic&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;BulletList&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;Link&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;# sanitize=True is the default when using extensions&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The nice thing about it is that the sanitization allowlist for
&lt;a href="https://github.com/messense/nh3"&gt;nh3&lt;/a&gt; only includes tags and attributes which
are enabled via the &lt;code&gt;extensions&lt;/code&gt; dict. So, you don&amp;rsquo;t have to do anything else
to be safe from XSS etc.&lt;/p&gt;
&lt;p&gt;Check out the pre-releases on
&lt;a href="https://pypi.org/project/django-prose-editor/#history"&gt;PyPI&lt;/a&gt; or have a look at
the &lt;a href="https://django-prose-editor.readthedocs.io/"&gt;documentation&lt;/a&gt; to learn more
about this project!&lt;/p&gt;
&lt;h2 id="using-claude-code"&gt;&lt;a class="toclink" href="#using-claude-code"&gt;Using Claude Code&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been using Claude Code (without editor integrations, thank you very
much) more and more. It&amp;rsquo;s a good coding companion when it comes to throwing
around ideas, drafting docs and writing unit tests including integration tests.&lt;/p&gt;
&lt;p&gt;Sometimes I&amp;rsquo;m really surprised at how good it is. Other times&amp;hellip; less so. The
tool often finds a way to get tests passing, but when the editor integration
tests directly manipulate &lt;code&gt;innerHTML&lt;/code&gt; and then Claude proclaims that
interacting with the editor is now shown to work I have to chuckle a bit. And
when I insist on doing what I mean and not just finding broken workarounds it
doesn&amp;rsquo;t really change anything. After spinning more we&amp;rsquo;re always back where we
started.&lt;/p&gt;
&lt;p&gt;I am somewhat glad that this is where we&amp;rsquo;re at now. I&amp;rsquo;m not 100% sure if it&amp;rsquo;s
progress. At least it&amp;rsquo;s surprisingly funny at times.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I haven&amp;rsquo;t written a regular weeknotes entry since the end of January, so
naturally the list here is longer than usual.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-forms/"&gt;feincms3-forms 0.5.1&lt;/a&gt;: I
  inadvertently bumped the Django dependency without actually wanting that;
  this patch release reverts that (while adding official support for new Django
  and Python versions).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-mptt/"&gt;django-mptt 0.17&lt;/a&gt;: Mariusz has done
  all the hard work for supporting newer versions of Django. I just had to
  press the release button. That being said, four years after marking the
  package as unmaintained I&amp;rsquo;m still maintaining it. At least I don&amp;rsquo;t get
  complaints anymore&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor
  0.4&lt;/a&gt;: Added a dependency
  on the pre-release of django-prose-editor and added a test suite including
  integration tests so that we actually now when stuff breaks the next time!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 5.1&lt;/a&gt;:
  See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-data/"&gt;feincms3-data&lt;/a&gt;: Added fixes to dump
  distinct objects. Spent more time than useful on the Django change which
  added a final newline to JSON-serialized data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset 3.1.2&lt;/a&gt;:
  Importmaps support, added a &lt;code&gt;static_lazy&lt;/code&gt; helper which is useful to define
  module-scoped static URLs. The later wouldn&amp;rsquo;t work with the
  &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; because the manifest doesn&amp;rsquo;t yet exist when
  &lt;code&gt;collectstatic&lt;/code&gt; runs, so the actual evaluation of static URLs has to be
  postponed. The lazy version solves this nicely.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.21.1&lt;/a&gt; and &lt;a href="https://pypi.org/project/feincms3-language-sites/"&gt;feincms3-language-sites 0.4.1&lt;/a&gt;: See the relevant &lt;a href="https://406.ch/writing/til-tools-exist-which-do-not-lowercase-domain-names-when-requesting-websites-over-http-s/"&gt;TIL&lt;/a&gt; blogpost.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2025 week 05)</title><link href="https://406.ch/writing/weeknotes-2025-week-05/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-05/</id><published>2025-01-29T12:00:00Z</published><updated>2025-01-29T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-05"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-05"&gt;Weeknotes (2025 week 05)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="djangonaut-space"&gt;&lt;a class="toclink" href="#djangonaut-space"&gt;Djangonaut Space&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In December I wrote a few paragraphs about &lt;a href="https://406.ch/writing/weeknotes-2024-week-49/"&gt;my decision to not run for the
Django Steering Council&lt;/a&gt;,
mentioning that I want to contribute in different ways.&lt;/p&gt;
&lt;p&gt;I have offered to contribute to Djangonaut Space to do some mentoring. I&amp;rsquo;m
already a bit stressed, but that&amp;rsquo;s normal and to be expected. I&amp;rsquo;ll probably
have more to share about that in the close future!&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/feincms/feincms3-cookiecontrol/commits/main/"&gt;feincms-cookiecontrol 1.6&lt;/a&gt;: Removed the hardcoded dependency upon &lt;a href="https://feincms3.readthedocs.io/"&gt;feincms3&lt;/a&gt; and some additional code golfing. The cookie banner JavaScript is now back to &amp;lt;4KiB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-curtains/"&gt;django-curtains 0.7&lt;/a&gt;: Updated the CI job list and modernized the package somewhat, no code changes necessary. It&amp;rsquo;s good to release updated versions though just to show that it&amp;rsquo;s still actively maintained.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.10.3&lt;/a&gt;: Small CSS fixes and mainly updated TipTap/ProseMirror.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.22&lt;/a&gt;: The updated version no longer autodeletes processed images; this wasn&amp;rsquo;t really a problem before but I was a little bit fearful that images are still referenced elsewhere and this change let&amp;rsquo;s me sleep better.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms-oembed/"&gt;feincms-oembed 2.0&lt;/a&gt;: Oembed support for FeinCMS 1 without actually depending upon the FeinCMS package itself. Still works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.2&lt;/a&gt;: The &lt;code&gt;Region&lt;/code&gt; type is now hashable; this may be useful, or not.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.3.1&lt;/a&gt;: I undeprecated the &lt;code&gt;TemplateMixin&lt;/code&gt; because even though &lt;code&gt;PageTypeMixin&lt;/code&gt; is nicer, sometimes all you need is a template selector.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2025 week 03)</title><link href="https://406.ch/writing/weeknotes-2025-week-03/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2025-week-03/</id><published>2025-01-15T12:00:00Z</published><updated>2025-01-15T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2025-week-03"&gt;&lt;a class="toclink" href="#weeknotes-2025-week-03"&gt;Weeknotes (2025 week 03)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="claude-ai-helped-me-for-the-first-time"&gt;&lt;a class="toclink" href="#claude-ai-helped-me-for-the-first-time"&gt;Claude AI helped me for the first time&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/matthiask/django-imagefield"&gt;django-imagefield&lt;/a&gt; prefers
processing thumbnails, cropped images etc. directly when saving the model and
not later on demand; it&amp;rsquo;s faster and also you&amp;rsquo;ll know it immediately when an
image couldn&amp;rsquo;t be processed for some reason instead of only later when people
actually try browsing your site.&lt;/p&gt;
&lt;p&gt;A consequence is that if you change formats you have to remember that you have
to reprocess the images. The Django app comes with a management command
&lt;code&gt;./manage.py process_imagefields&lt;/code&gt; to help with this. I have added parallel
processing based on &lt;code&gt;concurrent.futures&lt;/code&gt; to it some time ago so that the
command completes faster when it is being run on a system with several cores.&lt;/p&gt;
&lt;p&gt;A work colleague is using macOS (many are, in fact), and he always got
multiprocessing Python crashes. This is a well known issue and I remember
reading about it a few years ago. I checked the docs and saw that the
&lt;a href="https://docs.python.org/3/library/concurrent.futures.html"&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt;
page doesn&amp;rsquo;t mention macOS, but
&lt;a href="https://docs.python.org/3/library/multiprocessing.html"&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt;
does. So, I hoped that a simple rewrite of the management command using
&lt;code&gt;multiprocessing&lt;/code&gt; might fix it.&lt;/p&gt;
&lt;p&gt;Because I was in a rush and really didn&amp;rsquo;t want to do it I turned to an AI
assistant for doing this boring work. To my surprise it immediately produced a
version which I could easily fix by hand to produce a working version. Of
course, the initial response was totally broken, removed code it wasn&amp;rsquo;t
supposed to, and even the syntax was invalid. I didn&amp;rsquo;t expect more though, but
what was surprising was that it actually felt like I had to do less work at
this time.&lt;/p&gt;
&lt;p&gt;The assistant also helped adding a &lt;code&gt;--no-parallel&lt;/code&gt; flag to the management
command. The output was even more broken than the output of the change
mentioned above, but again, I could easily fix it to achieve what I wanted.&lt;/p&gt;
&lt;p&gt;The fact that I know the code and &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt; well certainly
helped, the assistant would really have helped without that knowledge.&lt;/p&gt;
&lt;p&gt;In the end, switching to &lt;code&gt;multiprocessing&lt;/code&gt; didn&amp;rsquo;t help, but adding the
&lt;code&gt;--no-parallel&lt;/code&gt; flag allowed them to run the processing themselves by not
spawning any additional threads or processes.&lt;/p&gt;
&lt;p&gt;The energy use and the stealing of copyrighted material done by the AI
companies is still really bad. It does feel somewhat OK to use an AI assistant
in an area where I&amp;rsquo;m proficient as well and where I probably also supplied
training material (without being asked if I wanted this) though. It&amp;rsquo;s making me
slightly faster, and doesn&amp;rsquo;t allow me to do things I really couldn&amp;rsquo;t otherwise.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 24.12.3&lt;/a&gt;: I have added a TinyMCE
  7 integration to FeinCMS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.21.1&lt;/a&gt;: See
  above.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 51)</title><link href="https://406.ch/writing/weeknotes-2024-week-51/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-51/</id><published>2024-12-20T12:00:00Z</published><updated>2024-12-20T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-51"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-51"&gt;Weeknotes (2024 week 51)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="building-forms-using-django"&gt;&lt;a class="toclink" href="#building-forms-using-django"&gt;Building forms using Django&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I last wrote about this topic &lt;a href="https://406.ch/writing/building-forms-with-the-django-admin/"&gt;in April&lt;/a&gt;. It has &lt;a href="https://mastodon.social/@webology/113669270531953652"&gt;resurfaced on Mastodon this week&lt;/a&gt;. I&amp;rsquo;m thinking about writing a &lt;a href="https://github.com/feincms/feincms3-forms"&gt;feincms3-forms&lt;/a&gt; demo app, but I already have too much on my plate. I think composing a forms builder on top of &lt;a href="https://django-content-editor.readthedocs.io/"&gt;django-content-editor&lt;/a&gt; is the way to go, instead of replacing the admin interface altogether &amp;ndash; sure, you can always do that, but it&amp;rsquo;s so much less composable&amp;hellip;&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.2&lt;/a&gt;: No real changes, added support for Python 3.13 basically without changing anything. It&amp;rsquo;s always nice when this happens.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.21&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.10&lt;/a&gt;: I rebuilt django-prose-editor from the ground up &lt;a href="https://406.ch/writing/rebuilding-django-prose-editor-from-the-ground-up/"&gt;and wrote about that two weeks ago&lt;/a&gt;. The 0.10 release marks the final point of this particular rewrite.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset 3.0&lt;/a&gt;: See the blog post from &lt;a href="https://406.ch/writing/object-based-assets-for-django-s-forms-media/"&gt;this week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 49)</title><link href="https://406.ch/writing/weeknotes-2024-week-49/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-49/</id><published>2024-12-06T12:00:00Z</published><updated>2024-12-06T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-49"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-49"&gt;Weeknotes (2024 week 49)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="django-steering-council-elections"&gt;&lt;a class="toclink" href="#django-steering-council-elections"&gt;Django Steering Council elections&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been thinking long and hard about running for the Django Steering Council. I think there are a few things I could contribute since I&amp;rsquo;ve been using Django for 16 or more years, and have been working on, maintaining and publishing third-party apps almost all this time. I have also contributed a few small features to Django core itself, and contributed my fair share of tests and bugfixes. The reason why I haven&amp;rsquo;t been more involved was always that I feared the review process with what I perceive to be a too unrestrained perfectionism. Teaching people is good, but I fear that those who teach are self-selected survivors of the process, which come to appreciate the perfectionism a bit too much. It&amp;rsquo;s somewhat the same as with the Swiss naturalization process &amp;ndash; the hurdles are very high, and some of those who weather the process maybe are or grow to be too fond of it.&lt;/p&gt;
&lt;p&gt;An important point is that this has nothing to do with being nice (or not). Everybody has always been great, maybe with the exception of myself back when I didn&amp;rsquo;t understand that the problem wasn&amp;rsquo;t the individuals but the way everyone has agreed things should be done.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not the only one who thinks that we &lt;a href="https://knowyourmeme.com/memes/we-should-improve-society-somewhat"&gt;should improve the process somewhat&lt;/a&gt;. So, I&amp;rsquo;m definitely going to look out for candidates who think this is important.&lt;/p&gt;
&lt;p&gt;There are a few reasons why I&amp;rsquo;m not running myself at this time. A somewhat important reason is that my candidacy wouldn&amp;rsquo;t help diversity at all. This shouldn&amp;rsquo;t discourage anyone else with the same background from running &amp;ndash; we cannot change the world all at once. More importantly, I have more personal reasons for being hesitant to accept new commitments. That being said, I&amp;rsquo;m looking forward to be more involved in the community in other ways. And also, it&amp;rsquo;s not now or never.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.5.4&lt;/a&gt;: No functional changes, only code golfing. It&amp;rsquo;s nice to have a working cookie banner with a solution for embedding third party content only when people consent in less than 4KiB of minified (not compressed!) JavaScript.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-admin-ordering/"&gt;django-admin-ordering 0.20&lt;/a&gt;: Objects can now be reordered using arrow buttons instead of drag drop or manually changing the ordering field&amp;rsquo;s value. This should make the package more accessible. It&amp;rsquo;s always a joy when people contribute such useful improvements.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.10a?&lt;/a&gt;: See &lt;a href="https://406.ch/writing/rebuilding-django-prose-editor-from-the-ground-up/"&gt;the recent blog post&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 47)</title><link href="https://406.ch/writing/weeknotes-2024-week-47/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-47/</id><published>2024-11-20T12:00:00Z</published><updated>2024-11-20T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-47"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-47"&gt;Weeknotes (2024 week 47)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I missed a single co-writing session and of course that lead to four weeks of no posts at all to the blog. Oh well.&lt;/p&gt;
&lt;h2 id="debugging"&gt;&lt;a class="toclink" href="#debugging"&gt;Debugging&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I want to share a few debugging stories from the last weeks.&lt;/p&gt;
&lt;h3 id="pillow-11-and-djangos-get_image_dimensions"&gt;&lt;a class="toclink" href="#pillow-11-and-djangos-get_image_dimensions"&gt;Pillow 11 and Django&amp;rsquo;s &lt;code&gt;get_image_dimensions&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The goal of &lt;a href="https://github.com/matthiask/django-imagefield"&gt;django-imagefield&lt;/a&gt;
was to deeply verify that Django and Pillow are able to work with uploaded
files; some files can be loaded, their dimensions can be inspected, but
problems happen later when Pillow actually tries resizing or filtering files.
Because of this django-imagefield does more work when images are added to the
system instead of working around it later. (Django doesn&amp;rsquo;t do this on purpose
because doing all this work up-front could be considered a DoS factor.)&lt;/p&gt;
&lt;p&gt;In the last weeks I suddenly got recurring errors from saved files again,
something which shouldn&amp;rsquo;t happen, but obviously did.&lt;/p&gt;
&lt;p&gt;Django wants to read image dimensions when accessing or saving image files (by
the way, always use &lt;code&gt;height_field&lt;/code&gt; and &lt;code&gt;width_field&lt;/code&gt;, otherwise Django will
open and inspect image files even when you&amp;rsquo;re only loading Django models from
the database&amp;hellip;!) and it uses a smart and wonderful&lt;sup id="fnref:fn1"&gt;&lt;a class="footnote-ref" href="#fn:fn1"&gt;1&lt;/a&gt;&lt;/sup&gt; hack to do this: It reads a few hundred bytes from the image file, instructs Pillow to inspect the file and if an exception happens it reads more bytes and tries again. This process relies on the exact type of exceptions raised internally though, and the release of Pillow 11 changed the types&amp;hellip; for some file types only. Fun times.&lt;/p&gt;
&lt;p&gt;The issue had already been reported as
&lt;a href="https://code.djangoproject.com/ticket/33240"&gt;#33240&lt;/a&gt; and is now tracked as &lt;a href="https://github.com/python-pillow/Pillow/issues/8530"&gt;#8530&lt;/a&gt; on the Pillow issue tracker. Let&amp;rsquo;s see what happens.
For now, django-imagefield declares itself to be incompatible with Pillow
11.0.0 so that this error cannot happen.&lt;/p&gt;
&lt;h3 id="rspack-and-lightningcss-shuffled-css-properties"&gt;&lt;a class="toclink" href="#rspack-and-lightningcss-shuffled-css-properties"&gt;rspack and lightningcss shuffled CSS properties&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://rspack.dev/"&gt;rspack&lt;/a&gt; 1.0 started reordering CSS properties which of course lead to CSS properties overriding each other in the incorrect order. That was a fun one to debug. I tracked the issue down to the switch from the swc CSS minimizer to &lt;a href="https://github.com/parcel-bundler/lightningcss"&gt;lightningcss&lt;/a&gt; and submitted a reproduction to the &lt;a href="https://github.com/parcel-bundler/lightningcss/issues/805#issuecomment-2358219597"&gt;issue tracker&lt;/a&gt;. My rust knowledge wasn&amp;rsquo;t up to the task of attempting to submit a fix myself. Luckily, it has been fixed in the meantime.&lt;/p&gt;
&lt;h3 id="rspack-problems"&gt;&lt;a class="toclink" href="#rspack-problems"&gt;rspack problems&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I have another problem with rspack where I haven&amp;rsquo;t yet tracked down the issue. rspack produces a broken bundle starting with &lt;a href="https://github.com/web-infra-dev/rspack/releases/tag/v1.0.0-beta.2"&gt;1.0.0-beta.2&lt;/a&gt; when compiling a particular project of mine. I have the suspicion that I have misconfigured some stuff related to import paths and yarn workspaces. I have no idea how anyone could have a complete understanding of these things&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; The problem was &lt;a href="https://github.com/web-infra-dev/rspack/issues/8027"&gt;#8027&lt;/a&gt;, &lt;code&gt;experiments.css&lt;/code&gt; is quite broken for now.&lt;/p&gt;
&lt;p&gt;Bundlers are complex beasts, and I&amp;rsquo;m happy that I mostly can just use them.&lt;/p&gt;
&lt;h3 id="closing-thoughts"&gt;&lt;a class="toclink" href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Debugging is definitely a rewarding activity for me. I like tracking stuff down like this. Unfortunately, problems always tend to crop up when time is scarce already, but what can you do.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quite a few releases, many of them verifying Python 3.13 and Django 5.1 support (if it hasn&amp;rsquo;t been added already in previous releases). The nicest part: If I remember correctly I didn&amp;rsquo;t have to change anything anywhere, everything just continues to work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-admin-ordering/"&gt;django-admin-ordering 0.19&lt;/a&gt;: I added support for automatically renumbering objects on page load. This is mostly useful if you already have existing data which isn&amp;rsquo;t ordered yet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-data/"&gt;feincms3-data 0.7&lt;/a&gt;: Made sure that objects are dumped in a deterministic order when dumping. I wanted to compare JSON dumps by hand before and after a big data migration in a customer project and differently ordered dumps made the comparison impossible.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.9&lt;/a&gt;: I updated the ProseMirror packages, and put the editor into read-only mode for &lt;code&gt;&amp;lt;textarea disabled&amp;gt;&lt;/code&gt; elements.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-language-sites/"&gt;feincms3-language-sites 0.4&lt;/a&gt;: Finally released the update containing the necessary hook to validate page trees and their unique paths before moving produces integrity errors. Error messages are nicer than internal server errors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.17.2&lt;/a&gt;: The value of the cookie which is used to save the URL where users should be redirected to after authentication wasn&amp;rsquo;t checked for validity when setting it, only when reading it. This meant that attackers could produce invalid header errors in application servers. No real security problem here when using authlib&amp;rsquo;s code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.3&lt;/a&gt;: Minor update which mostly removes support for outdated Python and Django versions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.20&lt;/a&gt;: See above.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:fn1"&gt;
&lt;p&gt;wonderfully ugly&amp;#160;&lt;a class="footnote-backref" href="#fnref:fn1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary></entry><entry><title>Weeknotes (2024 week 43)</title><link href="https://406.ch/writing/weeknotes-2024-week-43/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-43/</id><published>2024-10-23T12:00:00Z</published><updated>2024-10-23T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-43"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-43"&gt;Weeknotes (2024 week 43)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I had some much needed time off, so this post isn&amp;rsquo;t that long even though &lt;a href="https://406.ch/writing/weeknotes-2024-week-39/"&gt;four weeks have passed since the last entry&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="from-webpack-to-rspack"&gt;&lt;a class="toclink" href="#from-webpack-to-rspack"&gt;From webpack to rspack&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been really happy with &lt;a href="https://rspack.dev/"&gt;rspack&lt;/a&gt; lately. Converting
webpack projects to rspack is straightforward since it mostly supports the same
configuration, but it&amp;rsquo;s much much faster since it&amp;rsquo;s written in Rust. Rewriting
things in Rust is a recurring theme, but in this case it really helps a lot.
Building the frontend of a larger project of ours consisting of several admin
tools and complete frontend implementations for different teaching materials
only takes 10 seconds now instead of several minutes. That&amp;rsquo;s a big and relevant
difference.&lt;/p&gt;
&lt;p&gt;Newcomers should probably still either use &lt;a href="https://rsbuild.dev/"&gt;rsbuild&lt;/a&gt;,
&lt;a href="https://vite.dev/"&gt;Vite&lt;/a&gt; or maybe no bundler at all. Vanilla JS and browser
support for ES modules is great. That being said, I like cache busting,
optimized bundling and far-future expiry headers in production and hot module
reloading in development a lot, so learning to work with a frontend bundler is
definitely still worth it.&lt;/p&gt;
&lt;h2 id="dark-mode-and-light-mode"&gt;&lt;a class="toclink" href="#dark-mode-and-light-mode"&gt;Dark mode and light mode&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been switching themes in my preferred a few times per year in the past. The following ugly bit of vimscript helps switch me the theme each time the sun comes out when working outside:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;:&lt;span class="nv"&gt;light&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;function&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;FiatLux&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;:&lt;span class="nv"&gt;light&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;:&lt;span class="nv"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;light&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nv"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;:&lt;span class="nv"&gt;light&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;:&lt;span class="nv"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;dark&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nv"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;:&lt;span class="nv"&gt;light&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;endif&lt;/span&gt;
&lt;span class="nv"&gt;endfunction&lt;/span&gt;
&lt;span class="nv"&gt;nnoremap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;F12&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="k"&gt;call&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;FiatLux&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;CR&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I&amp;rsquo;m using the &lt;a href="https://devsuite.app/ptyxis/"&gt;Ptyxis&lt;/a&gt; terminal emulator
currently, I haven&amp;rsquo;t investigated yet if there&amp;rsquo;s a shortcut to toggle dark and
light mode for it as well. Using F10 to open the main menu works fine though,
and using the mouse wouldn&amp;rsquo;t be painful either.&lt;/p&gt;
&lt;h2 id="helping-out-in-the-django-forum-and-the-discord"&gt;&lt;a class="toclink" href="#helping-out-in-the-django-forum-and-the-discord"&gt;Helping out in the Django forum and the Discord&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have found some pleasure in helping out in the &lt;a href="https://forum.djangoproject.com/"&gt;Django
Forum&lt;/a&gt; and in the official &lt;a href="https://discord.gg/xcRH6mN4fa"&gt;Django
Discord&lt;/a&gt;. I sometimes wonder why more people
aren&amp;rsquo;t reading the Django source code when they hit something which looks like
a bug or something which they do not understand. I find Django&amp;rsquo;s source code
very readable and I have found many nuggets within it. I&amp;rsquo;d always recommend
checking the documentation or maybe official help channels first, but the code
is also out there and that fact should be taken advantage of.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.1&lt;/a&gt;:
  Fixed a bug where the ordering and region fields were handled incorrectly
  when they appear on one line in the fieldset. Also improved the presentation
  of inlines in unknown regions and clarified the meaning of the move to region
  dropdown. Also, released the improvements from previous patch releases as a
  new minor release because that&amp;rsquo;s what I should have been doing all along.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/form-designer/"&gt;form-designer 0.27&lt;/a&gt;: A user has
  been bitten by &lt;code&gt;slugify&lt;/code&gt; removing cyrillic characters because it only keeps
  ASCII characters around. Here&amp;rsquo;s the wontfixed bug in the Django issue
  tracker: &lt;a href="https://code.djangoproject.com/ticket/8391"&gt;#8391&lt;/a&gt;. I fixed the
  issue by removing the slugification (is that even a word?) when generating
  choices.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 39)</title><link href="https://406.ch/writing/weeknotes-2024-week-39/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-39/</id><published>2024-09-25T12:00:00Z</published><updated>2024-09-25T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-39"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-39"&gt;Weeknotes (2024 week 39)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="css-for-django-forms"&gt;&lt;a class="toclink" href="#css-for-django-forms"&gt;CSS for Django forms&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Not much going on in OSS land. I have been somewhat active in the official
Django forum, discussing ways to add Python-level hooks to allow adding CSS
classes around form fields and their labels. The discussion on the
&lt;a href="https://forum.djangoproject.com/t/proposal-make-it-easy-to-add-css-classes-to-a-boundfield/32022"&gt;forum&lt;/a&gt;
and on the &lt;a href="https://github.com/django/django/pull/18266"&gt;pull request&lt;/a&gt; goes in
the direction of allowing using custom &lt;code&gt;BoundField&lt;/code&gt; classes per form or even
per project (instead of only per field as is already possible today). This
would allow overriding &lt;code&gt;css_classes&lt;/code&gt;, e.g. to add a simple &lt;code&gt;class="field"&lt;/code&gt;.
Together with &lt;code&gt;:has()&lt;/code&gt; this would probably allow me to skip using custom HTML
templates in 99% of all cases.&lt;/p&gt;
&lt;p&gt;I have also been lurking in the Discord, but more to help and less to promote
my packages and ideas :-)&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django_user_messages/"&gt;django-user-messages 1.1&lt;/a&gt;:
  Added Django 5.0, 5.1 to the CI, and fixed the migrations to no longer
  mention &lt;code&gt;index_together&lt;/code&gt; at all. It seems that squashing the migrations
  wasn&amp;rsquo;t sufficient, I also had to actually delete the old migrations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.1&lt;/a&gt;:
  &lt;a href="https://www.starlette.io/"&gt;Starlette&lt;/a&gt;&amp;rsquo;s &lt;code&gt;FileResponse&lt;/code&gt; has gained support
  for the HTTP Range header, allowing me to remove my homegrown implementation
  from the package. The blacknoise implementation is now half as long as it was
  in 1.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django_fhadmin/"&gt;django-fhadmin 2.3&lt;/a&gt;: No new
  features, only tweaks to the styling and behavior prompted by updates to
  Django&amp;rsquo;s admin interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.17&lt;/a&gt;: I have
  pruned the CI matrix and accepted a pull request adding a ru translation. I
  feel conflicted about that since I strongly believe that everything is
  political, but I don&amp;rsquo;t know if rejecting translations helps anyone.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 37)</title><link href="https://406.ch/writing/weeknotes-2024-week-37/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-37/</id><published>2024-09-11T12:00:00Z</published><updated>2024-09-11T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-37"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-37"&gt;Weeknotes (2024 week 37)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="django-debug-toolbar-alpha-with-async-support"&gt;&lt;a class="toclink" href="#django-debug-toolbar-alpha-with-async-support"&gt;django-debug-toolbar alpha with async support!&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have helped mentoring Aman Pandey who has worked all summer to add async
support to
&lt;a href="https://github.com/jazzband/django-debug-toolbar/"&gt;django-debug-toolbar&lt;/a&gt;.
&lt;a href="https://github.com/tim-schilling"&gt;Tim&lt;/a&gt; has released an alpha which contains
all of the work up to a few days ago. Test it! Let&amp;rsquo;s find the breakages before
the final release.&lt;/p&gt;
&lt;h2 id="dropping-python-39-from-my-projects"&gt;&lt;a class="toclink" href="#dropping-python-39-from-my-projects"&gt;Dropping Python 3.9 from my projects&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have read &lt;a href="https://noumenal.es/posts/the-only-green-python/yLw/"&gt;Carlton&amp;rsquo;s post about the only green Python release&lt;/a&gt; and have started dropping Python 3.9 support from many of the packages I maintain. This is such a good point:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] I’m also thinking about it in terms of reducing the number of Python versions we support in CI. It feels like a lot of trees to support 5 full versions of Python for their entire life. 🌳&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/5.0.0a0/"&gt;django-debug-toolbar 5.0.0a0&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/form-designer/"&gt;form-designer 0.26.2&lt;/a&gt;: The values
  of choice fields are now returned as-is when sending mails or exporting form
  submissions instead of only returning the slugified version.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.17.1&lt;/a&gt;: The
  &lt;a href="https://406.ch/writing/keep-content-managers-admin-access-up-to-date-with-role-based-permissions/"&gt;role-based permissions
  backend&lt;/a&gt;
  had a bug where it wouldn&amp;rsquo;t return all available permissions in all
  circumstances, leading to empty navigation sidebars in the Django
  administration. This has been fixed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.2.3&lt;/a&gt;: Bugfix release, the
  page moving interface is no longer hidden by an expanded navigation sidebar.
  I almost always turn off the sidebar in my projects so I haven&amp;rsquo;t noticed
  this.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.8.1&lt;/a&gt;:
  Contains the most recent ProseMirror updates and bugfixes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor
  7.0.10&lt;/a&gt;: Now supports
  sections. Separate blog post coming up!&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 35)</title><link href="https://406.ch/writing/weeknotes-2024-week-35/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-35/</id><published>2024-08-28T12:00:00Z</published><updated>2024-08-28T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-35"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-35"&gt;Weeknotes (2024 week 35)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="getting-deep-into-htmx-and-django-template-partials"&gt;&lt;a class="toclink" href="#getting-deep-into-htmx-and-django-template-partials"&gt;Getting deep into htmx and django-template-partials&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have been skeptical about &lt;a href="https://htmx.org/"&gt;htmx&lt;/a&gt; for some time because basically everything the library does is straightforward to do myself with a few lines of JavaScript. I am a convert now because, really, adding a few HTML attributes is nicer than copy pasting a few lines of JavaScript. Feels good.&lt;/p&gt;
&lt;p&gt;The combination of htmx with &lt;a href="https://github.com/carltongibson/django-template-partials/"&gt;django-template-partials&lt;/a&gt; is great as well. I didn&amp;rsquo;t know I had been missing template partials until I started using them. Includes are still useful, but replacing some of them with partials makes working on the project much more enjoyable.&lt;/p&gt;
&lt;p&gt;I haven&amp;rsquo;t yet had a use for &lt;a href="https://django-htmx.readthedocs.io/"&gt;django-htmx&lt;/a&gt; but I may yet surprise myself.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.17&lt;/a&gt;: django-authlib bundles &lt;code&gt;authlib.little_auth&lt;/code&gt; which offers an user model which uses the email address as the username. I have also introduced the concept of &lt;a href="https://406.ch/writing/keep-content-managers-admin-access-up-to-date-with-role-based-permissions/"&gt;roles instead of permissions&lt;/a&gt;; now I have reorganized the user admin fieldset to hide user permissions altogether. Group permissions are still available as are roles. I&amp;rsquo;m personally convinced that user permissions were a mistake.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-forms/"&gt;feincms3-forms 0.5&lt;/a&gt;: Allowed setting a maximum length for the bundled URL and email fields through the Django administration interface.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.0.7&lt;/a&gt;: Fixed a bug where plugins with several fieldsets weren&amp;rsquo;t collapsed completely.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.19.1&lt;/a&gt;: Allowed deactivating autogeneration of thumbnails completely through the &lt;code&gt;IMAGEFIELD_AUTOGENERATE&lt;/code&gt; setting. This is very useful for batch processing. Also, documented all available settings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.8&lt;/a&gt;: Added support for translating the interface elements and for restricting the available heading levels in the UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/form-designer/"&gt;form-designer 0.25&lt;/a&gt;: Fixed the type of the author field for the send-to-author processing action.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.2.2&lt;/a&gt;: Added support for embedding &lt;a href="https://www.srf.ch/play/tv"&gt;SRF play&lt;/a&gt; external content. They do not support oEmbed unfortunately.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.5.3&lt;/a&gt;: Added support for SRF play embeddings as well. The difference is that the feincms3-cookiecontrol embedding requires consent before embedding external content.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 33)</title><link href="https://406.ch/writing/weeknotes-2024-week-33/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-33/</id><published>2024-08-14T12:00:00Z</published><updated>2024-08-14T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-33"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-33"&gt;Weeknotes (2024 week 33)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="partying"&gt;&lt;a class="toclink" href="#partying"&gt;Partying&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s summer, it&amp;rsquo;s hot, and it&amp;rsquo;s dance week. &lt;a href="https://lethargy.ch/"&gt;Lethargy&lt;/a&gt; is over, &lt;a href="https://www.junglestreetgroove.ch/"&gt;Jungle Street Groove&lt;/a&gt; is coming up. Good times.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.1&lt;/a&gt;: I have finally left the alpha versioning. I&amp;rsquo;m still not committing to backwards compatibility, but I have started writing a CHANGELOG.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.7.1&lt;/a&gt;: Thanks to Carlton&amp;rsquo;s pull request I have finally cleaned up the CSS somewhat and made overriding the styles more agreeable when using the editor outside the Django administration. The confusing active state of menubar buttons has also been rectified. &lt;a href="https://django-prose-editor.readthedocs.io/"&gt;Docs are now available on Read the Docs.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.19&lt;/a&gt;: django-imagefield can now be used with proxy models. Previously, thumbnails weren&amp;rsquo;t generated or deleted when saving proxy models because the signal handlers would only be called if the &lt;code&gt;sender&lt;/code&gt; matches exactly. I have already debugged this before, but have forgotten about it again. The ticket is really old for this, and fixing it isn&amp;rsquo;t easy since it&amp;rsquo;s unclear what should happen (&lt;a href="https://code.djangoproject.com/ticket/9318"&gt;#9318&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django_canonical_domain/"&gt;django-canonical-domain 0.11&lt;/a&gt;: django-canonical-domain has gained support for excluding additional domains from the canonical domain redirect. django-canonical-domain is used to redirect users to HTTPS (optionally) and to a particular canonical domain (as the name says). But sometimes you have auxiliary domains, e.g. for an API service, which shouldn&amp;rsquo;t be redirected. The package can now be used in these scenarios as well.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 24.8.2&lt;/a&gt;: The venerable FeinCMS, now more than 15 years old. The thumbnailing support had a bug where it tried saving JPEGs using RGBA (which obviously doesn&amp;rsquo;t work). This has been fixed.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 31)</title><link href="https://406.ch/writing/weeknotes-2024-week-31/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-31/</id><published>2024-07-31T12:00:00Z</published><updated>2024-07-31T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-31"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-31"&gt;Weeknotes (2024 week 31)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have missed almost two months of weeknotes. I&amp;rsquo;ve got some catching up to do.
I have tried writing a larger piece on my thoughts about CMS, but with
everything going on in my personal and work life I haven&amp;rsquo;t made much progress.&lt;/p&gt;
&lt;p&gt;This weeknotes entry is me trying to get back into the groove of writing (and
publishing!) regularly.&lt;/p&gt;
&lt;h2 id="django-prose-editor"&gt;&lt;a class="toclink" href="#django-prose-editor"&gt;&lt;a href="https://github.com/matthiask/django-prose-editor/"&gt;django-prose-editor&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have previously written about the
&lt;a href="https://prosemirror.net/"&gt;ProseMirror&lt;/a&gt;-based editor for Django websites
&lt;a href="https://406.ch/writing/django-prose-editor-prose-editing-component-for-the-django-admin/"&gt;here&lt;/a&gt;.
I have continued working on the project in the meantime. Apart from bugfixes
the big new feature is the support for showing typographic characters. For now
the editor supports showing non-breaking spaces and soft hyphens. The project
seems to get a little more interest after the deprecation of django-ckeditor
has become more well known and the project has even received a contribution by
someone else. It&amp;rsquo;s always a lovely moment when this happens.&lt;/p&gt;
&lt;h2 id="django-json-schema-editor"&gt;&lt;a class="toclink" href="#django-json-schema-editor"&gt;&lt;a href="https://github.com/matthiask/django-json-schema-editor"&gt;django-json-schema-editor&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Still alpha. Updated the vendorized JSON editor and fixed the integration into
Django to not throw errors with the newer version.&lt;/p&gt;
&lt;p&gt;Foreign key fields now support describing the referenced value similar to the
raw ID fields functionality. Added optional support for using &lt;code&gt;"format":
"prose"&lt;/code&gt; to use the django-prose-editor to edit individual fields. JSON
plugins for the content editor are now downcasted into their proxy models
automatically. This is especially useful with the feincms3 changes mentioned
below. (You do not have to use either django-content-editor or feincms3 to use
this package!)&lt;/p&gt;
&lt;p&gt;The following screenshot shows the prose editor integration; the mentioned
foreign key field description isn&amp;rsquo;t visible yet here.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A screenshot of the JSON editor including the prose editor" src="https://406.ch/assets/20240731-json-editor.png" /&gt;&lt;/p&gt;
&lt;h2 id="traduire"&gt;&lt;a class="toclink" href="#traduire"&gt;&lt;a href="https://github.com/matthiask/traduire"&gt;Traduire&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Traduire (french for «translate») is a web-based platform for editing gettext
translations.&lt;/p&gt;
&lt;p&gt;It is intended as a replacement for Transifex, Weblate and comparable products.
It is geared towards small teams or agencies which want to allow their
customers and their less technical team members to update translations.&lt;/p&gt;
&lt;p&gt;Traduire profits from the great work done on
&lt;a href="https://github.com/mbi/django-rosetta/"&gt;django-rosetta&lt;/a&gt;. I would still be
using Rosetta if it would work when used with a container orchestator such as
Kubernetes. Since all application storage is ephemeral that doesn&amp;rsquo;t work,
translation editing and deployment have to be separated.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A screenshot of the Traduire interface" src="https://406.ch/assets/20240731-traduire.png" /&gt;&lt;/p&gt;
&lt;p&gt;It is built using Django and relies on &lt;a href="https://pypi.org/project/polib/"&gt;polib&lt;/a&gt;
to do the heavy lifting.&lt;/p&gt;
&lt;p&gt;This is a project which might also be interesting for others. I would
especially appreciate it if someone could contribute an easier way to get it up
and running, e.g. using a Docker Compose configuration or something. I am using
Kubernetes and GitOps to host it, but that&amp;rsquo;s not straightforward at all.
Really, all that&amp;rsquo;s needed to run it is a Django host with any database which is
supported by Django. I prefer using PostgreSQL because I have it, but sqlite
etc. work just as well.&lt;/p&gt;
&lt;h2 id="releases-since-the-second-week-of-june"&gt;&lt;a class="toclink" href="#releases-since-the-second-week-of-june"&gt;Releases since the second week of June&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-translated-fields/"&gt;django-translated-fields 0.13&lt;/a&gt;:
  Nothing much except for CI and pre-commit updates. The implementation
  continues to be rock-solid and basically unchanged.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.0.6&lt;/a&gt;:
  Tweaks and fixes to the new interface. Added better scrolling behavior when
  dragging content around. The editor now also supports colorized icons which
  helps quickly understanding the structure of some content when there are many
  plugins.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.0.2&lt;/a&gt;:
  Fixed a few bugs in the &lt;code&gt;blacknoise.compress&lt;/code&gt; utility and started running
  the testsuite on GitHub actions.
  &lt;a href="https://github.com/evansd/whitenoise/"&gt;whitenoise&lt;/a&gt; has been friendly-forked
  as &lt;a href="https://github.com/Archmonger/ServeStatic"&gt;ServeStatic&lt;/a&gt; and I&amp;rsquo;m
  definitely having a close look at this project as well, but blacknoise is
  simple and works well, so I&amp;rsquo;m not convinced that switching back to the much
  larger project (in terms of amounts of code) is an improvement now.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib&lt;/a&gt;:
  Minor bugfixes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3&lt;/a&gt;:
  Allowed registering plugin models with the renderer which aren&amp;rsquo;t supposed to
  be fetched from the database. This is especially useful when used together
  with JSON plugins, where the individual JSON plugins are created as proxies
  for the underlying Django model and fetched all at once. Disabled the version
  check on our CKEditor plugin. Still, really stop using CKEditor 4 if you want
  to use maintained software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 24.7.1&lt;/a&gt;:
  Small bugfixes, and made the Read the Docs build work correctly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 4.4.x&lt;/a&gt;:
  The toolbar continues to be a nice project to work on. Fixed a few edge cases
  in the new alerts panel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-admin-ordering/"&gt;django-admin-ordering 0.18.2&lt;/a&gt;:
  The value of &lt;code&gt;ordering_field&lt;/code&gt; now has additional sanity checks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.16&lt;/a&gt;:
  cabinet now supports exporting a folder as a ZIP file while preserving the
  structure you see in the CMS instead of the structure on the file system. The
  inline upload form has been dropped from the &lt;code&gt;CabinetForeignKey&lt;/code&gt; widget
  because the folder dropdown slowed down the page a lot when used on a site
  with many folders. Using the raw ID fields popup isn&amp;rsquo;t that bad.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.6.2&lt;/a&gt;:
  See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.28&lt;/a&gt;:
  See above.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 23)</title><link href="https://406.ch/writing/weeknotes-2024-week-23/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-23/</id><published>2024-06-07T12:00:00Z</published><updated>2024-06-07T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-23"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-23"&gt;Weeknotes (2024 week 23)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="switching-everything-from-pip-to-uv"&gt;&lt;a class="toclink" href="#switching-everything-from-pip-to-uv"&gt;Switching everything from pip to uv&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Enough said. I&amp;rsquo;m always astonished how fast computers can be.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-admin-ordering/"&gt;django-admin-ordering
  0.18&lt;/a&gt;: Added a database
  index to the ordering field since we&amp;rsquo;re always sorting by it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.4&lt;/a&gt;:
  Dropped the jQuery dependency making it possible to use the editor outside
  the Django administration interface without annoying JavaScript errors.
  Allowed additional heading levels and moved the block type buttons into a
  popover.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 4.4.2&lt;/a&gt;:
  I enjoy working on this important piece of software very much.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-email-hosts/"&gt;django-email-hosts 0.2.1&lt;/a&gt;:
  Added a command analogous to &lt;code&gt;./manage.py sendtestemail&lt;/code&gt; so that it&amp;rsquo;s
  possible to easily test the different configured email backends.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.0&lt;/a&gt;: I completely reworked the
  move node action; previously it opened a new page where you could see all
  possible targets; now you can cut a page and paste it somewhere else. The
  advantages of the new interface is that you don&amp;rsquo;t leave the changelist and
  can still profit from all its features while moving pages around.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.21&lt;/a&gt;: A new
  release taking advantage of a new hook in feincms3 7.0 so that the new moving
  interface works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.16.5&lt;/a&gt;: authlib
  now shows a welcome message when authenticating using admin OAuth2. It&amp;rsquo;s nice
  and helps with debugging strange authentication failures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.0&lt;/a&gt;:
  I reworked the UI. The sidebar is gone, instead there are nice buttons in the
  place where you can add new plugins; the plugins appear in a nice grid
  instead of a list, which looks much better once you have more than just a few
  plugin types available. Also, plugin type icons are now shown in the plugin
  forms. I think it looks much better than before.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol
  1.5.2&lt;/a&gt;: I didn&amp;rsquo;t contribute
  anything to this release which is also a nice experience for a change. The
  Google consent mode integration has been improved and simplified.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor
  0.0.22&lt;/a&gt;: Various
  small-ish improvements. I should really start using higher version numbers,
  but not having to commit to anything also feels great.  That being said, the
  editor is in active use in several projects, so maybe I&amp;rsquo;m deceiving myself.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 21)</title><link href="https://406.ch/writing/weeknotes-2024-week-21/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-21/</id><published>2024-05-22T12:00:00Z</published><updated>2024-05-22T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-21"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-21"&gt;Weeknotes (2024 week 21)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;There have been times when work has been more enjoyable than in the last few
weeks. It feels more stressful than at other times, and this mostly has to do
with particular projects. I hope I&amp;rsquo;ll be able to move on soon.&lt;/p&gt;
&lt;h2 id="blacknoise"&gt;&lt;a class="toclink" href="#blacknoise"&gt;blacknoise&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have released &lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.0&lt;/a&gt;. It&amp;rsquo;s an
ASGI app for static file serving inspired by
&lt;a href="https://github.com/evansd/whitenoise/"&gt;whitenoise&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The 1.0 version number is only a big step in versioning terms, not much has
happened with the code. It&amp;rsquo;s a tiny little well working piece of software which
has been running in production for some time without any hickups. The biggest
recent change is that I have parallelized the gzip and brotli compression step;
this makes building images using whitenoise more painful because there the wait
is really really long sometimes. &lt;a href="https://github.com/evansd/whitenoise/pull/484"&gt;A pull request fixing this
exists&lt;/a&gt;, but it hasn&amp;rsquo;t moved
forwards in months.&lt;/p&gt;
&lt;p&gt;I have written a longer post about it earlier this year
&lt;a href="https://406.ch/writing/blacknoise-asgi-app-for-static-file-serving/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.5&lt;/a&gt;: Code golfing. Added backwards compatibility with old Django versions so that I can use it for old projects. Also includes optional support for Google consent management.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django_fast_export/"&gt;django-fast-export 0.1.1&lt;/a&gt;: This is basically a repackaging of the streaming CSV view from Django&amp;rsquo;s documentation as a reusable class. I have switched to using an iterator so that I can export even larger datasets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.18&lt;/a&gt;: Still alpha versioned but used in production in various projects. I should really release an 1.0 version, but there are no integration tests at all. Mainly visual tweaks in this update.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 6.5&lt;/a&gt;: Better handling of templates and regions when a particular editor instance only shows a subset of configured templates. Disallowed adding plugins when in an unknown region. It&amp;rsquo;s funny how many edge cases exist in software as old as this.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.0&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.4.4&lt;/a&gt;: Fixed edge cases with whitespace handling when merging elements.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-data/"&gt;feincms3-data 0.6.1&lt;/a&gt;: Allowed &lt;code&gt;./manage.py f3loaddata -&lt;/code&gt; to load JSON data from stdin.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 18)</title><link href="https://406.ch/writing/weeknotes-2024-week-18/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-18/</id><published>2024-05-03T12:00:00Z</published><updated>2024-05-03T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-18"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-18"&gt;Weeknotes (2024 week 18)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="google-summer-of-code-has-begun"&gt;&lt;a class="toclink" href="#google-summer-of-code-has-begun"&gt;Google Summer of Code has begun&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have a student helping out with adding async support to the &lt;a href="https://github.com/jazzband/django-debug-toolbar/"&gt;Django Debug
Toolbar&lt;/a&gt;. It&amp;rsquo;s great that
someone can spend some concentrated time to work on this. Tim and others have
done all the necessary preparation work, I&amp;rsquo;m only helping from the sidelines so
don&amp;rsquo;t thank me.&lt;/p&gt;
&lt;h2 id="bike-to-work"&gt;&lt;a class="toclink" href="#bike-to-work"&gt;Bike to Work&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Two teams from my company are participating in the &lt;a href="https://www.biketowork.ch/"&gt;Bike to Work Challenge
2024&lt;/a&gt;. It&amp;rsquo;s what I do anyway (if I&amp;rsquo;m not working
from home) but maybe it helps build others some motivation to get on the
bicycle once more. Public transports in the city where I live are great but
I&amp;rsquo;ll always take the bike when I can. I also went on my first mountain bike
ride in a few months yesterday, good fun.&lt;/p&gt;
&lt;h2 id="json-blobs-and-referential-integrity"&gt;&lt;a class="toclink" href="#json-blobs-and-referential-integrity"&gt;JSON blobs and referential integrity&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/matthiask/django-json-schema-editor/"&gt;django-json-schema-editor&lt;/a&gt; has gained support for referencing Django models. Here&amp;rsquo;s an example schema excerpt:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;minItems&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;maxItems&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;items&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;article&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foreign_key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;options&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/admin/articles/article/?_popup=1&amp;amp;_to_field=id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The ID field is stringly typed; using an integer directly wouldn&amp;rsquo;t work because
the empty string isn&amp;rsquo;t a valid integer.&lt;/p&gt;
&lt;p&gt;The problem with referencing models in this way is that there&amp;rsquo;s no way to know
if the referenced object is still around or not, or even to protect it against
deletion. The bundled django-content-editor &lt;code&gt;JSONPlugin&lt;/code&gt; now supports
automatically generating a &lt;code&gt;ManyToManyField&lt;/code&gt; with a &lt;code&gt;through&lt;/code&gt; model which
protects articles from deletion as long as they are referenced from a
&lt;code&gt;JSONPlugin&lt;/code&gt; instance. The &lt;code&gt;register_reference&lt;/code&gt; line creates the mentioned
model with an &lt;code&gt;on_delete=models.PROTECT&lt;/code&gt; foreign key to articles and a
&lt;code&gt;post_save&lt;/code&gt; handler which updates said references.&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django_json_schema_editor.plugins&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSONPluginBase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;register_reference&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;articles.models&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;JSONPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JSONPluginBase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;register_reference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JSONPlugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="releases-since-the-beginning-of-april"&gt;&lt;a class="toclink" href="#releases-since-the-beginning-of-april"&gt;Releases since the beginning of April&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.14&lt;/a&gt;: See above. Also, some styling work and a patch update to the vendorized json-editor.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 6.4.6&lt;/a&gt;: Many small stylistic fixes. The target indicator when dragging plugins is now also shown when plugins are collapsed. It&amp;rsquo;s now possible to directly drag a plugin to the end, and not just to the second to last position.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.3.4&lt;/a&gt;: Switched to the nh3 sanitizer because it&amp;rsquo;s faster and because ProseMirror never emits HTML which has to be cleaned up first. Stopped generating menu items for nodes and marks which aren&amp;rsquo;t in the schema. Added the possibility to reduce the functionality per editor instance. Small tweaks and fixes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.19&lt;/a&gt;: Added support for pre-filtering the tree (much more efficient when only querying a part of the tree). Added support for adding additional fields to the CTE so that you can collect values from ancestors for other fields than the default fields too.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 24.4.2&lt;/a&gt;: Added support for webp images. Fixed a few of the admin list filters to work with Django 5.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.14.3&lt;/a&gt;: Fixed the support for the &lt;code&gt;extra_context&lt;/code&gt; argument to our &lt;code&gt;changelist_view&lt;/code&gt; implementation.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 14)</title><link href="https://406.ch/writing/weeknotes-2024-week-14/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-14/</id><published>2024-04-06T12:00:00Z</published><updated>2024-04-06T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-14"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-14"&gt;Weeknotes (2024 week 14)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m having a bit of a slow week with the easter weekend and a wisdom tooth
extraction. I&amp;rsquo;m recovering quite quickly it seems and I&amp;rsquo;m glad about it.&lt;/p&gt;
&lt;p&gt;This weeknotes entry is short and quick. I&amp;rsquo;m trying to get back into the habit
of writing them after a mediocre start this year.&lt;/p&gt;
&lt;h2 id="20th-anniversary-celebration-of-young-greens-switzerland"&gt;&lt;a class="toclink" href="#20th-anniversary-celebration-of-young-greens-switzerland"&gt;20th Anniversary Celebration of Young Greens Switzerland&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have attended the celebration of Young Greens Switzerland. I have been a
founding member and have been active for close to ten years. A lot of time has
passed since then. It has been great to reminisce about old times with friends
and, more importantly, to see how the torch is carried on.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 0.0.5&lt;/a&gt;: blacknoise is an
  ASGI app for static file serving inspired by
  &lt;a href="https://whitenoise.readthedocs.io/en/latest/"&gt;whitenoise&lt;/a&gt;. It only supports
  a very limited subset of whitenoise&amp;rsquo;s functionality, but it supports async.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.4.1&lt;/a&gt;: The lxml
  library moved the HTML cleaner into its own package,
  &lt;a href="https://pypi.org/project/lxml-html-clean/"&gt;lxml-html-clean&lt;/a&gt;; this release
  adds support for that. I didn&amp;rsquo;t know that the HTML cleaner is viewed as being
  problematic by the lxml maintainers. I&amp;rsquo;m having another look at
  &lt;a href="https://github.com/messense/nh3"&gt;nh3&lt;/a&gt; and will maybe switch html-sanitizer&amp;rsquo;s
  guts from lxml to nh3 in the future.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.18&lt;/a&gt;:
  django-tree-queries now supports ordering siblings by multiple fields and
  even allows descending orderings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.14.2&lt;/a&gt;: This
  release fixes the CKEditor 4 filebrowser popup when using Django 5 or better.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 11)</title><link href="https://406.ch/writing/weeknotes-2024-week-11/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-11/</id><published>2024-03-16T12:00:00Z</published><updated>2024-03-16T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-11"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-11"&gt;Weeknotes (2024 week 11)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="estimates"&gt;&lt;a class="toclink" href="#estimates"&gt;Estimates&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://jacobian.org/2024/mar/11/breaking-down-tasks/"&gt;Jacob wrote an excellent post on breaking down tasks&lt;/a&gt;. I did like the post a lot. Maybe I&amp;rsquo;ll write a longer reply later, but for now just this. &lt;a href="https://hachyderm.io/@jacob@jacobian.org/112081126379604868"&gt;There definitely are good reasons for the pushback against estimation&lt;/a&gt;, and it&amp;rsquo;s really not just that some people lack professionalism.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.14.1&lt;/a&gt;: Mini
  release containing a Turkish translation. It&amp;rsquo;s always nice if software is
  used.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.6&lt;/a&gt;: Fixed a bug where the
  move form wouldn&amp;rsquo;t use a potentially overridden &lt;code&gt;ModelAdmin.get_queryset&lt;/code&gt;
  method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/form-designer/"&gt;form-designer 0.24&lt;/a&gt;: Updated the
  package for django-recaptcha 4.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.3.1&lt;/a&gt;: Fixed an
  edge case sanitization bug (luckily without security implications).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor
  6.4.2&lt;/a&gt;:
  django-content-editor now again supports transitioning plugin fieldsets when
  opening &lt;em&gt;and&lt;/em&gt; closing thanks to CSS grid&amp;rsquo;s ability to animate the maximum
  height of an element. Also, the initialization in 6.4 was badly broken.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.2&lt;/a&gt;: &lt;a href="https://406.ch/writing/django-prose-editor-prose-editing-component-for-the-django-admin/"&gt;See the announcement blog post from Wednesday&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary></entry></feed>