<?xml version='1.0' encoding='utf-8'?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom"><title>Matthias Kestenholz: Posts about Weeknotes</title><link href="https://406.ch/writing/category-weeknotes/atom.xml" rel="self" /><link href="https://406.ch/writing/category-weeknotes/" rel="alternate" /><id>https://406.ch/writing/category-weeknotes/</id><updated>2024-01-17T12:00:00Z</updated><author><name>Matthias Kestenholz</name></author><entry><title>Weeknotes (2024 week 03)</title><link href="https://406.ch/writing/weeknotes-2024-week-03/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-03/</id><published>2024-01-17T12:00:00Z</published><updated>2024-01-17T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2024 week 03)&lt;/h1&gt;&lt;h2&gt;Djangonaut Space&lt;/h2&gt;
&lt;p&gt;I wish all participants a good time and much success. I do not have anything to do with it really but I enjoy the idea a lot and maybe there will be a pull request or two to review.&lt;/p&gt;
&lt;h2&gt;Kubernetes&lt;/h2&gt;
&lt;p&gt;After years and years of hosting all sites on VPS I have finally reached the point where the old setup is more annoying to work with than switching to a new one. I have searched long for a solution which wasn&amp;rsquo;t as limited as some PaaS and as complex as going full Kubernetes, and where I can still delegate the responsibility of actually keeping things up and running to other people. In the end I have now accepted that such a thing doesn&amp;rsquo;t exist; either you have the limitations of a ready made solution, the limitation of having to open many many support tickets or the problem of having to learn Kubernetes (or something similar) with its extremely steep learning curve.&lt;/p&gt;
&lt;p&gt;After spending days with it I&amp;rsquo;m slowly getting to the point where setting up local development environments and deploying changes is fun again. I&amp;rsquo;m using the GitOps paradigm; while I&amp;rsquo;m still building and uploading Docker (podman) images from the local development environment everything else is automated and goes through a Git based process. That&amp;rsquo;s much nicer than clicking around in some interface or copy pasting obscure commands into the console.&lt;/p&gt;
&lt;p&gt;The biggest problem I encountered was (perhaps unsurprisingly) managing secrets as a team. It seems to me that while &lt;a href="https://github.com/bitnami-labs/sealed-secrets/"&gt;sealed secrets&lt;/a&gt; work great as an individual developer they don&amp;rsquo;t really offer straightforward solutions to avoid different people overwriting and resetting each others secrets when updating them. I&amp;rsquo;m a happy user of the external secrets operator and using some cloud service to actually store those secrets.&lt;/p&gt;
&lt;p&gt;I have started using &lt;a href="https://github.com/emmett-framework/granian/"&gt;granian&lt;/a&gt; in production. I like the idea of a Rust-based ASGI/WSGI server. Nothing mission critical yet. My idea is to build confidence in the software stack.&lt;/p&gt;
&lt;h2&gt;Compulsory social measures&lt;/h2&gt;
&lt;p&gt;The more I learn about how Switzerland treats its citizens the more I wonder about the ways in which humans can mistreat other humans in a so called civilized and peaceful society.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not exactly a new topic for me, but working on platforms which help remember and which help introducing people to the history certainly causes a heightened awareness for issues such as these.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bj.admin.ch/bj/en/home/gesellschaft/fszm.html"&gt;More on this&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.20.2&lt;/a&gt;: It
  previously wasn&amp;rsquo;t possible to filter the list of sites to only show those
  sites which do &lt;em&gt;not&lt;/em&gt; have a default language. This has been fixed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.10&lt;/a&gt;: It&amp;rsquo;s now actually possible to use the JSON editor outside inlines! That was a fun bug&amp;hellip; not. Apart from the mentioned bug this new release mostly contains fixes to the styles. We&amp;rsquo;re slowly getting there.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-mptt/"&gt;django-mptt 0.16&lt;/a&gt;: I didn&amp;rsquo;t do anything except for the changelog and the release. That&amp;rsquo;s alright. The release contains a few minor fixes.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 01)</title><link href="https://406.ch/writing/weeknotes-2024-week-01/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-01/</id><published>2024-01-03T12:00:00Z</published><updated>2024-01-03T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2024 week 01)&lt;/h1&gt;&lt;p&gt;First weeknotes post for 2024! Happy new year!&lt;/p&gt;
&lt;h2&gt;Looking back on 2023&lt;/h2&gt;
&lt;h3&gt;Writing&lt;/h3&gt;
&lt;p&gt;I have published almost 40 posts last year. That&amp;rsquo;s almost as many posts as I published in the time period from 2014 to 2023. &lt;a href="https://jacobian.org/2021/mar/9/coworking-to-write-more/"&gt;Coworking to write more&lt;/a&gt; does work.&lt;/p&gt;
&lt;p&gt;I already had a quite active blog from 2005 to 2008 with a few posts after that; everything before 2014 was in german and mainly concerned with green politics and climate change. I&amp;rsquo;m still very interested in these topics but I don&amp;rsquo;t feel as if I have much to add to the conversation, even though it&amp;rsquo;s the more important issue.&lt;/p&gt;
&lt;h3&gt;Open Source&lt;/h3&gt;
&lt;p&gt;Not much changed here. I enjoy basically everything I do in open source land, and co-maintaining the Django Debug Toolbar with Tim is a joy.&lt;/p&gt;
&lt;p&gt;I still wish that some of my projects had more impact in Django land, especially those who augment the Django administration interface to be a lightweight CMS which requires very little maintenance and work in the long run. I think it&amp;rsquo;s great that one of the core components, &lt;a href="https://pypi.org/project/django-content-editor/#history"&gt;django-content-editor&lt;/a&gt;, hasn&amp;rsquo;t required a release in more than one year. It doesn&amp;rsquo;t have to be expanded because it just works. It would be great if there was a good way to &lt;a href="https://406.ch/writing/managing-complexity-and-technical-debt-by-releasing-open-source-software/"&gt;distinguish&lt;/a&gt; between software which basically doesn&amp;rsquo;t require any updates and software which is abandoned.&lt;/p&gt;
&lt;p&gt;The only project which doesn&amp;rsquo;t bring me much joy is django-mptt. Most people accept that there are no guarantees, but some people are just rude in the way in which they expect others to do the work. The first reaction was to return the blow and I&amp;rsquo;m glad that I didn&amp;rsquo;t give in to the temptation to do that. It&amp;rsquo;s basically never worth it to do that in writing.&lt;/p&gt;
&lt;h3&gt;Family&lt;/h3&gt;
&lt;p&gt;We had a good 2023 together and I&amp;rsquo;m very much looking forward to a just as good 2024.&lt;/p&gt;
&lt;h2&gt;Plans for 2024&lt;/h2&gt;
&lt;p&gt;I have bought a ticket for the &lt;a href="https://2024.djangocon.eu/"&gt;DjangoCon Europe 2024&lt;/a&gt; in Spain and I&amp;rsquo;m very much looking forward to that.&lt;/p&gt;
&lt;p&gt;Maybe we&amp;rsquo;ll visit a music festival again this summer. After listening to a lot of metal music in the last ten or more years I rediscovered the dark side of D&amp;rsquo;n&amp;rsquo;B. Good times.&lt;/p&gt;
&lt;h2&gt;Advent of Code&lt;/h2&gt;
&lt;p&gt;I have finished the Advent of Code with some help from the Subreddit. Almost all of the puzzles were fun to think about. I didn&amp;rsquo;t have fun solving each and everyone of them, especially not the second part of a few of the later days. I feel good checking out solutions from other people in the subreddit, and maybe adding newly gained ideas to my code or even running someone else&amp;rsquo;s code 1:1 on my data after studying the algorithms used and hopefully learning something.&lt;/p&gt;
&lt;p&gt;I had a good time and enjoyed shutting down the computer after that.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 23.12&lt;/a&gt;: A few minor changes to
  the thumbnailing code. It&amp;rsquo;s always nice to hear from people who are still
  using this project.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 50)</title><link href="https://406.ch/writing/weeknotes-2023-week-50/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-50/</id><published>2023-12-15T12:00:00Z</published><updated>2023-12-15T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 50)&lt;/h1&gt;&lt;h2&gt;django-imagefield&lt;/h2&gt;
&lt;p&gt;The path building scheme used by &lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield&lt;/a&gt; has proven problematic: It&amp;rsquo;s too likely that processed images will have the same path.&lt;/p&gt;
&lt;p&gt;I have changed the strategy used for generating paths to use more data from the
source; it&amp;rsquo;s now possible (and recommended!) to set &lt;code&gt;IMAGEFIELD_BIN_DEPTH&lt;/code&gt; to
a value greater than 1; 2 or 3 should be sufficient. The default value is 1
which corresponds to the old default so that the change won&amp;rsquo;t be backwards
incompatible. However, you&amp;rsquo;ll always get a deprecation warning if you don&amp;rsquo;t set
a bigger value yourself. The default will probably change in the future.&lt;/p&gt;
&lt;h2&gt;Advent of Code&lt;/h2&gt;
&lt;p&gt;I have always felt a bit as an imposter because I do not have any formal CS
education; not so much in the last few years but certainly earlier in my
career. I have enjoyed participating in the &lt;a href="https://adventofcode.com/"&gt;Advent of Code
2022&lt;/a&gt; a lot and I have definitely learned to know
when to use and how to use a few algorithms I didn&amp;rsquo;t even know before. I&amp;rsquo;m
again working through the puzzles in my own pace and have managed to solve
almost all of them up to today this year. There still are some puzzles where I
don&amp;rsquo;t even know how to start the second part 😅.&lt;/p&gt;
&lt;h2&gt;Hosting&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;re still hosting most sites on virtualized servers, without any containers
or any of the new stuff. I&amp;rsquo;m finally reaching the point where the downsides of
this approach start to drag new projects down and the workarounds start looking
worse than maybe switching to containers or even Kubernetes. Wish me luck, I&amp;rsquo;m
more confused than I&amp;rsquo;ve been in years.&lt;/p&gt;
&lt;h2&gt;Health&lt;/h2&gt;
&lt;p&gt;To absolutely nobody&amp;rsquo;s surprise the family and myself have continued to be sick
in the last two weeks. Nothing really bad happened, so we&amp;rsquo;re still lucky.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s unfortunately no way to solve a societal problem individually, so that
will probably continue to be our life for now.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.18&lt;/a&gt;: See
  above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.20.1&lt;/a&gt;: Added
  additional validation (cleaning) checks. Showing error messages is
  preferrable to crashing with &lt;code&gt;IntegrityError&lt;/code&gt; exceptions after all.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset 2.2.0&lt;/a&gt;: Hatchling
  seems to dislike it if the project name and the Python module name do not
  match. I actually like &lt;code&gt;django-js-asset&lt;/code&gt;&amp;rsquo;s Python module to be &lt;code&gt;js_asset&lt;/code&gt;
  but I&amp;rsquo;m beginning to rethink this decision.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.4&lt;/a&gt;: See &lt;a href="https://406.ch/writing/django-json-schema-editor/"&gt;the post from this week&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 48)</title><link href="https://406.ch/writing/weeknotes-2023-week-48/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-48/</id><published>2023-11-30T12:00:00Z</published><updated>2023-11-30T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 48)&lt;/h1&gt;&lt;p&gt;A few weeks have passed since the last update. The whole family was repeatedly
sick with different viruses etc&amp;hellip; I hope that the worst is over now. Who
knows.&lt;/p&gt;
&lt;h2&gt;12-factor Django storage configuration&lt;/h2&gt;
&lt;p&gt;I should maybe write a longer and separate post about this, but &lt;a href="https://pypi.org/project/speckenv/"&gt;speckenv&lt;/a&gt; has gained support for the Django &lt;code&gt;STORAGES&lt;/code&gt; setting. No documentation yet, but it supports two storage backends for now, the file system storage and &lt;a href="https://github.com/etianen/django-s3-storage/"&gt;django-s3-storage&lt;/a&gt;, my go-to library for S3-compatible services.&lt;/p&gt;
&lt;p&gt;Using it looks something like this:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;speckenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;speckenv_django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;django_storage_url&lt;/span&gt;

&lt;span class="n"&gt;STORAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;django_storage_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;STORAGE_URL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;file:./media/?base_url=/media/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;base_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;staticfiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;BACKEND&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;django.contrib.staticfiles.storage.ManifestStaticFilesStorage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, if you want to use S3 you can put something like this in your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;STORAGE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nl"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="nv"&gt;@bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;central&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="n"&gt;amazonaws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or maybe something like this, if you want to serve media files without authentication:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;STORAGE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nl"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="nv"&gt;@bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;central&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="n"&gt;amazonaws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="n"&gt;aws_s3_public_auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;aws_s3_max_age_seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;31536000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/speckenv/"&gt;speckenv 6.1.1&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-meta/"&gt;feincms3-meta 4.6&lt;/a&gt;: York has contributed support for emitting structured data records. Looks nice. No documentation yet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.16.1&lt;/a&gt;: &lt;code&gt;.values()&lt;/code&gt; and &lt;code&gt;.values_list()&lt;/code&gt; queries are now handled better and more consistently than before.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 44)</title><link href="https://406.ch/writing/weeknotes-2023-week-44/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-44/</id><published>2023-11-02T12:00:00Z</published><updated>2023-11-02T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 44)&lt;/h1&gt;&lt;h2&gt;Unmaintained but maintained packages&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s a discussion going on in the &lt;a href="https://github.com/django-mptt/django-mptt/issues/833"&gt;django-mptt issue tracker&lt;/a&gt; about the maintenance state of django-mptt. &lt;a href="https://github.com/django-mptt/django-mptt/commit/6f6c1c485f3adc1d579f8d22e0279ce1d52334f6"&gt;I have marked the project as unmaintained in March 2021&lt;/a&gt; and haven&amp;rsquo;t regretted this decision at all. I haven&amp;rsquo;t had to fix &lt;a href="https://github.com/django-mptt/django-mptt/labels/Broken%20Tree"&gt;inconsistencies in the tree structure&lt;/a&gt; once since switching to &lt;a href="https://406.ch/writing/django-tree-queries/"&gt;django-tree-queries&lt;/a&gt;. And if that wasn&amp;rsquo;t enough, I get little but only warm and thankful feedback for the latter, so that&amp;rsquo;s extra nice.&lt;/p&gt;
&lt;p&gt;Despite marking django-mptt as unmaintained I seem to be doing a little bit of maintenance still. I&amp;rsquo;m still using it in old paid projects and so the things I do to make the package work for me is paid work. I&amp;rsquo;m not personally invested in the package anymore, so I&amp;rsquo;m able to tell people that there are absolutely no guarantees about the maintenance, and that feels good.&lt;/p&gt;
&lt;h2&gt;Read the Docs&lt;/h2&gt;
&lt;p&gt;I do understand why the &lt;code&gt;.readthedocs.yaml&lt;/code&gt; file is now necessary. I wish that I wouldn&amp;rsquo;t have to do all the busywork of adding one to projects. I have just resubscribed to the Read the Docs Gold Membership which probably has expired at some point in the past. Read the Docs is excellent and everybody who can should support them.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.5&lt;/a&gt;, &lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.20&lt;/a&gt; and &lt;a href="https://github.com/feincms/feincms3-language-sites"&gt;feincms3-language-sites 0.3&lt;/a&gt;: Fixed the check which only allows adding an application through the CMS to the page tree (yes, that&amp;rsquo;s right) once; feincms3 worked fine, feincms3-language-sites by accident but feincms3-sites didn&amp;rsquo;t.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/towel/"&gt;towel 0.31&lt;/a&gt;: Towel is one of my oldest packages which is still being used in real-world projects. Towel is a tool for building CRUD-type applications and is designed to keep you DRY while doing that. The project has been heavily inspired by a Django-based agency software I built many years back. The package even has &lt;a href="https://towel.readthedocs.io/en/latest/"&gt;docs&lt;/a&gt;! I&amp;rsquo;m still quite proud of the mostly transparent support for multitenancy, but apart from that I haven&amp;rsquo;t used it in many new projects.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 43)</title><link href="https://406.ch/writing/weeknotes-2023-week-43/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-43/</id><published>2023-10-27T12:00:00Z</published><updated>2023-10-27T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 43)&lt;/h1&gt;&lt;h2&gt;Switching to ruff format&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/astral-sh/ruff/releases/tag/v0.1.2"&gt;ruff v0.1.2&lt;/a&gt; includes
the beta version of the ruff formatter. It formats the code almost the same way
as black, but much much faster. I have started switching projects I&amp;rsquo;m working
on and the experience has been nothing but great.&lt;/p&gt;
&lt;h2&gt;100% test coverage&lt;/h2&gt;
&lt;p&gt;I have again fixed a bad bug in code which had 100% test coverage. It&amp;rsquo;s not
news that 100% test coverage isn&amp;rsquo;t a recipe for bug-free code, and it&amp;rsquo;s
probably not even worth optimizing for that metric in code. It&amp;rsquo;s nothing more
but a proxy for what you should really measure. Nevertheless it certainly does
feel good to achieve high coverage values!&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;p&gt;No releases at all.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 42)</title><link href="https://406.ch/writing/weeknotes-2023-week-42/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-42/</id><published>2023-10-18T12:00:00Z</published><updated>2023-10-18T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 42)&lt;/h1&gt;&lt;h2&gt;Vacation in Italy&lt;/h2&gt;
&lt;p&gt;We have spent a wonderful family week in Italy. The voyage by train was very
comfortable and we had a great time there. I have lived close to lakes all my
life but the sea is always something else. Now I enjoy the cold temperatures of
fall.&lt;/p&gt;
&lt;h2&gt;Going back (forward) to GitJournal&lt;/h2&gt;
&lt;p&gt;I have tried several note taking apps but I&amp;rsquo;m now back using
&lt;a href="https://gitjournal.io/"&gt;GitJournal&lt;/a&gt; with a Git repository filled with Markdown
notes. It works well enough. I just wish that there was a way to make notes
more distinguishable and I wish that the editor was more forgiving when
encountering badly formatted checklists.&lt;/p&gt;
&lt;h2&gt;Analog blogging&lt;/h2&gt;
&lt;p&gt;I have long wanted to write about &lt;a href="https://406.ch/writing/why-we-switched-from-slack-to-discord-at-work/"&gt;our switch from Slack to
Discord&lt;/a&gt;.
I have started to write this post with pen and paper. I find that I think
better when using pen and paper than when using the computer keyboard. One
factor is certainly that the computer offers more distractions, but I suspect
that another, more important factor is that as a fast typist the fingers and
the thinking are always getting out of step, and this happens less when using a
slower method of writing. This actually isn&amp;rsquo;t an idea I had myself, but I don&amp;rsquo;t
remember where I got it from.&lt;/p&gt;
&lt;h2&gt;Zero-based versioning: Good or bad?&lt;/h2&gt;
&lt;p&gt;I discovered &lt;a href="https://0ver.org/"&gt;ZeroVer&lt;/a&gt; sometime in the last few days. I have
many many Django packages with zero-based versions. Some of them have been used
in production for years now. I sometimes wonder if staying with &lt;code&gt;0.&lt;/code&gt; is
unprofessional and I should just release 1.0 and be done with it or if it
doesn&amp;rsquo;t really matter at all.&lt;/p&gt;
&lt;p&gt;If I evaluate software packages more often than not I don&amp;rsquo;t look at the version
number or the version numbering scheme (except when a package is still using
&lt;code&gt;0.0.&lt;/code&gt;) when deciding whether to rely on it or not. The documentation and the
code itself are much more important to me.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;p&gt;I haven&amp;rsquo;t uploaded any releases in the last 14 days. That&amp;rsquo;s good: I&amp;rsquo;m one of
those people who have made their passion their job (which is great) but that
sometimes makes it hard to not work at all since I can always tell myself that
I&amp;rsquo;m not working, that it&amp;rsquo;s just a hobby.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 40)</title><link href="https://406.ch/writing/weeknotes-2023-week-40/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-40/</id><published>2023-10-04T12:00:00Z</published><updated>2023-10-04T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 40)&lt;/h1&gt;&lt;h2&gt;More work on hosting several websites from a single Django application server using feincms3-sites&lt;/h2&gt;
&lt;p&gt;I have mentioned feincms3-sites last week in my last weeknotes entry; I have
again given this package a lot of attention in the last days, so another update
is in order.&lt;/p&gt;
&lt;p&gt;It is now possible to override the list of languages available on each site.
That&amp;rsquo;s especially useful for an upcoming campaign site where the umbrella
group&amp;rsquo;s site is available in three languages, but (most?) individual group
sites (hosted on subdomains) will only have a subset of languages. Since I live
in a country with four national languages (english isn&amp;rsquo;t one of them, but is
spoken by many!) supporting more than one language, or even many languages is
totally commonplace. It&amp;rsquo;s great that Django has good support for
internationalization. For the sake of an example, I have the following sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;example.com&lt;/code&gt;: The default. The host has to match exactly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subdomain.example.com&lt;/code&gt;: One individual group&amp;rsquo;s site. The host has to match the regex &lt;code&gt;^subdomain\.&lt;/code&gt; (sorry, I actually do like regexes).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Overriding configured hosts for local development&lt;/h3&gt;
&lt;p&gt;One thing which always annoyed me when using &lt;code&gt;django.contrib.sites&lt;/code&gt; was that
&amp;ldquo;just&amp;rdquo; pulling the database from production to the local development
environment always produced links pointing back to the remote host instead of
working locally (when producing absolute URLs). This problem was shared by
feincms3-sites as well. I have now found a very ugly but perfectly workable
solution: Overwrite &lt;code&gt;Site.get_host()&lt;/code&gt; locally:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;domain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;example.com&amp;quot;&lt;/span&gt;  &lt;span class="c1"&gt;# Or whatever&lt;/span&gt;
    &lt;span class="n"&gt;_get_host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost:8000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;FEINCMS3_SITES_SITE_GET_HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_get_host&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This works especially well when using &lt;code&gt;example.com&lt;/code&gt; and maybe subdomains of
&lt;code&gt;example.com&lt;/code&gt;: All absolute links will point to &lt;code&gt;localhost:8000&lt;/code&gt; or
&lt;code&gt;subdomain.localhost:8000&lt;/code&gt;. Since &lt;code&gt;*.localhost&lt;/code&gt; always resolves to the local IP
the browser knows where it should connect to, and since
&lt;code&gt;subdomain.localhost:8000&lt;/code&gt; also matches the &lt;code&gt;^subdomain\.&lt;/code&gt; regex mentioned
above, the site selection logic works as well.&lt;/p&gt;
&lt;p&gt;Of course if you have more domains, not just subdomains, you could adapt the
&lt;code&gt;get_host&lt;/code&gt; override and the relevant regexes to those use cases.&lt;/p&gt;
&lt;h3&gt;Closing words&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;re at 100% code coverage now when running the test suite. That&amp;rsquo;s really nice.&lt;/p&gt;
&lt;h2&gt;Logging into the Django admin using your Google account&lt;/h2&gt;
&lt;p&gt;This functionality has long been provided by
&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-admin-sso&lt;/a&gt;; however, as
mentioned a long time ago this package still uses a deprecated OAuth2 library.
&lt;a href="https://github.com/matthiask/django-authlib/"&gt;django-authlib&lt;/a&gt; supports using a
Google account to authenticate with the Django admin since 2017. I have now
fixed a small problem with it: If you are logged into a single Google account,
and this account&amp;rsquo;s email address doesn&amp;rsquo;t match the configured admin login rule,
you were out of luck: There was no way to add another account at that time
because the library didn&amp;rsquo;t request the account selection. That has changed now,
if the first login attempt doesn&amp;rsquo;t work, it now explicitly tells Google to let
the user select their Google account. A small quality of life improvement for
those using more than one Google account (voluntarily or not).&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.4.3&lt;/a&gt;: Polished the CKEditor integration a little bit. Re-enabled the source button now that we&amp;rsquo;re back to using the classic iframe-based editor again.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.19.3&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.16.4&lt;/a&gt;: See above.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 39)</title><link href="https://406.ch/writing/weeknotes-2023-week-39/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-39/</id><published>2023-09-28T12:00:00Z</published><updated>2023-09-28T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 39)&lt;/h1&gt;&lt;p&gt;Again a few weeks have passed since the last weeknotes entry :-)&lt;/p&gt;
&lt;h2&gt;Moving feincms3 repositories into the feincms organization&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/feincms"&gt;feincms&lt;/a&gt; GitHub organization has seen more
active days when FeinCMS 1.x was still actively developed. Since my interest
has moved to feincms3 some years ago I haven&amp;rsquo;t kept the organization up to
date. That has changed this week, and I have moved most feincms3-related
repositories into the organization.&lt;/p&gt;
&lt;p&gt;This move doesn&amp;rsquo;t change much though, but it certainly feels more official now.&lt;/p&gt;
&lt;h2&gt;Adding scheduled tests&lt;/h2&gt;
&lt;p&gt;I have started using the cronjob schedule feature of GitHub actions to ensure that tests run at least once a month in a few important projects. I want to get notified of changes in Django@main affecting my packages not only when actively working on them. I try to keep up with Django@main in all packages I maintain.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.18.2&lt;/a&gt;: Many releases in the last weeks. Stopped using permanent redirects in DEBUG mode. Avoid migrations when Django adds more languages. Added utilities which allow restricting model relations to objects in the same site (trickier than it sounds). Added utilities for building full URLs to other sites without taxing the database as much.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-language-sites/"&gt;feincms3-language-sites 0.2.0&lt;/a&gt;: No biggie. No permanent redirects in DEBUG mode anymore.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.4.5&lt;/a&gt;: Reduced the byte size of the CSS and JavaScript some more. Added spanish translations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.16.3&lt;/a&gt;: I have published a post last week describing the new &lt;a href="https://406.ch/writing/keep-content-managers-admin-access-up-to-date-with-role-based-permissions/"&gt;role-based permissions feature&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.17&lt;/a&gt;: The &lt;code&gt;process_imagefields&lt;/code&gt; management command now allows specifying globs. If you wanted to prerender all imagefields in the pages app you can use &lt;code&gt;./manage.py process_imagefields pages.*&lt;/code&gt; now instead of listing all image fields&amp;rsquo; labels explicitly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.4.1&lt;/a&gt;: I&amp;rsquo;m enormously unhappy but I had to go back to the classic CKEditor instead of using the inline editor. The latter looked much nicer but overriding the Django admin CSS was very very painful. Also, I can totally understand why CKEditor 5 is completely different and why CKEditor 4 is only maintained in a paid LTS plan. It still is making me look for alternatives.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-mptt/"&gt;django-mptt 0.15&lt;/a&gt;: I unfortunately am still using this despite the fact that I have marked it as officially unmaintained since march 2021. I did a mediocre job of making the library run on Django@main again. Parts of the library do not work, but since I&amp;rsquo;m not using them I don&amp;rsquo;t care too much. I&amp;rsquo;m still wondering if someone wants to take over maintenance of the library since it still seems to be actively used in projects of others as well. When I don&amp;rsquo;t have to use django-mptt I&amp;rsquo;m still really happy with &lt;a href="https://406.ch/writing/django-tree-queries/"&gt;django-tree-queries&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/form-designer/"&gt;form-designer 0.22&lt;/a&gt;: This is probably my oldest actively developed project these days. 13 years! (Except for django-content-editor of course.) I have modernized the package, switched to hatchling and put out a new release.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 33)</title><link href="https://406.ch/writing/weeknotes-2023-week-33/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-33/</id><published>2023-08-20T12:00:00Z</published><updated>2023-08-20T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 33)&lt;/h1&gt;&lt;p&gt;I&amp;rsquo;m not sure if I should call these posts weeknotes when I see the posting schedule, but oh well. Keep expectations up but also practice forgiveness when not meeting them, it&amp;rsquo;s fine really.&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;py_modules&lt;/code&gt; using hatchling&lt;/h2&gt;
&lt;p&gt;I converted &lt;a href="https://github.com/matthiask/speckenv/"&gt;speckenv&lt;/a&gt; and &lt;a href="https://github.com/matthiask/django-sitemaps/"&gt;django-sitemaps&lt;/a&gt; after finding the following very helpful post on packaging projects consisting of Python modules without any packages: &lt;a href="https://www.stefaanlippens.net/single-python-module-packaging-hatch.html"&gt;Packaging of single Python module projects with Hatch/Hatchling&lt;/a&gt;. It&amp;rsquo;s very easy in hindsight, but that&amp;rsquo;s basically always the case.&lt;/p&gt;
&lt;p&gt;The relevant part is including the files in the build:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[tool.hatch.build]&lt;/span&gt;
&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;speckenv.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;speckenv_django.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;speckenv_django_patch.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s all.&lt;/p&gt;
&lt;h2&gt;django-debug-toolbar and tracing the cause of DB queries in an async world&lt;/h2&gt;
&lt;p&gt;I have also started investigating what would have to be changed in django-debug-toolbar to make it fully support async Django. We currently patch Django&amp;rsquo;s database cursors per thread, which works fine in sync Django land to attribute SQL queries to a particular request/response cycle.&lt;/p&gt;
&lt;p&gt;Since async Django executes DB queries in a thread pool executor and the rest of the work happens inside awaitables (async land) I don&amp;rsquo;t immediately see a way how we could do the same thing. It doesn&amp;rsquo;t seem possible to find out which task spawned another task (without dropping down to C?) but maybe there&amp;rsquo;s something I&amp;rsquo;m overlooking. I hope that someone smarter than me finds a way :-) or that I find the time and motivation to either find a way using Python or using C/Rust/whatever.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.16&lt;/a&gt;: I added basic support for &lt;code&gt;i18n_patterns&lt;/code&gt; when using feincms3-sites with its &lt;code&gt;default_language_middleware&lt;/code&gt; (which allows setting a default language per site in case there is no other mechanism overriding it, such as &lt;code&gt;i18n_patterns&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.4.1&lt;/a&gt;: The privacy policy is now linked inside the banner text instead of adding a link after the text. Looks much nicer.&lt;/li&gt;
&lt;li&gt;&lt;a href="lhttps://pypi.org/project/speckenv/"&gt;speckenv 5.0&lt;/a&gt;: Finally released changes made a long time ago which make one edge case when parsing settings less surprising.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 4.2&lt;/a&gt;: I didn&amp;rsquo;t do much work here again, mostly code reviews, some changes to the ruff configuration and general polishing. I also didn&amp;rsquo;t do the release itself, that was handled by Tim. Thanks!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 23.8&lt;/a&gt;: Fixes for Pillow 10, and some feincms3 / django-content-editor interoperability improvements which make it easier to reuse plugins/content types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.1&lt;/a&gt;: Some basic support for using the apps middleware with async Django. Not documented yet and not deployed anywhere but it basically works. Some documentation edits and changes to the inline CKEditor styling because of the recent changes to Django admin&amp;rsquo;s CSS.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 30)</title><link href="https://406.ch/writing/weeknotes-2023-week-30/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-30/</id><published>2023-07-28T12:00:00Z</published><updated>2023-07-28T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes&lt;/h1&gt;
&lt;h2&gt;Async Django&lt;/h2&gt;
&lt;p&gt;I have used &lt;a href="https://channels.readthedocs.io/"&gt;Django Channels&lt;/a&gt; successfully in a few projects from 2017 to 2019. A few months back I have worked with &lt;a href="https://www.starlette.io/"&gt;Starlette&lt;/a&gt;. And now I have finally started digging into using Django itself with an ASGI server, and not just for one or two views but also including the middleware stack etc since I also need authentication, not just an endpoint forwarding requests to a remote server. I have looked at &lt;a href="https://github.com/emmett-framework/granian"&gt;Granian&lt;/a&gt;, an RSGI/ASGI server written in Rust. But for now I am using &lt;a href="https://www.uvicorn.org/"&gt;uvicorn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Django truly has come a long way but there&amp;rsquo;s much left to do. Django 5.0 is looking great already, but 4.2 misses many pieces still. I am really really glad Django wants to stay backwards compatible but I wish I could wave a magic wand and upgrade everything to async. Adding &lt;code&gt;a&lt;/code&gt; prefixes everywhere for the async version is certainly a good compromise and probably the way to go but it&amp;rsquo;s just not that nice.&lt;/p&gt;
&lt;p&gt;I have been playing around with making &lt;a href="https://feincms3.readthedocs.io/"&gt;feincms3&lt;/a&gt;&amp;rsquo;s applications middleware async compatible because I want the full middleware stack to be async. The code is already released but undocumented and not even mentioned in the changelog. So, feel free to play around with it but it&amp;rsquo;s not supposed to be stable or supported yet.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.1&lt;/a&gt;: Switched to hatchling and ruff. Updated the feincms3-sites docs. Some async updates mentioned above. A Django 4.2 admin CSS update for the inline CKEditor.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-forms/"&gt;feincms3-forms 0.4&lt;/a&gt;: Switched to hatchling and ruff. Started defining default icons for the form fields &lt;a href="https://django-content-editor.readthedocs.io/"&gt;content editor&lt;/a&gt; plugins.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-ckeditor/"&gt;django-ckeditor 6.7&lt;/a&gt;: I&amp;rsquo;m still maintaining the CKEditor 4 integration for Django even though CKEditor 4 itself isn&amp;rsquo;t supported anymore. Minor updates to the editor itself and Pillow compatibility updates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.3.2&lt;/a&gt;: The cookie banner doesn&amp;rsquo;t generate an empty &lt;code&gt;&amp;lt;div class="f3cc"&amp;gt;&lt;/code&gt; element anymore if there&amp;rsquo;s nothing to add inside (e.g. if the user only accepted necessary cookies).&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 29)</title><link href="https://406.ch/writing/weeknotes-2023-week-29/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-29/</id><published>2023-07-21T12:00:00Z</published><updated>2023-07-21T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes&lt;/h1&gt;
&lt;p&gt;I have mainly done work in private projects this week. Not much to talk about.
Except for the ZIP file &lt;code&gt;content-type&lt;/code&gt; bug which was interesting enough to
justify &lt;a href="https://406.ch/writing/serving-zip-files-using-django/"&gt;its own blog post&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.13&lt;/a&gt;: I converted
  the package to use ruff, hatchling; started running CI tests using Python
  3.11. The internals of the Django admin&amp;rsquo;s filters have changed to allow
  multi-valued filters, this has required some changes to the implementation of
  the folder filter. I opted to using a relatively ugly &lt;code&gt;django.VERSION&lt;/code&gt;
  hack; but that&amp;rsquo;s not too bad since such branches will be automatically
  removed by the awesome
  &lt;a href="https://github.com/adamchainz/django-upgrade"&gt;django-upgrade&lt;/a&gt;. I would have
  tried finding other ways in the past but now that old compatibility code can
  be removed by a single run of &lt;code&gt;django-upgrade&lt;/code&gt; (respectively
  &lt;code&gt;pre-commit&lt;/code&gt;) there really is no point to doing it in a different way.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 28)</title><link href="https://406.ch/writing/weeknotes-2023-week-28/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-28/</id><published>2023-07-12T12:00:00Z</published><updated>2023-07-12T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 28)&lt;/h1&gt;&lt;h2&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.2&lt;/a&gt;: Made the
  sanitizer&amp;rsquo;s configuration initialization more strict. Strings cannot be used
  anymore in places where the sanitizer expects a set (resp. any iterable).
  It&amp;rsquo;s useful that strings are iterable in Python and I wouldn&amp;rsquo;t want to change
  that, but the fact that &lt;code&gt;("class")&lt;/code&gt; is a string and not a tuple makes me sad.
  The fact that tuples are created by &lt;code&gt;,&lt;/code&gt; and not by &lt;code&gt;()&lt;/code&gt; will always trip up
  people.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-language-sites/"&gt;feincms3-language-sites
  0.1&lt;/a&gt;: The version number
  is wrong but whatever. I&amp;rsquo;m certainly happy with the state of things. The big
  change in 0.1 is that &lt;code&gt;Page.get_absolute_url&lt;/code&gt; no longer generates
  protocol-relative URLs. Depending on the value of &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; it
  automatically prepends either &lt;code&gt;http:&lt;/code&gt; or &lt;code&gt;https:&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.15&lt;/a&gt;:
  django-authlib&amp;rsquo;s admin Single Sign On module now supports a hook to
  automatically create staff users when a matching user doesn&amp;rsquo;t exist already.
  I don&amp;rsquo;t plan to use this functionality myself and I have recommended people
  to implement the functionality themselves using the tools in django-authlib
  if they need it, but the change was so small and well-contained that adding
  it to the core made sense to me.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;pipx inject&lt;/h2&gt;
&lt;p&gt;We learned that &lt;a href="https://pypa.github.io/pipx/"&gt;pipx&lt;/a&gt; seems to remember injected
packages even across &lt;code&gt;pipx reinstall&lt;/code&gt; invocations. Not too surprising now that
we know it, but we certainly spent some time scratching our heads. &lt;code&gt;pipx
uninject&lt;/code&gt; was the thing we needed to stop pipx from installing an old version
of a dependency instead of the one being specified in &lt;code&gt;pyproject.toml&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;hatchling and data files&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m very confused by the way &lt;a href="https://hatch.pypa.io/"&gt;hatchling&lt;/a&gt; sometimes
includes data files and sometimes it doesn&amp;rsquo;t. I had to add &lt;code&gt;[tool.hatch.build]
include=["authlib/"]&lt;/code&gt; to &lt;a href="https://github.com/matthiask/django-authlib/commit/67d4673e4039eac277b5d2557c0736c1f01442ac"&gt;django-authlib&amp;rsquo;s &lt;code&gt;pyproject.toml&lt;/code&gt;
file&lt;/a&gt;
to make it include HTML files from subpackages. Maybe the subpackages are the
reason, but I&amp;rsquo;m not sure.&lt;/p&gt;
&lt;h2&gt;Payment providers that must not be named&lt;/h2&gt;
&lt;p&gt;I have spent hours and hours battling with the badly documented, incomplete,
inconsistent and confusing API of a (not that well known) payment provider
based in Switzerland. I&amp;rsquo;m surprised that this still happens years and years
after Stripe started offering a really well thought out and documented API
geared towards programmers. It&amp;rsquo;s really sad because when the same structure is
named with differing naming conventions (e.g. &lt;code&gt;snake_case&lt;/code&gt; vs. &lt;code&gt;camelCase&lt;/code&gt;) in
different parts of the API you just know that somebody spent too much time
writing too much code instead of reusing already existing functionality.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 26)</title><link href="https://406.ch/writing/weeknotes-2023-week-26/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-26/</id><published>2023-06-30T12:00:00Z</published><updated>2023-06-30T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 26)&lt;/h1&gt;&lt;h2&gt;Releases&lt;/h2&gt;
&lt;p&gt;I released updates to a few of my packages; I have continued converting packages to &lt;a href="https://hatch.pypa.io"&gt;hatchling&lt;/a&gt; and &lt;a href="https://github.com/astral-sh/ruff"&gt;ruff&lt;/a&gt; while doing that.&lt;/p&gt;
&lt;p&gt;New releases in the last two weeks include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.15&lt;/a&gt;: Added a new function, &lt;code&gt;.without_tree_fields()&lt;/code&gt; to the queryset which can be used to avoid the &lt;code&gt;.with_tree_fields(False)&lt;/code&gt; boolean trap warning.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.3.1&lt;/a&gt;: This small update allows replacing the feincms3 &lt;a href="https://noembed.com"&gt;noembed.com&lt;/a&gt; oEmbed code using other libraries such as &lt;a href="https://github.com/coleifer/micawber/"&gt;micawber&lt;/a&gt; which support a wider range of URLs while still gating the embed behind users&amp;rsquo; explicit consent.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-downloads/"&gt;feincms3-downloads 0.5.3&lt;/a&gt;: Updated translations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-ckeditor/"&gt;django-ckeditor 6.6.1&lt;/a&gt;: Updated the bundled CKEditor 4 and merged a pull request adding better integration with Django admin&amp;rsquo;s dark mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset 2.1&lt;/a&gt;: Just basic maintainability and packaging updates. The &lt;code&gt;JS()&lt;/code&gt; implementation itself is untouched since February 2022.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.0&lt;/a&gt;: Not really a backwards incompatible change (at least not according to the tests); I just wanted to avoid &lt;code&gt;1.10&lt;/code&gt; and go directly to &lt;code&gt;2.0&lt;/code&gt; this time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;GitHub projects&lt;/h2&gt;
&lt;p&gt;We are using GitHub project boards more and more. It definitely isn&amp;rsquo;t the most versatile way of managing projects but it sort-of hits the sweet spot for us. I&amp;rsquo;m mostly happy with it, and it seems to me that applying &lt;a href="https://en.wikipedia.org/wiki/Rule_of_least_power"&gt;the rule of least power&lt;/a&gt; to project management software may not be such a bad idea after all.&lt;/p&gt;
&lt;p&gt;The built-in workflows are a bit boring and limited; especially the fact that it seems impossible to automatically add issues to the project when using multiple repositories. Luckily, &lt;a href="https://github.com/actions/add-to-project"&gt;actions/add-to-project&lt;/a&gt; exists so that&amp;rsquo;s not really a big problem.&lt;/p&gt;
&lt;h2&gt;To cloud or not&lt;/h2&gt;
&lt;p&gt;I had a long discussion with a colleague about containerization, Kubernetes, self-hosting, etc. etc. and I still don&amp;rsquo;t know where I stand. I can honestly say that the old way of hosting (ca. 2010) still works fine. I worry about the deterioriation of service quality we&amp;rsquo;re seeing and sometimes I really would like to have root to apply quick fixes where now I have to jump to hoops just to get what I already know I need. Annoying. But migrations are annoying as well.&lt;/p&gt;
&lt;h2&gt;Scheduled publishing&lt;/h2&gt;
&lt;p&gt;I augmented the script generating this website with scheduled publishing support while again reducing the number of lines in the file. The code is still formatted using black and ruff, while only ignoring line-length errors (I do this everywhere now to avoid breaking up long strings, not to put much code onto single lines) and allowing named lambdas. The weeknotes from two weeks ago where published by GitHub actions&amp;rsquo; cron scheduling support.&lt;/p&gt;
&lt;h2&gt;I like programming more than writing (even though I like writing)&lt;/h2&gt;
&lt;p&gt;I notice that writing is the first thing I start skipping when I have to
prioritize. Programming, biking, gardening come first. That&amp;rsquo;s fine, really. But
I&amp;rsquo;m still a bit sad that I do not manage to at least put out a short weekly
weeknotes entry.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 24)</title><link href="https://406.ch/writing/weeknotes-2023-week-24/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-24/</id><published>2023-06-16T12:00:00Z</published><updated>2023-06-16T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 24)&lt;/h1&gt;&lt;p&gt;Life happened and I missed a month of weeknotes. Oh well.&lt;/p&gt;
&lt;h2&gt;django-debug-toolbar 4.1&lt;/h2&gt;
&lt;p&gt;We have released &lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar
4.1&lt;/a&gt;. Another cycle where I
mostly contributed reviews and not much else. Feels great :-)&lt;/p&gt;
&lt;h2&gt;Going all in on hatch and hatchling&lt;/h2&gt;
&lt;p&gt;I got to know hatch because django-debug-toolbar was converted to it. I was
confused as probably anyone else with the new state of packaging in Python
world. After listening to a few Podcasts (for example &lt;a href="https://talkpython.fm/episodes/show/408/hatch-a-modern-python-workflow"&gt;Hatch: A Modern Python
Workflow&lt;/a&gt;)
I did bite the bullet and started converting projects to hatch as mentioned
&lt;a href="https://406.ch/writing/weeknotes-2023-week-13-and-14/"&gt;some time ago&lt;/a&gt;. I have
converted a few other projects in the meantime because the development
experience is nicer. Not much, but enough to make it worthwile.
&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites&lt;/a&gt; is the latest
package I converted.&lt;/p&gt;
&lt;h2&gt;CKEditor 5&amp;rsquo;s new license and django-ckeditor&lt;/h2&gt;
&lt;p&gt;The pressure is on to maybe switch away from CKEditor 4 since it probably will not be supported after &lt;a href="https://support.ckeditor.com/hc/en-us/articles/115005281629-How-long-will-CKEditor-4-be-supported-"&gt;June 2023&lt;/a&gt;. It&amp;rsquo;s totally understandable that the CKEditor 5 license isn&amp;rsquo;t the same as before, but I&amp;rsquo;m not sure what that means for the Django integration &lt;a href="https://github.com/django-ckeditor/django-ckeditor/issues/482"&gt;django-ckeditor&lt;/a&gt; which I&amp;rsquo;m maintaining since a few years. I don&amp;rsquo;t actually like the new capabilities of CKEditor all that much and don&amp;rsquo;t intend to use them; maybe it would be better to use a build of &lt;a href=""&gt;ProseMirror&lt;/a&gt; in the CMS since &lt;a href="https://django-content-editor.readthedocs.io/en/latest/#about-rich-text-editors"&gt;we&amp;rsquo;re intentionally only using a very small subset of the features most rich text editors offer&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Mountain biking.&lt;/h2&gt;
&lt;p&gt;My mountain bike is repaired, I&amp;rsquo;m back on the trail.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 18 and 19)</title><link href="https://406.ch/writing/weeknotes-2023-week-18-and-19/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-18-and-19/</id><published>2023-05-12T12:00:00Z</published><updated>2023-05-12T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 18 and 19)&lt;/h1&gt;
&lt;p&gt;Not much programming this week :-(&lt;/p&gt;
&lt;h2&gt;oEmbed&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://406.ch/writing/weeknotes-2023-week-17/"&gt;Still occupying myself with oEmbed.&lt;/a&gt; I have been looking at a few libraries and have rediscovered &lt;a href="https://github.com/coleifer/micawber/"&gt;micawber&lt;/a&gt; which probably does everything I need. Yay, another reinvented wheel avoided. I haven&amp;rsquo;t tested it yet but I&amp;rsquo;m quite sure that replacing the &lt;a href="https://github.com/matthiask/feincms3/blob/main/feincms3/plugins/external.py"&gt;oEmbed functionality in feincms3&amp;rsquo;s external plugin&lt;/a&gt; with micawber would be a good idea.&lt;/p&gt;
&lt;h2&gt;Vacation&lt;/h2&gt;
&lt;p&gt;Vacation last week. Was nice. We went for a few hikes. I have learned that I&amp;rsquo;m
not totally free from giddiness anymore. Oh well.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 17)</title><link href="https://406.ch/writing/weeknotes-2023-week-17/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-17/</id><published>2023-04-28T12:00:00Z</published><updated>2023-04-28T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 17)&lt;/h1&gt;&lt;h2&gt;Birthday&lt;/h2&gt;
&lt;p&gt;Another year achieved. Feels the same as last year. I&amp;rsquo;m glad.&lt;/p&gt;
&lt;h2&gt;feincms3-cookiecontrol&lt;/h2&gt;
&lt;p&gt;I have released &lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol
1.3&lt;/a&gt;. Mostly cleanups since
1.2, but also a new translation (already announced here). The script size has
been reduced from 4519 bytes to 4228 bytes (-6.5%) while keeping all features
intact. The reduction is totally meaningless but it was fun to do.&lt;/p&gt;
&lt;h2&gt;oEmbed&lt;/h2&gt;
&lt;p&gt;I have been digging into the oEmbed spec a bit. I didn&amp;rsquo;t even know that a
central list of &lt;a href="https://oembed.com/providers.json"&gt;providers&lt;/a&gt; exists.
&lt;a href="https://noembed.com/"&gt;Noembed&lt;/a&gt; still works great to embed many different types
of content but I worry more and more about its maintenance state.
Reimplementing the interesting parts shouldn&amp;rsquo;t be that hard, but maybe I don&amp;rsquo;t
have to do this myself. &lt;a href="https://github.com/attakei-lab/oEmbedPy/"&gt;oEmbedPy&lt;/a&gt;
looks nice, I hope I get a chance to play around with it.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 16)</title><link href="https://406.ch/writing/weeknotes-2023-week-16/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-16/</id><published>2023-04-21T12:00:00Z</published><updated>2023-04-21T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 16)&lt;/h1&gt;
&lt;h2&gt;Experiments with Stable Diffusion&lt;/h2&gt;
&lt;p&gt;A friend and myself threw a few scripts together to automatically finetune a Stable Diffusion model using images downloaded from Google Image search. It&amp;rsquo;s terrifying how easy and fast generating fake news including photorealistic images can be and will be already. And seeing how fast those models improve it&amp;rsquo;s just a matter of time until we can trust photos even less than now. Manipulating images has been possible for a long time of course, but it hasn&amp;rsquo;t been a &amp;ldquo;commodity&amp;rdquo; until now.&lt;/p&gt;
&lt;p&gt;I definitely also see upsides in the new machine learning technologies but I fear that there&amp;rsquo;s a real danger to trust, and in extension to democracy.&lt;/p&gt;
&lt;p&gt;This technology and what we did will be a part of an upcoming &lt;a href="https://www.srf.ch/play/tv/sendung/kulturplatz?id=d70e9bb9-0cee-46b6-8d87-7cbd8317a9c7"&gt;SRF Kulturplatz&lt;/a&gt; broadcast, or so I hope. It&amp;rsquo;s high time that the public knows what&amp;rsquo;s possible. It&amp;rsquo;s about &lt;strong&gt;,edia literacy&lt;/strong&gt; really.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not that pessimistic though. I just hope that this time the thoughtfulness will prevail over pure profit seeking. (Did I really write that.)&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/django-ckeditor/django-ckeditor"&gt;django-ckeditor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many people are noticing that the CKEditor 4 integration for Django doesn&amp;rsquo;t work that well when using the dark color scheme of the Django admin panel. That&amp;rsquo;s not surprising. What does surprise me is the number of reports and the total absence of pull requests. Subjectively, most other packages I help maintain have a comfortable ratio of issues and pull requests.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not complaining and people aren&amp;rsquo;t complaining, almost everyone is nice and tries to be helpful. Since I&amp;rsquo;m not a heavy user of django-ckeditor anymore I don&amp;rsquo;t really find the motivation to fix this issue myself since it&amp;rsquo;s not all that enjoyable work to me. I would just hope that &lt;a href="https://github.com/django-ckeditor/django-ckeditor/issues/670"&gt;after all this time&lt;/a&gt; someone would finally come and do the necessary work &amp;ndash; if they cared enough.&lt;/p&gt;
&lt;h2&gt;django-mptt&lt;/h2&gt;
&lt;p&gt;I have marked &lt;a href="https://github.com/django-mptt/django-mptt"&gt;django-mptt&lt;/a&gt; as unmaintained two years ago. I&amp;rsquo;m still looking at pull requests from time to time but without feeling an obligation to do so and without feeling bad when I miss something.&lt;/p&gt;
&lt;p&gt;I wonder if there are still many people out there who still depend on this library and if any of them would be willing to pick up the maintenance? On the off chance that someone is out there who has the time, ability and motivation and just didn&amp;rsquo;t know that django-mptt could use some love: Here&amp;rsquo;s your invite!&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 15)</title><link href="https://406.ch/writing/weeknotes-2023-week-15/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-15/</id><published>2023-04-16T12:00:00Z</published><updated>2023-04-16T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 15)&lt;/h1&gt;&lt;h2&gt;Romansh translations for feincms3-cookiecontrol and django-fineforms&lt;/h2&gt;
&lt;p&gt;The feincms3 cookie control banner and django-fineforms have received a small update: Support for the &lt;a href="https://en.wikipedia.org/wiki/Romansh_language"&gt;Romansh&lt;/a&gt; language. I would be surprised if any readers of this blog even knew about this language at all. Switzerland has four official languages: German, French, Italian and the mentioned Romansh.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not a coincidence of course that those two packages have received an update at the same time. Both packages are used for an upcoming campaign site where people may express their support for political action to preserve or protect the &lt;a href="https://en.wikipedia.org/wiki/Biodiversity"&gt;biodiversity&lt;/a&gt;. It&amp;rsquo;s at the same time laughable and horrifying that this is even a thing though: Who in their right mind could NOT agree that preserving biodiversity is important? It&amp;rsquo;s incomprehensible. Maybe I&amp;rsquo;m just a romantic &lt;a href="https://en.wikipedia.org/wiki/Gutmensch"&gt;Gutmensch&lt;/a&gt; after all&amp;hellip;&lt;/p&gt;
&lt;h2&gt;django-ckeditor&lt;/h2&gt;
&lt;p&gt;I have set up the &lt;a href="https://github.com/actions/stale"&gt;stale&lt;/a&gt; GitHub action for the &lt;a href="https://github.com/django-ckeditor/django-ckeditor"&gt;django-ckeditor&lt;/a&gt; repository. So many support requests, so little time and almost no actual collaborators. Also, many support requests actually concern CKEditor itself, not its Django integration. I shouldn&amp;rsquo;t complain though, CKEditor has served me well and still does, &lt;a href="https://github.com/matthiask/feincms3/blob/main/feincms3/inline_ckeditor.py"&gt;especially when it&amp;rsquo;s being used with a very minimal configuration&lt;/a&gt; which basically makes most pain points of HTML editors go away.&lt;/p&gt;
&lt;h2&gt;django-debug-toolbar&lt;/h2&gt;
&lt;p&gt;I have reviewed and merged a few changes to &lt;a href="https://github.com/jazzband/django-debug-toolbar"&gt;django-debug-toolbar&lt;/a&gt; in the last week. Still a fun project, especially since it&amp;rsquo;s so widely used and loved.&lt;/p&gt;
&lt;h2&gt;Meta&lt;/h2&gt;
&lt;p&gt;Blogging with vim is fun.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 13 and 14)</title><link href="https://406.ch/writing/weeknotes-2023-week-13-and-14/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-13-and-14/</id><published>2023-04-05T12:00:00Z</published><updated>2023-04-05T12:00:00Z</updated><summary type="html">&lt;h1&gt;Weeknotes (2023 week 13 and 14)&lt;/h1&gt;
&lt;h2&gt;My son will be a teenager soon&lt;/h2&gt;
&lt;p&gt;My eldest is now 12 years old and will be a teenager soon. We had a good time and two nice Birthday parties, one with his friends and one with family and our friends. Good times.&lt;/p&gt;
&lt;h2&gt;django-debug-toolbar 4.0&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.djangoproject.com/weblog/2023/apr/03/django-42-released/"&gt;Django 4.2 was released&lt;/a&gt;, &lt;a href="https://github.com/pypa/hatch/pull/762"&gt;Hatch gained support for the Django 4.2 Trove classifier&lt;/a&gt; and &lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;we released django-debug-toolbar 4.0&lt;/a&gt;, with support for Django 4.2, psycopg 3 and all the existing goodies.&lt;/p&gt;
&lt;h2&gt;feincms3-cookiecontrol&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/feinheit/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol&lt;/a&gt; has gained support for consciously embedding stuff via oEmbed. It can now use &lt;a href="https://noembed.com/"&gt;Noembed&lt;/a&gt; (via &lt;a href="https://github.com/matthiask/feincms3"&gt;feincms3&lt;/a&gt;&amp;rsquo;s external plugin) and only actually embed the third party content if users consented explicitly.&lt;/p&gt;
&lt;p&gt;I have since learned through the &lt;a href="https://podcast.datenschutzpartner.ch/"&gt;Datenschutz-Plaudereien&lt;/a&gt; podcast that laws regarding consent are not that strict in Switzerland compared to the European Union, also not when the &lt;a href="https://www.admin.ch/gov/de/start/dokumentation/medienmitteilungen.msg-id-90134.html"&gt;DSG&lt;/a&gt; is put into effect in September. What&amp;rsquo;s right and what&amp;rsquo;s legal are two different things and while I don&amp;rsquo;t really like the ubiquitous cookie banners (especially not when they aren&amp;rsquo;t actually doing anything) I like the idea of explicit consent and of not sending data unnecessarily to third party providers. The additional click isn&amp;rsquo;t that bad.&lt;/p&gt;
&lt;h2&gt;Diving into hatch for Python packaging&lt;/h2&gt;
&lt;p&gt;I listened to the TalkPython podcast episode with Ofek Lev on &lt;a href="https://talkpython.fm/episodes/show/408/hatch-a-modern-python-workflow"&gt;his Hatch packaging tool&lt;/a&gt;. After a long period of uncertainty and waiting I bit the bullet and started to migrate a few of my Python packages from setuptools and &lt;code&gt;setup.py&lt;/code&gt; to hatch and &lt;code&gt;pyproject.toml&lt;/code&gt;, until now &lt;a href="https://github.com/feinheit/feincms3-cookiecontrol"&gt;feincms3-cookiecontrol&lt;/a&gt; and &lt;a href="https://github.com/matthiask/feincms3"&gt;feincms3&lt;/a&gt;. It was surprisingly painless.&lt;/p&gt;
&lt;h2&gt;ruff&lt;/h2&gt;
&lt;p&gt;I started learning Rust during the last &lt;a href="https://adventofcode.com/"&gt;Advent of Code&lt;/a&gt;; it&amp;rsquo;s a nice language. &lt;a href="https://beta.ruff.rs/"&gt;ruff&lt;/a&gt; is a linter and (more and more) formatter for Python code written in Rust. After years of working with Python and Python-based tools it&amp;rsquo;s surprisingly fast, almost worryingly so. It&amp;rsquo;s true what they say: ruff finishes so fast that I&amp;rsquo;m always left wondering if it even did anything at all.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m configuring ruff through &lt;code&gt;pyproject.toml&lt;/code&gt;, so switching from setuptools to hatch (see above) also helped in this regard. The main trouble I had was that I&amp;rsquo;m running Python 3.11 locally but Python 3.10 in the server environment (no dev-prod parity&amp;hellip;), and rebuilding &lt;code&gt;requirements.txt&lt;/code&gt; locally of course didn&amp;rsquo;t add TOML support because it&amp;rsquo;s built into Python 3.11, but Python 3.10 needs an external package. So of course I broke the build. That&amp;rsquo;s not all bad though: If stuff broke it definitely helps with remembering the reasons later.&lt;/p&gt;
&lt;h2&gt;Meta&lt;/h2&gt;
&lt;p&gt;Co-writing still works really well for me. Expressed differently: I seem to be unable to write without the (slight) pressure of writing together.&lt;/p&gt;</summary></entry></feed>