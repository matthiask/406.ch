<?xml version='1.0' encoding='utf-8'?>
<feed xml:lang="en" xmlns="http://www.w3.org/2005/Atom"><title>Matthias Kestenholz: Posts about Weeknotes</title><link href="https://406.ch/writing/category-weeknotes/atom.xml" rel="self" /><link href="https://406.ch/writing/category-weeknotes/" rel="alternate" /><id>https://406.ch/writing/category-weeknotes/</id><updated>2024-07-31T12:00:00Z</updated><author><name>Matthias Kestenholz</name></author><entry><title>Weeknotes (2024 week 31)</title><link href="https://406.ch/writing/weeknotes-2024-week-31/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-31/</id><published>2024-07-31T12:00:00Z</published><updated>2024-07-31T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-31"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-31"&gt;Weeknotes (2024 week 31)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have missed almost two months of weeknotes. I&amp;rsquo;ve got some catching up to do.
I have tried writing a larger piece on my thoughts about CMS, but with
everything going on in my personal and work life I haven&amp;rsquo;t made much progress.&lt;/p&gt;
&lt;p&gt;This weeknotes entry is me trying to get back into the groove of writing (and
publishing!) regularly.&lt;/p&gt;
&lt;h2 id="django-prose-editor"&gt;&lt;a class="toclink" href="#django-prose-editor"&gt;&lt;a href="https://github.com/matthiask/django-prose-editor/"&gt;django-prose-editor&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have previously written about the
&lt;a href="https://prosemirror.net/"&gt;ProseMirror&lt;/a&gt;-based editor for Django websites
&lt;a href="https://406.ch/writing/django-prose-editor-prose-editing-component-for-the-django-admin/"&gt;here&lt;/a&gt;.
I have continued working on the project in the meantime. Apart from bugfixes
the big new feature is the support for showing typographic characters. For now
the editor supports showing non-breaking spaces and soft hyphens. The project
seems to get a little more interest after the deprecation of django-ckeditor
has become more well known and the project has even received a contribution by
someone else. It&amp;rsquo;s always a lovely moment when this happens.&lt;/p&gt;
&lt;h2 id="django-json-schema-editor"&gt;&lt;a class="toclink" href="#django-json-schema-editor"&gt;&lt;a href="https://github.com/matthiask/django-json-schema-editor"&gt;django-json-schema-editor&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Still alpha. Updated the vendorized JSON editor and fixed the integration into
Django to not throw errors with the newer version.&lt;/p&gt;
&lt;p&gt;Foreign key fields now support describing the referenced value similar to the
raw ID fields functionality. Added optional support for using &lt;code&gt;"format":
"prose"&lt;/code&gt; to use the django-prose-editor to edit individual fields. JSON
plugins for the content editor are now downcasted into their proxy models
automatically. This is especially useful with the feincms3 changes mentioned
below. (You do not have to use either django-content-editor or feincms3 to use
this package!)&lt;/p&gt;
&lt;p&gt;The following screenshot shows the prose editor integration; the mentioned
foreign key field description isn&amp;rsquo;t visible yet here.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A screenshot of the JSON editor including the prose editor" src="https://406.ch/assets/20240731-json-editor.png" /&gt;&lt;/p&gt;
&lt;h2 id="traduire"&gt;&lt;a class="toclink" href="#traduire"&gt;&lt;a href="https://github.com/matthiask/traduire"&gt;Traduire&lt;/a&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Traduire (french for «translate») is a web-based platform for editing gettext
translations.&lt;/p&gt;
&lt;p&gt;It is intended as a replacement for Transifex, Weblate and comparable products.
It is geared towards small teams or agencies which want to allow their
customers and their less technical team members to update translations.&lt;/p&gt;
&lt;p&gt;Traduire profits from the great work done on
&lt;a href="https://github.com/mbi/django-rosetta/"&gt;django-rosetta&lt;/a&gt;. I would still be
using Rosetta if it would work when used with a container orchestator such as
Kubernetes. Since all application storage is ephemeral that doesn&amp;rsquo;t work,
translation editing and deployment have to be separated.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A screenshot of the Traduire interface" src="https://406.ch/assets/20240731-traduire.png" /&gt;&lt;/p&gt;
&lt;p&gt;It is built using Django and relies on &lt;a href="https://pypi.org/project/polib/"&gt;polib&lt;/a&gt;
to do the heavy lifting.&lt;/p&gt;
&lt;p&gt;This is a project which might also be interesting for others. I would
especially appreciate it if someone could contribute an easier way to get it up
and running, e.g. using a Docker Compose configuration or something. I am using
Kubernetes and GitOps to host it, but that&amp;rsquo;s not straightforward at all.
Really, all that&amp;rsquo;s needed to run it is a Django host with any database which is
supported by Django. I prefer using PostgreSQL because I have it, but sqlite
etc. work just as well.&lt;/p&gt;
&lt;h2 id="releases-since-the-second-week-of-june"&gt;&lt;a class="toclink" href="#releases-since-the-second-week-of-june"&gt;Releases since the second week of June&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-translated-fields/"&gt;django-translated-fields 0.13&lt;/a&gt;:
  Nothing much except for CI and pre-commit updates. The implementation
  continues to be rock-solid and basically unchanged.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.0.6&lt;/a&gt;:
  Tweaks and fixes to the new interface. Added better scrolling behavior when
  dragging content around. The editor now also supports colorized icons which
  helps quickly understanding the structure of some content when there are many
  plugins.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.0.2&lt;/a&gt;:
  Fixed a few bugs in the &lt;code&gt;blacknoise.compress&lt;/code&gt; utility and started running
  the testsuite on GitHub actions.
  &lt;a href="https://github.com/evansd/whitenoise/"&gt;whitenoise&lt;/a&gt; has been friendly-forked
  as &lt;a href="https://github.com/Archmonger/ServeStatic"&gt;ServeStatic&lt;/a&gt; and I&amp;rsquo;m
  definitely having a close look at this project as well, but blacknoise is
  simple and works well, so I&amp;rsquo;m not convinced that switching back to the much
  larger project (in terms of amounts of code) is an improvement now.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib&lt;/a&gt;:
  Minor bugfixes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3&lt;/a&gt;:
  Allowed registering plugin models with the renderer which aren&amp;rsquo;t supposed to
  be fetched from the database. This is especially useful when used together
  with JSON plugins, where the individual JSON plugins are created as proxies
  for the underlying Django model and fetched all at once. Disabled the version
  check on our CKEditor plugin. Still, really stop using CKEditor 4 if you want
  to use maintained software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 24.7.1&lt;/a&gt;:
  Small bugfixes, and made the Read the Docs build work correctly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 4.4.x&lt;/a&gt;:
  The toolbar continues to be a nice project to work on. Fixed a few edge cases
  in the new alerts panel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-admin-ordering/"&gt;django-admin-ordering 0.18.2&lt;/a&gt;:
  The value of &lt;code&gt;ordering_field&lt;/code&gt; now has additional sanity checks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.16&lt;/a&gt;:
  cabinet now supports exporting a folder as a ZIP file while preserving the
  structure you see in the CMS instead of the structure on the file system. The
  inline upload form has been dropped from the &lt;code&gt;CabinetForeignKey&lt;/code&gt; widget
  because the folder dropdown slowed down the page a lot when used on a site
  with many folders. Using the raw ID fields popup isn&amp;rsquo;t that bad.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.6.2&lt;/a&gt;:
  See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.28&lt;/a&gt;:
  See above.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 23)</title><link href="https://406.ch/writing/weeknotes-2024-week-23/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-23/</id><published>2024-06-07T12:00:00Z</published><updated>2024-06-07T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-23"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-23"&gt;Weeknotes (2024 week 23)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="switching-everything-from-pip-to-uv"&gt;&lt;a class="toclink" href="#switching-everything-from-pip-to-uv"&gt;Switching everything from pip to uv&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Enough said. I&amp;rsquo;m always astonished how fast computers can be.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-admin-ordering/"&gt;django-admin-ordering
  0.18&lt;/a&gt;: Added a database
  index to the ordering field since we&amp;rsquo;re always sorting by it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.4&lt;/a&gt;:
  Dropped the jQuery dependency making it possible to use the editor outside
  the Django administration interface without annoying JavaScript errors.
  Allowed additional heading levels and moved the block type buttons into a
  popover.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 4.4.2&lt;/a&gt;:
  I enjoy working on this important piece of software very much.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-email-hosts/"&gt;django-email-hosts 0.2.1&lt;/a&gt;:
  Added a command analogous to &lt;code&gt;./manage.py sendtestemail&lt;/code&gt; so that it&amp;rsquo;s
  possible to easily test the different configured email backends.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 5.0&lt;/a&gt;: I completely reworked the
  move node action; previously it opened a new page where you could see all
  possible targets; now you can cut a page and paste it somewhere else. The
  advantages of the new interface is that you don&amp;rsquo;t leave the changelist and
  can still profit from all its features while moving pages around.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.21&lt;/a&gt;: A new
  release taking advantage of a new hook in feincms3 7.0 so that the new moving
  interface works.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.16.5&lt;/a&gt;: authlib
  now shows a welcome message when authenticating using admin OAuth2. It&amp;rsquo;s nice
  and helps with debugging strange authentication failures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 7.0&lt;/a&gt;:
  I reworked the UI. The sidebar is gone, instead there are nice buttons in the
  place where you can add new plugins; the plugins appear in a nice grid
  instead of a list, which looks much better once you have more than just a few
  plugin types available. Also, plugin type icons are now shown in the plugin
  forms. I think it looks much better than before.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol
  1.5.2&lt;/a&gt;: I didn&amp;rsquo;t contribute
  anything to this release which is also a nice experience for a change. The
  Google consent mode integration has been improved and simplified.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor
  0.0.22&lt;/a&gt;: Various
  small-ish improvements. I should really start using higher version numbers,
  but not having to commit to anything also feels great.  That being said, the
  editor is in active use in several projects, so maybe I&amp;rsquo;m deceiving myself.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 21)</title><link href="https://406.ch/writing/weeknotes-2024-week-21/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-21/</id><published>2024-05-22T12:00:00Z</published><updated>2024-05-22T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-21"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-21"&gt;Weeknotes (2024 week 21)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;There have been times when work has been more enjoyable than in the last few
weeks. It feels more stressful than at other times, and this mostly has to do
with particular projects. I hope I&amp;rsquo;ll be able to move on soon.&lt;/p&gt;
&lt;h2 id="blacknoise"&gt;&lt;a class="toclink" href="#blacknoise"&gt;blacknoise&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have released &lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.0&lt;/a&gt;. It&amp;rsquo;s an
ASGI app for static file serving inspired by
&lt;a href="https://github.com/evansd/whitenoise/"&gt;whitenoise&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The 1.0 version number is only a big step in versioning terms, not much has
happened with the code. It&amp;rsquo;s a tiny little well working piece of software which
has been running in production for some time without any hickups. The biggest
recent change is that I have parallelized the gzip and brotli compression step;
this makes building images using whitenoise more painful because there the wait
is really really long sometimes. &lt;a href="https://github.com/evansd/whitenoise/pull/484"&gt;A pull request fixing this
exists&lt;/a&gt;, but it hasn&amp;rsquo;t moved
forwards in months.&lt;/p&gt;
&lt;p&gt;I have written a longer post about it earlier this year
&lt;a href="https://406.ch/writing/blacknoise-asgi-app-for-static-file-serving/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.5&lt;/a&gt;: Code golfing. Added backwards compatibility with old Django versions so that I can use it for old projects. Also includes optional support for Google consent management.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django_fast_export/"&gt;django-fast-export 0.1.1&lt;/a&gt;: This is basically a repackaging of the streaming CSV view from Django&amp;rsquo;s documentation as a reusable class. I have switched to using an iterator so that I can export even larger datasets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.18&lt;/a&gt;: Still alpha versioned but used in production in various projects. I should really release an 1.0 version, but there are no integration tests at all. Mainly visual tweaks in this update.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 6.5&lt;/a&gt;: Better handling of templates and regions when a particular editor instance only shows a subset of configured templates. Disallowed adding plugins when in an unknown region. It&amp;rsquo;s funny how many edge cases exist in software as old as this.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 1.0&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.4.4&lt;/a&gt;: Fixed edge cases with whitespace handling when merging elements.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-data/"&gt;feincms3-data 0.6.1&lt;/a&gt;: Allowed &lt;code&gt;./manage.py f3loaddata -&lt;/code&gt; to load JSON data from stdin.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 18)</title><link href="https://406.ch/writing/weeknotes-2024-week-18/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-18/</id><published>2024-05-03T12:00:00Z</published><updated>2024-05-03T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-18"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-18"&gt;Weeknotes (2024 week 18)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="google-summer-of-code-has-begun"&gt;&lt;a class="toclink" href="#google-summer-of-code-has-begun"&gt;Google Summer of Code has begun&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have a student helping out with adding async support to the &lt;a href="https://github.com/jazzband/django-debug-toolbar/"&gt;Django Debug
Toolbar&lt;/a&gt;. It&amp;rsquo;s great that
someone can spend some concentrated time to work on this. Tim and others have
done all the necessary preparation work, I&amp;rsquo;m only helping from the sidelines so
don&amp;rsquo;t thank me.&lt;/p&gt;
&lt;h2 id="bike-to-work"&gt;&lt;a class="toclink" href="#bike-to-work"&gt;Bike to Work&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Two teams from my company are participating in the &lt;a href="https://www.biketowork.ch/"&gt;Bike to Work Challenge
2024&lt;/a&gt;. It&amp;rsquo;s what I do anyway (if I&amp;rsquo;m not working
from home) but maybe it helps build others some motivation to get on the
bicycle once more. Public transports in the city where I live are great but
I&amp;rsquo;ll always take the bike when I can. I also went on my first mountain bike
ride in a few months yesterday, good fun.&lt;/p&gt;
&lt;h2 id="json-blobs-and-referential-integrity"&gt;&lt;a class="toclink" href="#json-blobs-and-referential-integrity"&gt;JSON blobs and referential integrity&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/matthiask/django-json-schema-editor/"&gt;django-json-schema-editor&lt;/a&gt; has gained support for referencing Django models. Here&amp;rsquo;s an example schema excerpt:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;minItems&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;maxItems&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;items&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;article&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foreign_key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;options&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/admin/articles/article/?_popup=1&amp;amp;_to_field=id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The ID field is stringly typed; using an integer directly wouldn&amp;rsquo;t work because
the empty string isn&amp;rsquo;t a valid integer.&lt;/p&gt;
&lt;p&gt;The problem with referencing models in this way is that there&amp;rsquo;s no way to know
if the referenced object is still around or not, or even to protect it against
deletion. The bundled django-content-editor &lt;code&gt;JSONPlugin&lt;/code&gt; now supports
automatically generating a &lt;code&gt;ManyToManyField&lt;/code&gt; with a &lt;code&gt;through&lt;/code&gt; model which
protects articles from deletion as long as they are referenced from a
&lt;code&gt;JSONPlugin&lt;/code&gt; instance. The &lt;code&gt;register_reference&lt;/code&gt; line creates the mentioned
model with an &lt;code&gt;on_delete=models.PROTECT&lt;/code&gt; foreign key to articles and a
&lt;code&gt;post_save&lt;/code&gt; handler which updates said references.&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;django_json_schema_editor.plugins&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;JSONPluginBase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;register_reference&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;articles.models&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Article&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;JSONPlugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JSONPluginBase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;register_reference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JSONPlugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;articles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Article&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="releases-since-the-beginning-of-april"&gt;&lt;a class="toclink" href="#releases-since-the-beginning-of-april"&gt;Releases since the beginning of April&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.14&lt;/a&gt;: See above. Also, some styling work and a patch update to the vendorized json-editor.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 6.4.6&lt;/a&gt;: Many small stylistic fixes. The target indicator when dragging plugins is now also shown when plugins are collapsed. It&amp;rsquo;s now possible to directly drag a plugin to the end, and not just to the second to last position.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.3.4&lt;/a&gt;: Switched to the nh3 sanitizer because it&amp;rsquo;s faster and because ProseMirror never emits HTML which has to be cleaned up first. Stopped generating menu items for nodes and marks which aren&amp;rsquo;t in the schema. Added the possibility to reduce the functionality per editor instance. Small tweaks and fixes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.19&lt;/a&gt;: Added support for pre-filtering the tree (much more efficient when only querying a part of the tree). Added support for adding additional fields to the CTE so that you can collect values from ancestors for other fields than the default fields too.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 24.4.2&lt;/a&gt;: Added support for webp images. Fixed a few of the admin list filters to work with Django 5.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.14.3&lt;/a&gt;: Fixed the support for the &lt;code&gt;extra_context&lt;/code&gt; argument to our &lt;code&gt;changelist_view&lt;/code&gt; implementation.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 14)</title><link href="https://406.ch/writing/weeknotes-2024-week-14/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-14/</id><published>2024-04-06T12:00:00Z</published><updated>2024-04-06T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-14"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-14"&gt;Weeknotes (2024 week 14)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m having a bit of a slow week with the easter weekend and a wisdom tooth
extraction. I&amp;rsquo;m recovering quite quickly it seems and I&amp;rsquo;m glad about it.&lt;/p&gt;
&lt;p&gt;This weeknotes entry is short and quick. I&amp;rsquo;m trying to get back into the habit
of writing them after a mediocre start this year.&lt;/p&gt;
&lt;h2 id="20th-anniversary-celebration-of-young-greens-switzerland"&gt;&lt;a class="toclink" href="#20th-anniversary-celebration-of-young-greens-switzerland"&gt;20th Anniversary Celebration of Young Greens Switzerland&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have attended the celebration of Young Greens Switzerland. I have been a
founding member and have been active for close to ten years. A lot of time has
passed since then. It has been great to reminisce about old times with friends
and, more importantly, to see how the torch is carried on.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/blacknoise/"&gt;blacknoise 0.0.5&lt;/a&gt;: blacknoise is an
  ASGI app for static file serving inspired by
  &lt;a href="https://whitenoise.readthedocs.io/en/latest/"&gt;whitenoise&lt;/a&gt;. It only supports
  a very limited subset of whitenoise&amp;rsquo;s functionality, but it supports async.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.4.1&lt;/a&gt;: The lxml
  library moved the HTML cleaner into its own package,
  &lt;a href="https://pypi.org/project/lxml-html-clean/"&gt;lxml-html-clean&lt;/a&gt;; this release
  adds support for that. I didn&amp;rsquo;t know that the HTML cleaner is viewed as being
  problematic by the lxml maintainers. I&amp;rsquo;m having another look at
  &lt;a href="https://github.com/messense/nh3"&gt;nh3&lt;/a&gt; and will maybe switch html-sanitizer&amp;rsquo;s
  guts from lxml to nh3 in the future.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.18&lt;/a&gt;:
  django-tree-queries now supports ordering siblings by multiple fields and
  even allows descending orderings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.14.2&lt;/a&gt;: This
  release fixes the CKEditor 4 filebrowser popup when using Django 5 or better.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 11)</title><link href="https://406.ch/writing/weeknotes-2024-week-11/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-11/</id><published>2024-03-16T12:00:00Z</published><updated>2024-03-16T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-11"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-11"&gt;Weeknotes (2024 week 11)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="estimates"&gt;&lt;a class="toclink" href="#estimates"&gt;Estimates&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://jacobian.org/2024/mar/11/breaking-down-tasks/"&gt;Jacob wrote an excellent post on breaking down tasks&lt;/a&gt;. I did like the post a lot. Maybe I&amp;rsquo;ll write a longer reply later, but for now just this. &lt;a href="https://hachyderm.io/@jacob@jacobian.org/112081126379604868"&gt;There definitely are good reasons for the pushback against estimation&lt;/a&gt;, and it&amp;rsquo;s really not just that some people lack professionalism.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.14.1&lt;/a&gt;: Mini
  release containing a Turkish translation. It&amp;rsquo;s always nice if software is
  used.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.6&lt;/a&gt;: Fixed a bug where the
  move form wouldn&amp;rsquo;t use a potentially overridden &lt;code&gt;ModelAdmin.get_queryset&lt;/code&gt;
  method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/form-designer/"&gt;form-designer 0.24&lt;/a&gt;: Updated the
  package for django-recaptcha 4.0.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.3.1&lt;/a&gt;: Fixed an
  edge case sanitization bug (luckily without security implications).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor
  6.4.2&lt;/a&gt;:
  django-content-editor now again supports transitioning plugin fieldsets when
  opening &lt;em&gt;and&lt;/em&gt; closing thanks to CSS grid&amp;rsquo;s ability to animate the maximum
  height of an element. Also, the initialization in 6.4 was badly broken.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-prose-editor/"&gt;django-prose-editor 0.2&lt;/a&gt;: &lt;a href="https://406.ch/writing/django-prose-editor-prose-editing-component-for-the-django-admin/"&gt;See the announcement blog post from Wednesday&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 07)</title><link href="https://406.ch/writing/weeknotes-2024-week-07/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-07/</id><published>2024-02-16T12:00:00Z</published><updated>2024-02-16T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-07"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-07"&gt;Weeknotes (2024 week 07)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This is a short weeknotes entry which mainly contains a large list of releases. The reason for the large list is that I haven&amp;rsquo;t published a weeknotes entry in weeks.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/form-designer/"&gt;form-designer 0.23&lt;/a&gt;: Only small changes, mainly updated the package for current Django and Python versions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.4.6&lt;/a&gt;: A minor change: Swallow exceptions which happen during startup when clobbering the scripts data fails. As an aside: I find it funny that I have discovered the &lt;code&gt;.f3cc&lt;/code&gt; class in some cookie banner blocklists. It feels good to be recognized even if this maybe isn&amp;rsquo;t the nicest way, but it works for me since I actually do not like cookie banners either. At least feincms3-cookiecontrol doesn&amp;rsquo;t inject anything without users&amp;rsquo; consent, and doesn&amp;rsquo;t require a third party service to run.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django_simple_redirects/"&gt;django-simple-redirects 2.2.0&lt;/a&gt;: Minor release which adds a search field to the admin changelist. django-simple-redirects is a repackaged version of &lt;code&gt;django.contrib.redirects&lt;/code&gt; without the &lt;code&gt;django.contrib.sites&lt;/code&gt; dependency.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/speckenv/"&gt;speckenv 6.2&lt;/a&gt;: &lt;code&gt;django_cache_url&lt;/code&gt; now supports parsing redis configuration for a leader-replica redis installation with a read-write leader host and read-only replica hosts. I use the same configuration format as &lt;a href="https://github.com/epicserve/django-cache-url"&gt;django-cache-url&lt;/a&gt; does.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 4.3&lt;/a&gt;: I haven&amp;rsquo;t done much here, just some reviewing here and there. I enjoy the Djangonaut Space contributions a lot.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.14&lt;/a&gt;: I have removed the constraint which enforces unique names for subfolders. Enforcing the uniqueness does make sense, but it also makes bulk-updating the media library using serialized data more painful than it should be. It&amp;rsquo;s a clear case of worse is better for me. If people want to confuse themselves I&amp;rsquo;m not going to stop them (anymore, in this case) but it makes the rest of the code so much easier to write that it&amp;rsquo;s not even funny.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.3&lt;/a&gt;: This release contains a nice contribution which removes some whitespace which has been added by the sanitizer when merging adjacent tags of the same type, e.g. &lt;code&gt;&amp;lt;strong&amp;gt;abc&amp;lt;/strong&amp;gt;&amp;lt;strong&amp;gt;def&amp;lt;/strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-ckeditor/"&gt;django-ckeditor 6.7.1&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.11&lt;/a&gt;: Fixed a crash which happened when not providing the optional (!) configuration. Shit happens. I should really have a test suite for this package.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.5.2&lt;/a&gt;: Disables the CKEditor version check.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-content-editor/"&gt;django-content-editor 6.4&lt;/a&gt;: The first release since December 2022! Very stable software. The editor now restores the collapsed state of inlines and the scroll position when using &amp;ldquo;Save and continue editing&amp;rdquo;. This is especially useful if editing an object with many content blocks.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 03)</title><link href="https://406.ch/writing/weeknotes-2024-week-03/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-03/</id><published>2024-01-17T12:00:00Z</published><updated>2024-01-17T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-03"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-03"&gt;Weeknotes (2024 week 03)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="djangonaut-space"&gt;&lt;a class="toclink" href="#djangonaut-space"&gt;Djangonaut Space&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I wish all participants a good time and much success. I do not have anything to do with it really but I enjoy the idea a lot and maybe there will be a pull request or two to review.&lt;/p&gt;
&lt;h2 id="kubernetes"&gt;&lt;a class="toclink" href="#kubernetes"&gt;Kubernetes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After years and years of hosting all sites on VPS I have finally reached the point where the old setup is more annoying to work with than switching to a new one. I have searched long for a solution which wasn&amp;rsquo;t as limited as some PaaS and as complex as going full Kubernetes, and where I can still delegate the responsibility of actually keeping things up and running to other people. In the end I have now accepted that such a thing doesn&amp;rsquo;t exist; either you have the limitations of a ready made solution, the limitation of having to open many many support tickets or the problem of having to learn Kubernetes (or something similar) with its extremely steep learning curve.&lt;/p&gt;
&lt;p&gt;After spending days with it I&amp;rsquo;m slowly getting to the point where setting up local development environments and deploying changes is fun again. I&amp;rsquo;m using the GitOps paradigm; while I&amp;rsquo;m still building and uploading Docker (podman) images from the local development environment everything else is automated and goes through a Git based process. That&amp;rsquo;s much nicer than clicking around in some interface or copy pasting obscure commands into the console.&lt;/p&gt;
&lt;p&gt;The biggest problem I encountered was (perhaps unsurprisingly) managing secrets as a team. It seems to me that while &lt;a href="https://github.com/bitnami-labs/sealed-secrets/"&gt;sealed secrets&lt;/a&gt; work great as an individual developer they don&amp;rsquo;t really offer straightforward solutions to avoid different people overwriting and resetting each others secrets when updating them. I&amp;rsquo;m a happy user of the external secrets operator and using some cloud service to actually store those secrets.&lt;/p&gt;
&lt;p&gt;I have started using &lt;a href="https://github.com/emmett-framework/granian/"&gt;granian&lt;/a&gt; in production. I like the idea of a Rust-based ASGI/WSGI server. Nothing mission critical yet. My idea is to build confidence in the software stack.&lt;/p&gt;
&lt;h2 id="compulsory-social-measures"&gt;&lt;a class="toclink" href="#compulsory-social-measures"&gt;Compulsory social measures&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The more I learn about how Switzerland treats its citizens the more I wonder about the ways in which humans can mistreat other humans in a so called civilized and peaceful society.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not exactly a new topic for me, but working on platforms which help remember and which help introducing people to the history certainly causes a heightened awareness for issues such as these.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bj.admin.ch/bj/en/home/gesellschaft/fszm.html"&gt;More on this&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.20.2&lt;/a&gt;: It
  previously wasn&amp;rsquo;t possible to filter the list of sites to only show those
  sites which do &lt;em&gt;not&lt;/em&gt; have a default language. This has been fixed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.10&lt;/a&gt;: It&amp;rsquo;s now actually possible to use the JSON editor outside inlines! That was a fun bug&amp;hellip; not. Apart from the mentioned bug this new release mostly contains fixes to the styles. We&amp;rsquo;re slowly getting there.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-mptt/"&gt;django-mptt 0.16&lt;/a&gt;: I didn&amp;rsquo;t do anything except for the changelog and the release. That&amp;rsquo;s alright. The release contains a few minor fixes.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2024 week 01)</title><link href="https://406.ch/writing/weeknotes-2024-week-01/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2024-week-01/</id><published>2024-01-03T12:00:00Z</published><updated>2024-01-03T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2024-week-01"&gt;&lt;a class="toclink" href="#weeknotes-2024-week-01"&gt;Weeknotes (2024 week 01)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;First weeknotes post for 2024! Happy new year!&lt;/p&gt;
&lt;h2 id="looking-back-on-2023"&gt;&lt;a class="toclink" href="#looking-back-on-2023"&gt;Looking back on 2023&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="writing"&gt;&lt;a class="toclink" href="#writing"&gt;Writing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I have published almost 40 posts last year. That&amp;rsquo;s almost as many posts as I published in the time period from 2014 to 2023. &lt;a href="https://jacobian.org/2021/mar/9/coworking-to-write-more/"&gt;Coworking to write more&lt;/a&gt; does work.&lt;/p&gt;
&lt;p&gt;I already had a quite active blog from 2005 to 2008 with a few posts after that; everything before 2014 was in german and mainly concerned with green politics and climate change. I&amp;rsquo;m still very interested in these topics but I don&amp;rsquo;t feel as if I have much to add to the conversation, even though it&amp;rsquo;s the more important issue.&lt;/p&gt;
&lt;h3 id="open-source"&gt;&lt;a class="toclink" href="#open-source"&gt;Open Source&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Not much changed here. I enjoy basically everything I do in open source land, and co-maintaining the Django Debug Toolbar with Tim is a joy.&lt;/p&gt;
&lt;p&gt;I still wish that some of my projects had more impact in Django land, especially those who augment the Django administration interface to be a lightweight CMS which requires very little maintenance and work in the long run. I think it&amp;rsquo;s great that one of the core components, &lt;a href="https://pypi.org/project/django-content-editor/#history"&gt;django-content-editor&lt;/a&gt;, hasn&amp;rsquo;t required a release in more than one year. It doesn&amp;rsquo;t have to be expanded because it just works. It would be great if there was a good way to &lt;a href="https://406.ch/writing/managing-complexity-and-technical-debt-by-releasing-open-source-software/"&gt;distinguish&lt;/a&gt; between software which basically doesn&amp;rsquo;t require any updates and software which is abandoned.&lt;/p&gt;
&lt;p&gt;The only project which doesn&amp;rsquo;t bring me much joy is django-mptt. Most people accept that there are no guarantees, but some people are just rude in the way in which they expect others to do the work. The first reaction was to return the blow and I&amp;rsquo;m glad that I didn&amp;rsquo;t give in to the temptation to do that. It&amp;rsquo;s basically never worth it to do that in writing.&lt;/p&gt;
&lt;h3 id="family"&gt;&lt;a class="toclink" href="#family"&gt;Family&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We had a good 2023 together and I&amp;rsquo;m very much looking forward to a just as good 2024.&lt;/p&gt;
&lt;h2 id="plans-for-2024"&gt;&lt;a class="toclink" href="#plans-for-2024"&gt;Plans for 2024&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have bought a ticket for the &lt;a href="https://2024.djangocon.eu/"&gt;DjangoCon Europe 2024&lt;/a&gt; in Spain and I&amp;rsquo;m very much looking forward to that.&lt;/p&gt;
&lt;p&gt;Maybe we&amp;rsquo;ll visit a music festival again this summer. After listening to a lot of metal music in the last ten or more years I rediscovered the dark side of D&amp;rsquo;n&amp;rsquo;B. Good times.&lt;/p&gt;
&lt;h2 id="advent-of-code"&gt;&lt;a class="toclink" href="#advent-of-code"&gt;Advent of Code&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have finished the Advent of Code with some help from the Subreddit. Almost all of the puzzles were fun to think about. I didn&amp;rsquo;t have fun solving each and everyone of them, especially not the second part of a few of the later days. I feel good checking out solutions from other people in the subreddit, and maybe adding newly gained ideas to my code or even running someone else&amp;rsquo;s code 1:1 on my data after studying the algorithms used and hopefully learning something.&lt;/p&gt;
&lt;p&gt;I had a good time and enjoyed shutting down the computer after that.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 23.12&lt;/a&gt;: A few minor changes to
  the thumbnailing code. It&amp;rsquo;s always nice to hear from people who are still
  using this project.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 50)</title><link href="https://406.ch/writing/weeknotes-2023-week-50/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-50/</id><published>2023-12-15T12:00:00Z</published><updated>2023-12-15T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-50"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-50"&gt;Weeknotes (2023 week 50)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="django-imagefield"&gt;&lt;a class="toclink" href="#django-imagefield"&gt;django-imagefield&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The path building scheme used by &lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield&lt;/a&gt; has proven problematic: It&amp;rsquo;s too likely that processed images will have the same path.&lt;/p&gt;
&lt;p&gt;I have changed the strategy used for generating paths to use more data from the
source; it&amp;rsquo;s now possible (and recommended!) to set &lt;code&gt;IMAGEFIELD_BIN_DEPTH&lt;/code&gt; to
a value greater than 1; 2 or 3 should be sufficient. The default value is 1
which corresponds to the old default so that the change won&amp;rsquo;t be backwards
incompatible. However, you&amp;rsquo;ll always get a deprecation warning if you don&amp;rsquo;t set
a bigger value yourself. The default will probably change in the future.&lt;/p&gt;
&lt;h2 id="advent-of-code"&gt;&lt;a class="toclink" href="#advent-of-code"&gt;Advent of Code&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have always felt a bit as an imposter because I do not have any formal CS
education; not so much in the last few years but certainly earlier in my
career. I have enjoyed participating in the &lt;a href="https://adventofcode.com/"&gt;Advent of Code
2022&lt;/a&gt; a lot and I have definitely learned to know
when to use and how to use a few algorithms I didn&amp;rsquo;t even know before. I&amp;rsquo;m
again working through the puzzles in my own pace and have managed to solve
almost all of them up to today this year. There still are some puzzles where I
don&amp;rsquo;t even know how to start the second part 😅.&lt;/p&gt;
&lt;h2 id="hosting"&gt;&lt;a class="toclink" href="#hosting"&gt;Hosting&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;re still hosting most sites on virtualized servers, without any containers
or any of the new stuff. I&amp;rsquo;m finally reaching the point where the downsides of
this approach start to drag new projects down and the workarounds start looking
worse than maybe switching to containers or even Kubernetes. Wish me luck, I&amp;rsquo;m
more confused than I&amp;rsquo;ve been in years.&lt;/p&gt;
&lt;h2 id="health"&gt;&lt;a class="toclink" href="#health"&gt;Health&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To absolutely nobody&amp;rsquo;s surprise the family and myself have continued to be sick
in the last two weeks. Nothing really bad happened, so we&amp;rsquo;re still lucky.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s unfortunately no way to solve a societal problem individually, so that
will probably continue to be our life for now.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.18&lt;/a&gt;: See
  above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.20.1&lt;/a&gt;: Added
  additional validation (cleaning) checks. Showing error messages is
  preferrable to crashing with &lt;code&gt;IntegrityError&lt;/code&gt; exceptions after all.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-js-asset/"&gt;django-js-asset 2.2.0&lt;/a&gt;: Hatchling
  seems to dislike it if the project name and the Python module name do not
  match. I actually like &lt;code&gt;django-js-asset&lt;/code&gt;&amp;rsquo;s Python module to be &lt;code&gt;js_asset&lt;/code&gt;
  but I&amp;rsquo;m beginning to rethink this decision.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-json-schema-editor/"&gt;django-json-schema-editor 0.0.4&lt;/a&gt;: See &lt;a href="https://406.ch/writing/django-json-schema-editor/"&gt;the post from this week&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 48)</title><link href="https://406.ch/writing/weeknotes-2023-week-48/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-48/</id><published>2023-11-30T12:00:00Z</published><updated>2023-11-30T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-48"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-48"&gt;Weeknotes (2023 week 48)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;A few weeks have passed since the last update. The whole family was repeatedly
sick with different viruses etc&amp;hellip; I hope that the worst is over now. Who
knows.&lt;/p&gt;
&lt;h2 id="12-factor-django-storage-configuration"&gt;&lt;a class="toclink" href="#12-factor-django-storage-configuration"&gt;12-factor Django storage configuration&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I should maybe write a longer and separate post about this, but &lt;a href="https://pypi.org/project/speckenv/"&gt;speckenv&lt;/a&gt; has gained support for the Django &lt;code&gt;STORAGES&lt;/code&gt; setting. No documentation yet, but it supports two storage backends for now, the file system storage and &lt;a href="https://github.com/etianen/django-s3-storage/"&gt;django-s3-storage&lt;/a&gt;, my go-to library for S3-compatible services.&lt;/p&gt;
&lt;p&gt;Using it looks something like this:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;speckenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;speckenv_django&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;django_storage_url&lt;/span&gt;

&lt;span class="n"&gt;STORAGES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;django_storage_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;STORAGE_URL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;file:./media/?base_url=/media/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;base_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;staticfiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BACKEND&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;django.contrib.staticfiles.storage.ManifestStaticFilesStorage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, if you want to use S3 you can put something like this in your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;STORAGE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nl"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="nv"&gt;@bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;central&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="n"&gt;amazonaws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or maybe something like this, if you want to serve media files without authentication:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;STORAGE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nl"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="nv"&gt;@bucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;central&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="n"&gt;amazonaws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="n"&gt;aws_s3_public_auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;aws_s3_max_age_seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;31536000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/speckenv/"&gt;speckenv 6.1.1&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-meta/"&gt;feincms3-meta 4.6&lt;/a&gt;: York has contributed support for emitting structured data records. Looks nice. No documentation yet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-tree-queries/"&gt;django-tree-queries 0.16.1&lt;/a&gt;: &lt;code&gt;.values()&lt;/code&gt; and &lt;code&gt;.values_list()&lt;/code&gt; queries are now handled better and more consistently than before.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 44)</title><link href="https://406.ch/writing/weeknotes-2023-week-44/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-44/</id><published>2023-11-02T12:00:00Z</published><updated>2023-11-02T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-44"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-44"&gt;Weeknotes (2023 week 44)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="unmaintained-but-maintained-packages"&gt;&lt;a class="toclink" href="#unmaintained-but-maintained-packages"&gt;Unmaintained but maintained packages&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s a discussion going on in the &lt;a href="https://github.com/django-mptt/django-mptt/issues/833"&gt;django-mptt issue tracker&lt;/a&gt; about the maintenance state of django-mptt. &lt;a href="https://github.com/django-mptt/django-mptt/commit/6f6c1c485f3adc1d579f8d22e0279ce1d52334f6"&gt;I have marked the project as unmaintained in March 2021&lt;/a&gt; and haven&amp;rsquo;t regretted this decision at all. I haven&amp;rsquo;t had to fix &lt;a href="https://github.com/django-mptt/django-mptt/labels/Broken%20Tree"&gt;inconsistencies in the tree structure&lt;/a&gt; once since switching to &lt;a href="https://406.ch/writing/django-tree-queries/"&gt;django-tree-queries&lt;/a&gt;. And if that wasn&amp;rsquo;t enough, I get little but only warm and thankful feedback for the latter, so that&amp;rsquo;s extra nice.&lt;/p&gt;
&lt;p&gt;Despite marking django-mptt as unmaintained I seem to be doing a little bit of maintenance still. I&amp;rsquo;m still using it in old paid projects and so the things I do to make the package work for me is paid work. I&amp;rsquo;m not personally invested in the package anymore, so I&amp;rsquo;m able to tell people that there are absolutely no guarantees about the maintenance, and that feels good.&lt;/p&gt;
&lt;h2 id="read-the-docs"&gt;&lt;a class="toclink" href="#read-the-docs"&gt;Read the Docs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I do understand why the &lt;code&gt;.readthedocs.yaml&lt;/code&gt; file is now necessary. I wish that I wouldn&amp;rsquo;t have to do all the busywork of adding one to projects. I have just resubscribed to the Read the Docs Gold Membership which probably has expired at some point in the past. Read the Docs is excellent and everybody who can should support them.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.5&lt;/a&gt;, &lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.20&lt;/a&gt; and &lt;a href="https://github.com/feincms/feincms3-language-sites"&gt;feincms3-language-sites 0.3&lt;/a&gt;: Fixed the check which only allows adding an application through the CMS to the page tree (yes, that&amp;rsquo;s right) once; feincms3 worked fine, feincms3-language-sites by accident but feincms3-sites didn&amp;rsquo;t.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/towel/"&gt;towel 0.31&lt;/a&gt;: Towel is one of my oldest packages which is still being used in real-world projects. Towel is a tool for building CRUD-type applications and is designed to keep you DRY while doing that. The project has been heavily inspired by a Django-based agency software I built many years back. The package even has &lt;a href="https://towel.readthedocs.io/en/latest/"&gt;docs&lt;/a&gt;! I&amp;rsquo;m still quite proud of the mostly transparent support for multitenancy, but apart from that I haven&amp;rsquo;t used it in many new projects.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 43)</title><link href="https://406.ch/writing/weeknotes-2023-week-43/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-43/</id><published>2023-10-27T12:00:00Z</published><updated>2023-10-27T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-43"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-43"&gt;Weeknotes (2023 week 43)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="switching-to-ruff-format"&gt;&lt;a class="toclink" href="#switching-to-ruff-format"&gt;Switching to ruff format&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/astral-sh/ruff/releases/tag/v0.1.2"&gt;ruff v0.1.2&lt;/a&gt; includes
the beta version of the ruff formatter. It formats the code almost the same way
as black, but much much faster. I have started switching projects I&amp;rsquo;m working
on and the experience has been nothing but great.&lt;/p&gt;
&lt;h2 id="100-test-coverage"&gt;&lt;a class="toclink" href="#100-test-coverage"&gt;100% test coverage&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have again fixed a bad bug in code which had 100% test coverage. It&amp;rsquo;s not
news that 100% test coverage isn&amp;rsquo;t a recipe for bug-free code, and it&amp;rsquo;s
probably not even worth optimizing for that metric in code. It&amp;rsquo;s nothing more
but a proxy for what you should really measure. Nevertheless it certainly does
feel good to achieve high coverage values!&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;No releases at all.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 42)</title><link href="https://406.ch/writing/weeknotes-2023-week-42/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-42/</id><published>2023-10-18T12:00:00Z</published><updated>2023-10-18T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-42"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-42"&gt;Weeknotes (2023 week 42)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="vacation-in-italy"&gt;&lt;a class="toclink" href="#vacation-in-italy"&gt;Vacation in Italy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have spent a wonderful family week in Italy. The voyage by train was very
comfortable and we had a great time there. I have lived close to lakes all my
life but the sea is always something else. Now I enjoy the cold temperatures of
fall.&lt;/p&gt;
&lt;h2 id="going-back-forward-to-gitjournal"&gt;&lt;a class="toclink" href="#going-back-forward-to-gitjournal"&gt;Going back (forward) to GitJournal&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have tried several note taking apps but I&amp;rsquo;m now back using
&lt;a href="https://gitjournal.io/"&gt;GitJournal&lt;/a&gt; with a Git repository filled with Markdown
notes. It works well enough. I just wish that there was a way to make notes
more distinguishable and I wish that the editor was more forgiving when
encountering badly formatted checklists.&lt;/p&gt;
&lt;h2 id="analog-blogging"&gt;&lt;a class="toclink" href="#analog-blogging"&gt;Analog blogging&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have long wanted to write about &lt;a href="https://406.ch/writing/why-we-switched-from-slack-to-discord-at-work/"&gt;our switch from Slack to
Discord&lt;/a&gt;.
I have started to write this post with pen and paper. I find that I think
better when using pen and paper than when using the computer keyboard. One
factor is certainly that the computer offers more distractions, but I suspect
that another, more important factor is that as a fast typist the fingers and
the thinking are always getting out of step, and this happens less when using a
slower method of writing. This actually isn&amp;rsquo;t an idea I had myself, but I don&amp;rsquo;t
remember where I got it from.&lt;/p&gt;
&lt;h2 id="zero-based-versioning-good-or-bad"&gt;&lt;a class="toclink" href="#zero-based-versioning-good-or-bad"&gt;Zero-based versioning: Good or bad?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I discovered &lt;a href="https://0ver.org/"&gt;ZeroVer&lt;/a&gt; sometime in the last few days. I have
many many Django packages with zero-based versions. Some of them have been used
in production for years now. I sometimes wonder if staying with &lt;code&gt;0.&lt;/code&gt; is
unprofessional and I should just release 1.0 and be done with it or if it
doesn&amp;rsquo;t really matter at all.&lt;/p&gt;
&lt;p&gt;If I evaluate software packages more often than not I don&amp;rsquo;t look at the version
number or the version numbering scheme (except when a package is still using
&lt;code&gt;0.0.&lt;/code&gt;) when deciding whether to rely on it or not. The documentation and the
code itself are much more important to me.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I haven&amp;rsquo;t uploaded any releases in the last 14 days. That&amp;rsquo;s good: I&amp;rsquo;m one of
those people who have made their passion their job (which is great) but that
sometimes makes it hard to not work at all since I can always tell myself that
I&amp;rsquo;m not working, that it&amp;rsquo;s just a hobby.&lt;/p&gt;</summary></entry><entry><title>Weeknotes (2023 week 40)</title><link href="https://406.ch/writing/weeknotes-2023-week-40/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-40/</id><published>2023-10-04T12:00:00Z</published><updated>2023-10-04T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-40"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-40"&gt;Weeknotes (2023 week 40)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="more-work-on-hosting-several-websites-from-a-single-django-application-server-using-feincms3-sites"&gt;&lt;a class="toclink" href="#more-work-on-hosting-several-websites-from-a-single-django-application-server-using-feincms3-sites"&gt;More work on hosting several websites from a single Django application server using feincms3-sites&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have mentioned feincms3-sites last week in my last weeknotes entry; I have
again given this package a lot of attention in the last days, so another update
is in order.&lt;/p&gt;
&lt;p&gt;It is now possible to override the list of languages available on each site.
That&amp;rsquo;s especially useful for an upcoming campaign site where the umbrella
group&amp;rsquo;s site is available in three languages, but (most?) individual group
sites (hosted on subdomains) will only have a subset of languages. Since I live
in a country with four national languages (english isn&amp;rsquo;t one of them, but is
spoken by many!) supporting more than one language, or even many languages is
totally commonplace. It&amp;rsquo;s great that Django has good support for
internationalization. For the sake of an example, I have the following sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;example.com&lt;/code&gt;: The default. The host has to match exactly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subdomain.example.com&lt;/code&gt;: One individual group&amp;rsquo;s site. The host has to match the regex &lt;code&gt;^subdomain\.&lt;/code&gt; (sorry, I actually do like regexes).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="overriding-configured-hosts-for-local-development"&gt;&lt;a class="toclink" href="#overriding-configured-hosts-for-local-development"&gt;Overriding configured hosts for local development&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One thing which always annoyed me when using &lt;code&gt;django.contrib.sites&lt;/code&gt; was that
&amp;ldquo;just&amp;rdquo; pulling the database from production to the local development
environment always produced links pointing back to the remote host instead of
working locally (when producing absolute URLs). This problem was shared by
feincms3-sites as well. I have now found a very ugly but perfectly workable
solution: Overwrite &lt;code&gt;Site.get_host()&lt;/code&gt; locally:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;domain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;example.com&amp;quot;&lt;/span&gt;  &lt;span class="c1"&gt;# Or whatever&lt;/span&gt;
    &lt;span class="n"&gt;_get_host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost:8000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;FEINCMS3_SITES_SITE_GET_HOST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_get_host&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This works especially well when using &lt;code&gt;example.com&lt;/code&gt; and maybe subdomains of
&lt;code&gt;example.com&lt;/code&gt;: All absolute links will point to &lt;code&gt;localhost:8000&lt;/code&gt; or
&lt;code&gt;subdomain.localhost:8000&lt;/code&gt;. Since &lt;code&gt;*.localhost&lt;/code&gt; always resolves to the local IP
the browser knows where it should connect to, and since
&lt;code&gt;subdomain.localhost:8000&lt;/code&gt; also matches the &lt;code&gt;^subdomain\.&lt;/code&gt; regex mentioned
above, the site selection logic works as well.&lt;/p&gt;
&lt;p&gt;Of course if you have more domains, not just subdomains, you could adapt the
&lt;code&gt;get_host&lt;/code&gt; override and the relevant regexes to those use cases.&lt;/p&gt;
&lt;h3 id="closing-words"&gt;&lt;a class="toclink" href="#closing-words"&gt;Closing words&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;re at 100% code coverage now when running the test suite. That&amp;rsquo;s really nice.&lt;/p&gt;
&lt;h2 id="logging-into-the-django-admin-using-your-google-account"&gt;&lt;a class="toclink" href="#logging-into-the-django-admin-using-your-google-account"&gt;Logging into the Django admin using your Google account&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This functionality has long been provided by
&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-admin-sso&lt;/a&gt;; however, as
mentioned a long time ago this package still uses a deprecated OAuth2 library.
&lt;a href="https://github.com/matthiask/django-authlib/"&gt;django-authlib&lt;/a&gt; supports using a
Google account to authenticate with the Django admin since 2017. I have now
fixed a small problem with it: If you are logged into a single Google account,
and this account&amp;rsquo;s email address doesn&amp;rsquo;t match the configured admin login rule,
you were out of luck: There was no way to add another account at that time
because the library didn&amp;rsquo;t request the account selection. That has changed now,
if the first login attempt doesn&amp;rsquo;t work, it now explicitly tells Google to let
the user select their Google account. A small quality of life improvement for
those using more than one Google account (voluntarily or not).&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.4.3&lt;/a&gt;: Polished the CKEditor integration a little bit. Re-enabled the source button now that we&amp;rsquo;re back to using the classic iframe-based editor again.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.19.3&lt;/a&gt;: See above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.16.4&lt;/a&gt;: See above.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 39)</title><link href="https://406.ch/writing/weeknotes-2023-week-39/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-39/</id><published>2023-09-28T12:00:00Z</published><updated>2023-09-28T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-39"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-39"&gt;Weeknotes (2023 week 39)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Again a few weeks have passed since the last weeknotes entry :-)&lt;/p&gt;
&lt;h2 id="moving-feincms3-repositories-into-the-feincms-organization"&gt;&lt;a class="toclink" href="#moving-feincms3-repositories-into-the-feincms-organization"&gt;Moving feincms3 repositories into the feincms organization&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/feincms"&gt;feincms&lt;/a&gt; GitHub organization has seen more
active days when FeinCMS 1.x was still actively developed. Since my interest
has moved to feincms3 some years ago I haven&amp;rsquo;t kept the organization up to
date. That has changed this week, and I have moved most feincms3-related
repositories into the organization.&lt;/p&gt;
&lt;p&gt;This move doesn&amp;rsquo;t change much though, but it certainly feels more official now.&lt;/p&gt;
&lt;h2 id="adding-scheduled-tests"&gt;&lt;a class="toclink" href="#adding-scheduled-tests"&gt;Adding scheduled tests&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have started using the cronjob schedule feature of GitHub actions to ensure that tests run at least once a month in a few important projects. I want to get notified of changes in Django@main affecting my packages not only when actively working on them. I try to keep up with Django@main in all packages I maintain.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.18.2&lt;/a&gt;: Many releases in the last weeks. Stopped using permanent redirects in DEBUG mode. Avoid migrations when Django adds more languages. Added utilities which allow restricting model relations to objects in the same site (trickier than it sounds). Added utilities for building full URLs to other sites without taxing the database as much.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-language-sites/"&gt;feincms3-language-sites 0.2.0&lt;/a&gt;: No biggie. No permanent redirects in DEBUG mode anymore.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.4.5&lt;/a&gt;: Reduced the byte size of the CSS and JavaScript some more. Added spanish translations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.16.3&lt;/a&gt;: I have published a post last week describing the new &lt;a href="https://406.ch/writing/keep-content-managers-admin-access-up-to-date-with-role-based-permissions/"&gt;role-based permissions feature&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-imagefield/"&gt;django-imagefield 0.17&lt;/a&gt;: The &lt;code&gt;process_imagefields&lt;/code&gt; management command now allows specifying globs. If you wanted to prerender all imagefields in the pages app you can use &lt;code&gt;./manage.py process_imagefields pages.*&lt;/code&gt; now instead of listing all image fields&amp;rsquo; labels explicitly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.4.1&lt;/a&gt;: I&amp;rsquo;m enormously unhappy but I had to go back to the classic CKEditor instead of using the inline editor. The latter looked much nicer but overriding the Django admin CSS was very very painful. Also, I can totally understand why CKEditor 5 is completely different and why CKEditor 4 is only maintained in a paid LTS plan. It still is making me look for alternatives.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-mptt/"&gt;django-mptt 0.15&lt;/a&gt;: I unfortunately am still using this despite the fact that I have marked it as officially unmaintained since march 2021. I did a mediocre job of making the library run on Django@main again. Parts of the library do not work, but since I&amp;rsquo;m not using them I don&amp;rsquo;t care too much. I&amp;rsquo;m still wondering if someone wants to take over maintenance of the library since it still seems to be actively used in projects of others as well. When I don&amp;rsquo;t have to use django-mptt I&amp;rsquo;m still really happy with &lt;a href="https://406.ch/writing/django-tree-queries/"&gt;django-tree-queries&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/form-designer/"&gt;form-designer 0.22&lt;/a&gt;: This is probably my oldest actively developed project these days. 13 years! (Except for django-content-editor of course.) I have modernized the package, switched to hatchling and put out a new release.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 33)</title><link href="https://406.ch/writing/weeknotes-2023-week-33/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-33/</id><published>2023-08-20T12:00:00Z</published><updated>2023-08-20T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-33"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-33"&gt;Weeknotes (2023 week 33)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m not sure if I should call these posts weeknotes when I see the posting schedule, but oh well. Keep expectations up but also practice forgiveness when not meeting them, it&amp;rsquo;s fine really.&lt;/p&gt;
&lt;h2 id="py_modules-using-hatchling"&gt;&lt;a class="toclink" href="#py_modules-using-hatchling"&gt;&lt;code&gt;py_modules&lt;/code&gt; using hatchling&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I converted &lt;a href="https://github.com/matthiask/speckenv/"&gt;speckenv&lt;/a&gt; and &lt;a href="https://github.com/matthiask/django-sitemaps/"&gt;django-sitemaps&lt;/a&gt; after finding the following very helpful post on packaging projects consisting of Python modules without any packages: &lt;a href="https://www.stefaanlippens.net/single-python-module-packaging-hatch.html"&gt;Packaging of single Python module projects with Hatch/Hatchling&lt;/a&gt;. It&amp;rsquo;s very easy in hindsight, but that&amp;rsquo;s basically always the case.&lt;/p&gt;
&lt;p&gt;The relevant part is including the files in the build:&lt;/p&gt;
&lt;div class="chl"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[tool.hatch.build]&lt;/span&gt;
&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;speckenv.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;speckenv_django.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;speckenv_django_patch.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s all.&lt;/p&gt;
&lt;h2 id="django-debug-toolbar-and-tracing-the-cause-of-db-queries-in-an-async-world"&gt;&lt;a class="toclink" href="#django-debug-toolbar-and-tracing-the-cause-of-db-queries-in-an-async-world"&gt;django-debug-toolbar and tracing the cause of DB queries in an async world&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have also started investigating what would have to be changed in django-debug-toolbar to make it fully support async Django. We currently patch Django&amp;rsquo;s database cursors per thread, which works fine in sync Django land to attribute SQL queries to a particular request/response cycle.&lt;/p&gt;
&lt;p&gt;Since async Django executes DB queries in a thread pool executor and the rest of the work happens inside awaitables (async land) I don&amp;rsquo;t immediately see a way how we could do the same thing. It doesn&amp;rsquo;t seem possible to find out which task spawned another task (without dropping down to C?) but maybe there&amp;rsquo;s something I&amp;rsquo;m overlooking. I hope that someone smarter than me finds a way :-) or that I find the time and motivation to either find a way using Python or using C/Rust/whatever.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-sites/"&gt;feincms3-sites 0.16&lt;/a&gt;: I added basic support for &lt;code&gt;i18n_patterns&lt;/code&gt; when using feincms3-sites with its &lt;code&gt;default_language_middleware&lt;/code&gt; (which allows setting a default language per site in case there is no other mechanism overriding it, such as &lt;code&gt;i18n_patterns&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.4.1&lt;/a&gt;: The privacy policy is now linked inside the banner text instead of adding a link after the text. Looks much nicer.&lt;/li&gt;
&lt;li&gt;&lt;a href="lhttps://pypi.org/project/speckenv/"&gt;speckenv 5.0&lt;/a&gt;: Finally released changes made a long time ago which make one edge case when parsing settings less surprising.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;django-debug-toolbar 4.2&lt;/a&gt;: I didn&amp;rsquo;t do much work here again, mostly code reviews, some changes to the ruff configuration and general polishing. I also didn&amp;rsquo;t do the release itself, that was handled by Tim. Thanks!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/FeinCMS/"&gt;FeinCMS 23.8&lt;/a&gt;: Fixes for Pillow 10, and some feincms3 / django-content-editor interoperability improvements which make it easier to reuse plugins/content types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.1&lt;/a&gt;: Some basic support for using the apps middleware with async Django. Not documented yet and not deployed anywhere but it basically works. Some documentation edits and changes to the inline CKEditor styling because of the recent changes to Django admin&amp;rsquo;s CSS.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 30)</title><link href="https://406.ch/writing/weeknotes-2023-week-30/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-30/</id><published>2023-07-28T12:00:00Z</published><updated>2023-07-28T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes"&gt;&lt;a class="toclink" href="#weeknotes"&gt;Weeknotes&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="async-django"&gt;&lt;a class="toclink" href="#async-django"&gt;Async Django&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have used &lt;a href="https://channels.readthedocs.io/"&gt;Django Channels&lt;/a&gt; successfully in a few projects from 2017 to 2019. A few months back I have worked with &lt;a href="https://www.starlette.io/"&gt;Starlette&lt;/a&gt;. And now I have finally started digging into using Django itself with an ASGI server, and not just for one or two views but also including the middleware stack etc since I also need authentication, not just an endpoint forwarding requests to a remote server. I have looked at &lt;a href="https://github.com/emmett-framework/granian"&gt;Granian&lt;/a&gt;, an RSGI/ASGI server written in Rust. But for now I am using &lt;a href="https://www.uvicorn.org/"&gt;uvicorn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Django truly has come a long way but there&amp;rsquo;s much left to do. Django 5.0 is looking great already, but 4.2 misses many pieces still. I am really really glad Django wants to stay backwards compatible but I wish I could wave a magic wand and upgrade everything to async. Adding &lt;code&gt;a&lt;/code&gt; prefixes everywhere for the async version is certainly a good compromise and probably the way to go but it&amp;rsquo;s just not that nice.&lt;/p&gt;
&lt;p&gt;I have been playing around with making &lt;a href="https://feincms3.readthedocs.io/"&gt;feincms3&lt;/a&gt;&amp;rsquo;s applications middleware async compatible because I want the full middleware stack to be async. The code is already released but undocumented and not even mentioned in the changelog. So, feel free to play around with it but it&amp;rsquo;s not supposed to be stable or supported yet.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3/"&gt;feincms3 4.1&lt;/a&gt;: Switched to hatchling and ruff. Updated the feincms3-sites docs. Some async updates mentioned above. A Django 4.2 admin CSS update for the inline CKEditor.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-forms/"&gt;feincms3-forms 0.4&lt;/a&gt;: Switched to hatchling and ruff. Started defining default icons for the form fields &lt;a href="https://django-content-editor.readthedocs.io/"&gt;content editor&lt;/a&gt; plugins.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-ckeditor/"&gt;django-ckeditor 6.7&lt;/a&gt;: I&amp;rsquo;m still maintaining the CKEditor 4 integration for Django even though CKEditor 4 itself isn&amp;rsquo;t supported anymore. Minor updates to the editor itself and Pillow compatibility updates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-cookiecontrol/"&gt;feincms3-cookiecontrol 1.3.2&lt;/a&gt;: The cookie banner doesn&amp;rsquo;t generate an empty &lt;code&gt;&amp;lt;div class="f3cc"&amp;gt;&lt;/code&gt; element anymore if there&amp;rsquo;s nothing to add inside (e.g. if the user only accepted necessary cookies).&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 29)</title><link href="https://406.ch/writing/weeknotes-2023-week-29/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-29/</id><published>2023-07-21T12:00:00Z</published><updated>2023-07-21T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes"&gt;&lt;a class="toclink" href="#weeknotes"&gt;Weeknotes&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have mainly done work in private projects this week. Not much to talk about.
Except for the ZIP file &lt;code&gt;content-type&lt;/code&gt; bug which was interesting enough to
justify &lt;a href="https://406.ch/writing/serving-zip-files-using-django/"&gt;its own blog post&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-cabinet/"&gt;django-cabinet 0.13&lt;/a&gt;: I converted
  the package to use ruff, hatchling; started running CI tests using Python
  3.11. The internals of the Django admin&amp;rsquo;s filters have changed to allow
  multi-valued filters, this has required some changes to the implementation of
  the folder filter. I opted to using a relatively ugly &lt;code&gt;django.VERSION&lt;/code&gt;
  hack; but that&amp;rsquo;s not too bad since such branches will be automatically
  removed by the awesome
  &lt;a href="https://github.com/adamchainz/django-upgrade"&gt;django-upgrade&lt;/a&gt;. I would have
  tried finding other ways in the past but now that old compatibility code can
  be removed by a single run of &lt;code&gt;django-upgrade&lt;/code&gt; (respectively
  &lt;code&gt;pre-commit&lt;/code&gt;) there really is no point to doing it in a different way.&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Weeknotes (2023 week 28)</title><link href="https://406.ch/writing/weeknotes-2023-week-28/" rel="alternate" /><id>https://406.ch/writing/weeknotes-2023-week-28/</id><published>2023-07-12T12:00:00Z</published><updated>2023-07-12T12:00:00Z</updated><summary type="html">&lt;h1 id="weeknotes-2023-week-28"&gt;&lt;a class="toclink" href="#weeknotes-2023-week-28"&gt;Weeknotes (2023 week 28)&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="releases"&gt;&lt;a class="toclink" href="#releases"&gt;Releases&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/html-sanitizer/"&gt;html-sanitizer 2.2&lt;/a&gt;: Made the
  sanitizer&amp;rsquo;s configuration initialization more strict. Strings cannot be used
  anymore in places where the sanitizer expects a set (resp. any iterable).
  It&amp;rsquo;s useful that strings are iterable in Python and I wouldn&amp;rsquo;t want to change
  that, but the fact that &lt;code&gt;("class")&lt;/code&gt; is a string and not a tuple makes me sad.
  The fact that tuples are created by &lt;code&gt;,&lt;/code&gt; and not by &lt;code&gt;()&lt;/code&gt; will always trip up
  people.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/feincms3-language-sites/"&gt;feincms3-language-sites
  0.1&lt;/a&gt;: The version number
  is wrong but whatever. I&amp;rsquo;m certainly happy with the state of things. The big
  change in 0.1 is that &lt;code&gt;Page.get_absolute_url&lt;/code&gt; no longer generates
  protocol-relative URLs. Depending on the value of &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; it
  automatically prepends either &lt;code&gt;http:&lt;/code&gt; or &lt;code&gt;https:&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/django-authlib/"&gt;django-authlib 0.15&lt;/a&gt;:
  django-authlib&amp;rsquo;s admin Single Sign On module now supports a hook to
  automatically create staff users when a matching user doesn&amp;rsquo;t exist already.
  I don&amp;rsquo;t plan to use this functionality myself and I have recommended people
  to implement the functionality themselves using the tools in django-authlib
  if they need it, but the change was so small and well-contained that adding
  it to the core made sense to me.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="pipx-inject"&gt;&lt;a class="toclink" href="#pipx-inject"&gt;pipx inject&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We learned that &lt;a href="https://pypa.github.io/pipx/"&gt;pipx&lt;/a&gt; seems to remember injected
packages even across &lt;code&gt;pipx reinstall&lt;/code&gt; invocations. Not too surprising now that
we know it, but we certainly spent some time scratching our heads. &lt;code&gt;pipx
uninject&lt;/code&gt; was the thing we needed to stop pipx from installing an old version
of a dependency instead of the one being specified in &lt;code&gt;pyproject.toml&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="hatchling-and-data-files"&gt;&lt;a class="toclink" href="#hatchling-and-data-files"&gt;hatchling and data files&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m very confused by the way &lt;a href="https://hatch.pypa.io/"&gt;hatchling&lt;/a&gt; sometimes
includes data files and sometimes it doesn&amp;rsquo;t. I had to add &lt;code&gt;[tool.hatch.build]
include=["authlib/"]&lt;/code&gt; to &lt;a href="https://github.com/matthiask/django-authlib/commit/67d4673e4039eac277b5d2557c0736c1f01442ac"&gt;django-authlib&amp;rsquo;s &lt;code&gt;pyproject.toml&lt;/code&gt;
file&lt;/a&gt;
to make it include HTML files from subpackages. Maybe the subpackages are the
reason, but I&amp;rsquo;m not sure.&lt;/p&gt;
&lt;h2 id="payment-providers-that-must-not-be-named"&gt;&lt;a class="toclink" href="#payment-providers-that-must-not-be-named"&gt;Payment providers that must not be named&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have spent hours and hours battling with the badly documented, incomplete,
inconsistent and confusing API of a (not that well known) payment provider
based in Switzerland. I&amp;rsquo;m surprised that this still happens years and years
after Stripe started offering a really well thought out and documented API
geared towards programmers. It&amp;rsquo;s really sad because when the same structure is
named with differing naming conventions (e.g. &lt;code&gt;snake_case&lt;/code&gt; vs. &lt;code&gt;camelCase&lt;/code&gt;) in
different parts of the API you just know that somebody spent too much time
writing too much code instead of reusing already existing functionality.&lt;/p&gt;</summary></entry></feed>